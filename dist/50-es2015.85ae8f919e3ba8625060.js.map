{"version":3,"sources":["webpack:///src/app/services/budget.service.ts","webpack:///src/app/institute/branch/budget/view-budget-summery/view-budget-summery.component.html","webpack:///src/app/institute/branch/budget/view-budget-summery/view-budget-summery-routing.module.ts","webpack:///src/app/institute/branch/budget/view-budget-summery/view-budget-summery.component.ts","webpack:///src/app/institute/branch/budget/view-budget-summery/view-budget-summery.module.ts"],"names":["BudgetService","httpService","month","this","searchMonth","year","searchYear","branch","httpPost","api","data","pipe","response","err","budget","id","routes","path","component","ViewBudgetSummeryComponent","budgetService","branchService","dateService","router","route","loading","budgetSummery","branchId","getBranchId","getMonth","getYear","searchBudget","back","getBudgetSummery","subscribe","error","totalIncome","forEach","curBudgetSummery","type","amount","totalExpense","getTotalIncome","getTotalExpense","budgetSummeryLength","length","formatDate","date","window","print","navigate","relativeTo","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","ViewBudgetSummeryRoutingModule","forChild","ViewBudgetSummeryModule"],"mappings":"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","file":"x","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpService } from './shared-services/http.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetService {\n  private searchMonth: string;\n  private searchYear: string;\n\n  setMonth(month: string) {\n    this.searchMonth = month;\n  }\n  getMonth() {\n    return this.searchMonth;\n  }\n\n  setYear(year: string) {\n    this.searchYear = year;\n  }\n\n  getYear() {\n    return this.searchYear;\n  }\n\n  constructor(private httpService: HttpService) {}\n\n  getBudgetForBranch(branch: string, month: string, year: string) {\n    const data = { api: 'getBudgetForBranch', data: { branch, month, year } };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n\n  getBudgetForBranchDashboard(branch: string, year: string) {\n    const data = { api: 'getBudgetForBranchDashboard', data: { branch, year } };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n\n  getBudgetSummery(branch: string, month: string, year: string) {\n    const data = { api: 'getBudgetSummery', data: { branch, month, year } };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n\n  saveBudget(budget: any) {\n    const data = { api: 'saveBudget', data: budget };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n\n  deleteBudget(id: string) {\n    const data = { api: 'deleteBudget', data: { id } };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n}\n","<nb-card>\r\n  <nb-card-header>\r\n    <button class=\"float-right\" nbButton size=\"small\" status=\"warning\" (click)=\"back()\">\r\n      Back\r\n    </button>\r\n    <h4>\r\n      BUDGET SUMMERY <small>{{ getDuration() }}</small>\r\n    </h4>\r\n  </nb-card-header>\r\n  <nb-card-body>\r\n    <div class=\"table-responsive\" *ngIf=\"budgetSummery.length > 0; else noBudgetSummery\">\r\n      <table class=\"table table-sm\">\r\n        <thead class=\"table-heading\">\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Date</th>\r\n            <th>Title</th>\r\n            <th>Income</th>\r\n            <th>Expense</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let curBudgetSummery of budgetSummery; let i = index\">\r\n            <td>{{ i + 1 }}</td>\r\n            <td>{{ dateService.formatDate(curBudgetSummery.date) }}</td>\r\n            <td>{{ curBudgetSummery.title }}</td>\r\n            <td>\r\n              {{ curBudgetSummery.type === 'income' ? curBudgetSummery.amount : '' }}\r\n            </td>\r\n            <td>\r\n              {{ curBudgetSummery.type === 'expense' ? curBudgetSummery.amount : '' }}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td colspan=\"3\"><strong>Total</strong></td>\r\n            <td>\r\n              <strong>{{ getTotalIncome() }}</strong>\r\n            </td>\r\n            <td>\r\n              <strong>{{ getTotalExpense() }}</strong>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <ng-template #noBudgetSummery>\r\n      <p class=\"text-center pt-2\">No Budget Summery Available</p>\r\n    </ng-template>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { ViewBudgetSummeryComponent } from './view-budget-summery.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: ViewBudgetSummeryComponent },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ViewBudgetSummeryRoutingModule {}\n","import { DateService } from './../../../../services/shared-services/date.service';\nimport { BranchService } from './../../../../services/branch.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { BudgetService } from '../../../../services/budget.service';\nimport { BudgetModel } from '../../../../models/budget.model';\n\n@Component({\n  selector: 'ngx-view-budget-summery',\n  templateUrl: './view-budget-summery.component.html',\n  styleUrls: ['./view-budget-summery.component.scss'],\n})\nexport class ViewBudgetSummeryComponent implements OnInit {\n  loading: boolean;\n  budgetSummery: BudgetModel[];\n\n  month: string;\n  year: string;\n  branchId: string;\n\n  constructor(\n    private budgetService: BudgetService,\n    private branchService: BranchService,\n    public dateService: DateService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n\n    this.budgetSummery = [];\n\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.month = this.budgetService.getMonth();\n    this.year = this.budgetService.getYear();\n\n    this.searchBudget();\n  }\n\n  searchBudget() {\n    this.budgetService.getBudgetSummery(this.branchId, this.month, this.year).subscribe(\n      (budget: BudgetModel[]) => {\n        this.budgetSummery = budget;\n        this.loading = false;\n      },\n      (error: any) => {\n        this.loading = false;\n      },\n    );\n  }\n\n  getTotalIncome() {\n    let totalIncome = 0;\n    this.budgetSummery.forEach((curBudgetSummery: BudgetModel) => {\n      if (curBudgetSummery.type === 'income') {\n        totalIncome += curBudgetSummery.amount;\n      }\n    });\n    return totalIncome;\n  }\n\n  getTotalExpense() {\n    let totalExpense = 0;\n    this.budgetSummery.forEach((curBudgetSummery: BudgetModel) => {\n      if (curBudgetSummery.type === 'expense') {\n        totalExpense += curBudgetSummery.amount;\n      }\n    });\n    return totalExpense;\n  }\n\n  getTotalBalance() {\n    const totalIncomes = this.getTotalIncome();\n    const totalExpenses = this.getTotalExpense();\n    return totalIncomes - totalExpenses;\n  }\n\n  getDuration() {\n    const budgetSummeryLength = this.budgetSummery.length;\n    if (budgetSummeryLength > 0) {\n      const fromDate = this.dateService.formatDate(this.budgetSummery[0].date);\n      const toDate = this.dateService.formatDate(this.budgetSummery[budgetSummeryLength - 1].date);\n      return ' From ' + fromDate + ' To ' + toDate;\n    }\n    return '';\n  }\n\n  print() {\n    window.print();\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n}\n","import { NbCardModule, NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ViewBudgetSummeryRoutingModule } from './view-budget-summery-routing.module';\nimport { ViewBudgetSummeryComponent } from './view-budget-summery.component';\n\n@NgModule({\n  declarations: [ViewBudgetSummeryComponent],\n  imports: [\n    CommonModule,\n    ViewBudgetSummeryRoutingModule,\n    NbCardModule,\n    NbButtonModule,\n    NbIconModule,\n  ],\n})\nexport class ViewBudgetSummeryModule {}\n"]}