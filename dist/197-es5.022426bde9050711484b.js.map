{"version":3,"sources":["webpack:///src/app/institute/branch/schedule/batch-schedule/manage-batch-schedule/manage-batch-schedule.component.html","webpack:///src/app/institute/branch/schedule/batch-schedule/manage-batch-schedule/manage-batch-schedule-routing.module.ts","webpack:///src/app/institute/branch/schedule/batch-schedule/manage-batch-schedule/manage-batch-schedule.component.ts","webpack:///src/app/institute/branch/schedule/batch-schedule/manage-batch-schedule/manage-batch-schedule.module.ts"],"names":["ManageBatchScheduleComponent","ManageBatchScheduleModule","ManageBatchScheduleRoutingModule","routes","path","component","branchService","scheduleService","courseService","batchService","dateService","router","route","toastrService","this","loading","branchId","getBranchId","getCategoryData","subscribe","category","getCourseData","course","getBatchData","batch","days","schedules","setCurDate","getDate","changeScheduleCalenderType","getSchedule","navigate","relativeTo","date","curDate","curMonth","getMonth","curYear","getFullYear","currentDate","Date","scheduleCalenderType","startDate","setDate","getDay","calcNoOfDays","noOfDays","daysInMonth","i","millisecondsToDate","dateToMilliseconds","push","toString","substring","headerDate","firstDay","lastDay","split","setStartDate","nextDate","previousDate","nextDay","nextWeek","nextMonth","previousDay","previousWeek","previousMonth","type","iMonth","iYear","startTime","endTime","formatTime","teacher","subject","mySubject","subjects","find","curSubject","_id","day","setScheduleDay","queryParams","mode","schedule","setScheduleId","setScheduleData","id","deleteSchedule","res","index","findIndex","splice","showToastr","error","convertToDateString","endDate","addDaysInDate","getAllSchedules","reverseDate","filter","position","status","message","show","addSchedule","previous","goToToday","next","forChild"],"mappings":"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","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>\n          Schedule of <small>{{ batch.basicDetails.batchName }}</small>\n        </h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button nbButton size=\"small\" fullWidth (click)=\"addSchedule()\" status=\"primary\">\n          Add Schedule\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body>\n    <nb-card>\n      <nb-card-header>\n        <div class=\"row\">\n          <div class=\"col-md-3 pt-2\">\n            <div class=\"btn-group\">\n              <button nbButton size=\"small\" status=\"primary\" (click)=\"previous()\">\n                <nb-icon icon=\"arrow-ios-back-outline\"></nb-icon>\n              </button>\n              <button nbButton size=\"small\" status=\"primary\" (click)=\"goToToday()\">\n                Today\n              </button>\n              <button nbButton size=\"small\" status=\"primary\" (click)=\"next()\">\n                <nb-icon icon=\"arrow-ios-forward-outline\"></nb-icon>\n              </button>\n            </div>\n          </div>\n\n          <div class=\"col-md-5 pt-2\">\n            <h5 class=\"text-center\">{{ headerDate() }}</h5>\n          </div>\n\n          <div class=\"col-md-4 pt-2\">\n            <div class=\"btn-group\">\n              <button\n                nbButton\n                size=\"small\"\n                status=\"primary\"\n                (click)=\"changeScheduleCalenderType(0)\"\n              >\n                Day\n              </button>\n              <button\n                nbButton\n                size=\"small\"\n                status=\"primary\"\n                (click)=\"changeScheduleCalenderType(1)\"\n              >\n                Week\n              </button>\n              <button\n                nbButton\n                size=\"small\"\n                status=\"primary\"\n                (click)=\"changeScheduleCalenderType(2)\"\n              >\n                Month\n              </button>\n            </div>\n          </div>\n        </div>\n      </nb-card-header>\n    </nb-card>\n\n    <nb-accordion status=\"basic\" multi>\n      <nb-accordion-item *ngFor=\"let day of days; let i = index\">\n        <nb-accordion-item-header>\n          <div class=\"row accordion-header-item\">\n            <div class=\"col-12\">\n              <button\n                nbButton\n                size=\"small\"\n                class=\"float-right\"\n                status=\"primary\"\n                (click)=\"addScheduleOfDay(day)\"\n              >\n                <nb-icon nbTooltip=\"Add Schedule\" icon=\"plus-outline\"></nb-icon>\n              </button>\n              <span>{{ day }}</span>\n            </div>\n          </div>\n        </nb-accordion-item-header>\n        <nb-accordion-item-body>\n          <div\n            class=\"table-responsive\"\n            *ngIf=\"getFilteredSchedule(day).length > 0; else noSchedule\"\n          >\n            <table class=\"table\">\n              <tr *ngFor=\"let schedule of getFilteredSchedule(day)\">\n                <td>{{ getTime(schedule.startTime, schedule.endTime) }}</td>\n                <td>{{ getSubject(schedule.subject) }}</td>\n                <td>{{ schedule.topic }}</td>\n                <td>{{ getTeacher(schedule.teacher) }}</td>\n                <td>\n                  <button status=\"basic\" nbButton size=\"small\" (click)=\"editSchedule(schedule)\">\n                    Edit\n                  </button>\n                </td>\n                <td>\n                  <button\n                    status=\"danger\"\n                    nbButton\n                    size=\"small\"\n                    (click)=\"deleteSchedule(schedule._id)\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            </table>\n          </div>\n          <ng-template #noSchedule>\n            <p class=\"text-center pt-5 pb-5\">No Schedule</p>\n          </ng-template>\n        </nb-accordion-item-body>\n      </nb-accordion-item>\n    </nb-accordion>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManageBatchScheduleComponent } from './manage-batch-schedule.component';\n\nconst routes: Routes = [{ path: '', component: ManageBatchScheduleComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageBatchScheduleRoutingModule {}\n","import { NbToastrService } from '@nebular/theme';\nimport { BatchModel } from './../../../../../models/batch.model';\nimport { CategoryModel } from './../../../../../models/branch.model';\nimport { CourseModel, SubjectModel } from './../../../../../models/course.model';\nimport { CourseService } from './../../../../../services/course.service';\nimport { ScheduleService } from './../../../../../services/schedule.service';\nimport { ScheduleModel } from './../../../../../models/schedule.model';\nimport { DateService } from './../../../../../services/shared-services/date.service';\nimport { Component, OnInit } from '@angular/core';\nimport { BranchService } from './../../../../../services/branch.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BatchService } from '../../../../../services/batch.service';\n\n@Component({\n  selector: 'ngx-manage-batch-schedule',\n  templateUrl: './manage-batch-schedule.component.html',\n  styleUrls: ['./manage-batch-schedule.component.scss'],\n})\nexport class ManageBatchScheduleComponent implements OnInit {\n  loading: boolean;\n  branchId: string;\n\n  category: CategoryModel;\n  course: CourseModel;\n  batch: BatchModel;\n\n  curDate: Date;\n  curMonth: number;\n  curYear: number;\n\n  startDate: Date;\n\n  schedules: ScheduleModel[];\n\n  scheduleCalenderType: number;\n\n  noOfDays: number;\n  days: string[];\n\n  constructor(\n    private branchService: BranchService,\n    private scheduleService: ScheduleService,\n    private courseService: CourseService,\n    private batchService: BatchService,\n    public dateService: DateService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: NbToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.router.navigate(['../'], { relativeTo: this.route });\n      return;\n    }\n\n    this.branchService.getCategoryData().subscribe((category: CategoryModel) => {\n      this.category = category;\n    });\n\n    this.courseService.getCourseData().subscribe((course: CourseModel) => {\n      this.course = course;\n    });\n\n    this.batchService.getBatchData().subscribe((batch: BatchModel) => {\n      this.batch = batch;\n    });\n\n    this.days = [];\n    this.schedules = [];\n\n    this.setCurDate(this.dateService.getDate());\n    this.changeScheduleCalenderType(0);\n\n    this.getSchedule();\n  }\n\n  setCurDate(date: Date) {\n    this.curDate = date;\n    this.curMonth = this.curDate.getMonth();\n    this.curYear = this.curDate.getFullYear();\n  }\n\n  setStartDate() {\n    const currentDate = new Date(this.curDate);\n    if (this.scheduleCalenderType === 0) {\n      this.startDate = new Date(currentDate);\n    } else if (this.scheduleCalenderType === 1) {\n      currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n      this.startDate = new Date(currentDate);\n    } else {\n      currentDate.setDate(1);\n      this.startDate = new Date(currentDate);\n    }\n    this.calcNoOfDays();\n    this.getSchedule();\n  }\n\n  calcNoOfDays() {\n    let noOfDays: number;\n    if (this.scheduleCalenderType === 0) {\n      noOfDays = 1;\n    } else if (this.scheduleCalenderType === 1) {\n      noOfDays = 7;\n    } else {\n      noOfDays = this.daysInMonth(this.curMonth, this.curYear);\n    }\n    this.noOfDays = noOfDays;\n\n    const day = 24 * 60 * 60 * 1000;\n\n    this.days = [];\n\n    for (let i = 0; i < noOfDays; i++) {\n      const date = this.dateService.millisecondsToDate(\n        this.dateService.dateToMilliseconds(this.startDate) + i * day,\n      );\n      this.days.push(date.toString().substring(0, 15));\n    }\n  }\n\n  headerDate(): string {\n    let headerDate: string;\n    if (this.scheduleCalenderType === 0) {\n      headerDate = this.curDate.toString().substring(4, 15);\n    } else if (this.scheduleCalenderType === 1) {\n      const currentDate = this.curDate;\n      currentDate.setDate(currentDate.getDate() - currentDate.getDay());\n      let date = new Date(currentDate);\n      let firstDay = date.toString().substring(4, 10);\n      if (date.getDate() > 25 && date.getMonth() === 11) {\n        firstDay = firstDay + ', ' + date.getFullYear();\n      }\n\n      currentDate.setDate(currentDate.getDate() + 6);\n      date = new Date(currentDate);\n\n      let lastDay = date.toString().substring(4, 10);\n      if (firstDay.split(',')[1]) {\n        lastDay = lastDay + ', ' + date.getFullYear();\n      }\n\n      headerDate = firstDay + ' - ' + lastDay;\n    } else {\n      headerDate = this.dateService.getMonth(this.curMonth) + ' ' + this.curYear;\n    }\n    return headerDate;\n  }\n\n  goToToday() {\n    this.setCurDate(this.dateService.getDate());\n    this.setStartDate();\n  }\n\n  nextMonth() {\n    this.curYear = this.curMonth === 11 ? this.curYear + 1 : this.curYear;\n    this.curMonth = (this.curMonth + 1) % 12;\n    this.curDate = new Date(this.curYear, this.curMonth, 1);\n  }\n\n  previousMonth() {\n    this.curYear = this.curMonth === 0 ? this.curYear - 1 : this.curYear;\n    this.curMonth = this.curMonth === 0 ? 11 : this.curMonth - 1;\n    this.curDate = new Date(this.curYear, this.curMonth, 1);\n  }\n\n  nextWeek() {\n    const nextDate: number = new Date(this.curDate).getDate() + 7;\n    const date = new Date(this.curDate).setDate(nextDate);\n    this.setCurDate(new Date(date));\n  }\n\n  previousWeek() {\n    const previousDate: number = new Date(this.curDate).getDate() - 7;\n    const date = new Date(this.curDate).setDate(previousDate);\n    this.setCurDate(new Date(date));\n  }\n\n  nextDay() {\n    const nextDate: number = new Date(this.curDate).getDate() + 1;\n    const date = new Date(this.curDate).setDate(nextDate);\n    this.setCurDate(new Date(date));\n  }\n\n  previousDay() {\n    const previousDate: number = new Date(this.curDate).getDate() - 1;\n    const date = new Date(this.curDate).setDate(previousDate);\n    this.setCurDate(new Date(date));\n  }\n\n  next() {\n    if (this.scheduleCalenderType === 0) {\n      this.nextDay();\n    } else if (this.scheduleCalenderType === 1) {\n      this.nextWeek();\n    } else {\n      this.nextMonth();\n    }\n    this.setStartDate();\n  }\n\n  previous() {\n    if (this.scheduleCalenderType === 0) {\n      this.previousDay();\n    } else if (this.scheduleCalenderType === 1) {\n      this.previousWeek();\n    } else {\n      this.previousMonth();\n    }\n    this.setStartDate();\n  }\n\n  changeScheduleCalenderType(type: number) {\n    this.scheduleCalenderType = type;\n    this.setStartDate();\n  }\n\n  daysInMonth(iMonth: number, iYear: number): number {\n    const daysInMonth = 32 - new Date(iYear, iMonth, 32).getDate();\n    return daysInMonth;\n  }\n\n  getTime(startTime: string, endTime: string) {\n    startTime = this.dateService.formatTime(startTime);\n    endTime = this.dateService.formatTime(endTime);\n    return startTime + ' - ' + endTime;\n  }\n\n  getTeacher(teacher: string) {\n    return teacher;\n  }\n\n  getSubject(subject: string) {\n    const mySubject = this.course.subjects.find(\n      (curSubject: SubjectModel) => curSubject._id === subject,\n    );\n\n    if (!mySubject) {\n      return '--';\n    }\n\n    return mySubject.subject;\n  }\n\n  addSchedule() {\n    this.router.navigate(['../add'], { relativeTo: this.route });\n  }\n\n  addScheduleOfDay(day: string) {\n    this.scheduleService.setScheduleDay(day);\n    this.router.navigate(['../add'], { relativeTo: this.route, queryParams: { mode: 'date' } });\n  }\n\n  editSchedule(schedule: ScheduleModel) {\n    this.scheduleService.setScheduleId(schedule._id);\n    this.scheduleService.setScheduleData(schedule);\n    this.router.navigate(['../edit'], { relativeTo: this.route, queryParams: { mode: 'edit' } });\n  }\n\n  deleteSchedule(id: string) {\n    this.scheduleService.deleteSchedule(id).subscribe(\n      (res: any) => {\n        const index = this.schedules.findIndex((schedule: ScheduleModel) => schedule._id === id);\n        if (index >= 0) {\n          this.schedules.splice(index, 1);\n          this.showToastr('top-right', 'success', 'Schedule Deleted Successfully');\n        }\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n      },\n    );\n  }\n\n  getSchedule() {\n    const startDate = this.dateService.convertToDateString(this.startDate);\n    const endDate = this.dateService.convertToDateString(\n      this.dateService.addDaysInDate(this.startDate, this.noOfDays),\n    );\n    this.loading = true;\n    this.scheduleService\n      .getAllSchedules(\n        this.branchId,\n        this.category._id,\n        this.course._id,\n        this.batch._id,\n        this.dateService.reverseDate(startDate),\n        this.dateService.reverseDate(endDate),\n      )\n      .subscribe(\n        (schedules: ScheduleModel[]) => {\n          this.schedules = schedules;\n          this.loading = false;\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.loading = false;\n        },\n      );\n  }\n\n  getFilteredSchedule(date: any) {\n    date = this.dateService.convertToDateString(date);\n    const schedules: ScheduleModel[] = this.schedules.filter(\n      (schedule: ScheduleModel) => schedule.date === date,\n    );\n    return schedules;\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import { ManageBatchScheduleComponent } from './manage-batch-schedule.component';\nimport {\n  NbCardModule,\n  NbButtonModule,\n  NbInputModule,\n  NbAccordionModule,\n  NbFormFieldModule,\n  NbIconModule,\n  NbTooltipModule,\n} from '@nebular/theme';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageBatchScheduleRoutingModule } from './manage-batch-schedule-routing.module';\n\n@NgModule({\n  declarations: [ManageBatchScheduleComponent],\n  imports: [\n    CommonModule,\n    ManageBatchScheduleRoutingModule,\n    NbCardModule,\n    NbTooltipModule,\n    NbIconModule,\n    NbButtonModule,\n    NbInputModule,\n    NbAccordionModule,\n    NbFormFieldModule,\n  ],\n})\nexport class ManageBatchScheduleModule {}\n"]}