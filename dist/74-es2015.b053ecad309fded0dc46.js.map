{"version":3,"sources":["webpack:///src/app/employee/branch/assignment/assignment-routing.module.ts","webpack:///src/app/employee/branch/assignment/assignment.component.ts","webpack:///src/app/employee/branch/assignment/assignment.component.html","webpack:///src/app/employee/branch/assignment/assignment.module.ts"],"names":["routes","path","component","AssignmentComponent","branchService","branchEmployeeService","lectureService","courseService","batchService","subjectService","router","route","this","loading","branchId","getBranchId","getCourses","subscribe","courses","setCoursesData","error","getBatches","batches","setBatchesData","getBranchEmployeesForBatch","employees","setBranchEmployeesData","back","navigate","relativeTo","deleteCourseData","deleteBatchData","deleteSubjectsData","setSearchDate","children","loadChildren","then","m","BatchAssignmentModule","ManageAssignmentModule","AssignmentSubmissionModule","SaveAssignmentModule","redirectTo","pathMatch","PageNotFoundModule","AssignmentRoutingModule","forChild","AssignmentModule"],"mappings":"oQAIA,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCUG,M,MAAMC,EAIX,YACUC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAPA,KAAAP,gBACA,KAAAC,wBACA,KAAAC,iBACA,KAAAC,gBACA,KAAAC,eACA,KAAAC,iBACA,KAAAC,SACA,KAAAC,QAGV,WACEC,KAAKC,SAAU,EACfD,KAAKE,SAAWF,KAAKR,cAAcW,cAC9BH,KAAKE,UAKVF,KAAKL,cAAcS,WAAWJ,KAAKE,SAAU,IAAIG,UAC9CC,IACCN,KAAKL,cAAcY,eAAeD,GAClCN,KAAKC,SAAU,GAEhBO,OAGHR,KAAKJ,aAAaa,WAAWT,KAAKE,SAAU,GAAI,IAAIG,UACjDK,IACCV,KAAKJ,aAAae,eAAeD,IAElCF,OAGHR,KAAKP,sBAAsBmB,2BAA2BZ,KAAKE,SAAU,WAAWG,UAC7EQ,IACCb,KAAKP,sBAAsBqB,uBAAuBD,GAClDb,KAAKC,SAAU,GAEhBO,IACCR,KAAKe,UAzBPf,KAAKe,OA8BT,OACEf,KAAKF,OAAOkB,SAAS,CAAC,OAAQ,CAAEC,WAAYjB,KAAKD,QAGnD,cACEC,KAAKL,cAAcuB,mBACnBlB,KAAKJ,aAAauB,kBAClBnB,KAAKH,eAAeuB,qBACpBpB,KAAKN,eAAe2B,cAAc,O,6CAzDzB9B,GAAmB,kT,mDAAnBA,EAAmB,0ECjBhC,6C,kCDiBO,GDTH+B,SAAU,CACR,CACEjC,KAAM,QACNkC,aAAc,IACZ,kCAAqDC,KAAMC,GAAMA,EAAEC,wBAGvE,CACErC,KAAM,SACNkC,aAAc,IACZ,wDAAuDC,KACpDC,GAAMA,EAAEE,yBAIf,CACEtC,KAAM,aACNkC,aAAc,IACZ,wDAA+DC,KAC5DC,GAAMA,EAAEG,6BAIf,CACEvC,KAAM,MACNkC,aAAc,IACZ,uDAAmDC,KAAMC,GAAMA,EAAEI,uBAGrE,CACExC,KAAM,OACNkC,aAAc,IACZ,uDAAmDC,KAAMC,GAAMA,EAAEI,uBAGrE,CACExC,KAAM,GACNyC,WAAY,QACZC,UAAW,QAGb,CACE1C,KAAM,iBACNkC,aAAc,IACZ,iCAA+DC,KAC5DC,GAAMA,EAAEO,qBAIf,CACE3C,KAAM,KACNyC,WAAY,iBACZC,UAAW,WAUZ,Y,MAAME,G,yDAAAA,I,+EAAAA,IAAuB,SAHzB,CAAC,IAAaC,SAAS9C,IACtB,O,GAEL,GGxDA,Q,MAAM+C,G,yDAAAA,I,+EAAAA,IAAgB,SALlB,CACP,IACA,M,GAGG","file":"x","sourcesContent":["import { AssignmentComponent } from './assignment.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AssignmentComponent,\n    children: [\n      {\n        path: 'batch',\n        loadChildren: () =>\n          import('./batch-assignment/batch-assignment.module').then((m) => m.BatchAssignmentModule),\n      },\n\n      {\n        path: 'manage',\n        loadChildren: () =>\n          import('./manage-assignment/manage-assignment.module').then(\n            (m) => m.ManageAssignmentModule,\n          ),\n      },\n\n      {\n        path: 'submission',\n        loadChildren: () =>\n          import('./assignment-submission/assignment-submission.module').then(\n            (m) => m.AssignmentSubmissionModule,\n          ),\n      },\n\n      {\n        path: 'add',\n        loadChildren: () =>\n          import('./save-assignment/save-assignment.module').then((m) => m.SaveAssignmentModule),\n      },\n\n      {\n        path: 'edit',\n        loadChildren: () =>\n          import('./save-assignment/save-assignment.module').then((m) => m.SaveAssignmentModule),\n      },\n\n      {\n        path: '',\n        redirectTo: 'batch',\n        pathMatch: 'full',\n      },\n\n      {\n        path: 'page-not-found',\n        loadChildren: () =>\n          import('../../../shared/page-not-found/page-not-found.module').then(\n            (m) => m.PageNotFoundModule,\n          ),\n      },\n\n      {\n        path: '**',\n        redirectTo: 'page-not-found',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AssignmentRoutingModule {}\n","import { SubjectService } from './../../../services/subject.service';\r\nimport { LectureService } from './../../../services/lecture.service';\r\nimport { BranchEmployeeService } from './../../../services/branch-employee.service';\r\nimport { BranchEmployeeModel } from './../../../models/branch-employee.model';\r\nimport { BatchModel } from './../../../models/batch.model';\r\nimport { CourseModel } from './../../../models/course.model';\r\nimport { CourseService } from './../../../services/course.service';\r\nimport { BatchService } from './../../../services/batch.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { BranchService } from './../../../services/branch.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ngx-assignment',\r\n  templateUrl: './assignment.component.html',\r\n  styleUrls: ['./assignment.component.scss'],\r\n})\r\nexport class AssignmentComponent implements OnInit, OnDestroy {\r\n  loading: boolean;\r\n  private branchId: string;\r\n\r\n  constructor(\r\n    private branchService: BranchService,\r\n    private branchEmployeeService: BranchEmployeeService,\r\n    private lectureService: LectureService,\r\n    private courseService: CourseService,\r\n    private batchService: BatchService,\r\n    private subjectService: SubjectService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.branchId = this.branchService.getBranchId();\r\n    if (!this.branchId) {\r\n      this.back();\r\n      return;\r\n    }\r\n\r\n    this.courseService.getCourses(this.branchId, '').subscribe(\r\n      (courses: CourseModel[]) => {\r\n        this.courseService.setCoursesData(courses);\r\n        this.loading = false;\r\n      },\r\n      (error: any) => {},\r\n    );\r\n\r\n    this.batchService.getBatches(this.branchId, '', '').subscribe(\r\n      (batches: BatchModel[]) => {\r\n        this.batchService.setBatchesData(batches);\r\n      },\r\n      (error: any) => {},\r\n    );\r\n\r\n    this.branchEmployeeService.getBranchEmployeesForBatch(this.branchId, 'teacher').subscribe(\r\n      (employees: BranchEmployeeModel[]) => {\r\n        this.branchEmployeeService.setBranchEmployeesData(employees);\r\n        this.loading = false;\r\n      },\r\n      (error: any) => {\r\n        this.back();\r\n      },\r\n    );\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['../'], { relativeTo: this.route });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.courseService.deleteCourseData();\r\n    this.batchService.deleteBatchData();\r\n    this.subjectService.deleteSubjectsData();\r\n    this.lectureService.setSearchDate(null);\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AssignmentRoutingModule } from './assignment-routing.module';\nimport { AssignmentComponent } from './assignment.component';\n\n\n@NgModule({\n  declarations: [AssignmentComponent],\n  imports: [\n    CommonModule,\n    AssignmentRoutingModule\n  ]\n})\nexport class AssignmentModule { }\n"]}