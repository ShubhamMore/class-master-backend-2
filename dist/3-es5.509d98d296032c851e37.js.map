{"version":3,"sources":["webpack:///node_modules/bson/dist/bson.browser.esm.js"],"names":["commonjsGlobal","globalThis","window","global","self","unwrapExports","x","__esModule","Object","prototype","hasOwnProperty","call","createCommonjsModule","fn","module","exports","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","encodeChunk","uint8","start","end","num","output","push","join","ieee754","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","customInspectSymbol","Symbol","createBuffer","RangeError","buf","setPrototypeOf","Buffer","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","ArrayBuffer","isView","fromArrayLike","babelHelpers","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","copy","numberIsNaN","type","isArray","data","toPrimitive","assertSize","size","array","byteOffset","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","latin1Write","base64Write","ucs2Write","units","hi","tmp","extraBytes","parts","len2","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","max","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","SlowBuffer","alloc","INSPECT_MAX_BYTES","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","Error","toJSON","_arr","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","leadSurrogate","b64","lens","validLen","placeHoldersLen","curByte","base64Js","split","src","dst","constructor","name","table","i16","require$$0","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","isString","primitive","simple","JSON","stringify","isNull","keys","visibleKeys","hash","forEach","idx","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","Date","base","braces","toUTCString","l","formatProperty","key","match","map","pop","reduce","prev","cur","desc","getOwnPropertyDescriptor","line","re","isObject","objectToString","o","origin","add","prop","utils","insecureRandomBytes","result","random","deprecate","isObjectLike","haveBuffer","isBigUInt64Array","isBigInt64Array","isUint8Array","randomBytes","normalizedFunctionString","crypto","getRandomValues","candidate","_a","message","msg","process","warned","args","warn","ensure_buffer","ensureBuffer","potentialBuffer","uuid","parseUUID","UUID_RX","test","v","binary","Binary","buffer$1","subType","sub_type","BSON_BINARY_SUBTYPE_DEFAULT","BUFFER_SIZE","position","byteValue","decodedByte","sequence","asRaw","format","options","base64String","legacy","$binary","$type","base64","doc","$uuid","SUBTYPE_DEFAULT","SUBTYPE_FUNCTION","SUBTYPE_BYTE_ARRAY","SUBTYPE_UUID_OLD","SUBTYPE_UUID","SUBTYPE_MD5","SUBTYPE_USER_DEFINED","code$1","Code","scope","$code","$scope","codeJson","db_ref","DBRef","isDBRefLike","collection","oid","db","fields","shift","assign","$ref","$id","$db","namespace","long_1","Long","wasm","WebAssembly","Instance","Module","INT_CACHE","UINT_CACHE","unsigned","low","high","configurable","writable","addend","isLong","fromValue","c48","c32","c16","c00","fromBits","other","eq","thisNeg","isNegative","otherNeg","divisor","isZero","div_u","div_s","get_high","UZERO","ZERO","approx","rem","toUnsigned","gt","shru","UONE","MIN_VALUE","ONE","NEG_ONE","shr","div","shl","neg","gte","toNumber","log2","ceil","delta","approxRes","fromNumber","approxRem","divide","getNumBitsAbs","bit","comp","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","rem_u","rem_s","modulo","multiplier","isOdd","lt","TWO_PWR_24","a32","a16","a00","b32","b16","b00","multiply","not","negate","notEquals","numBits","toInt","shiftLeft","shiftRight","shiftRightUnsigned","subtrahend","subtract","TWO_PWR_16_DBL","BigInt","le","toBytesLE","toBytesBE","lo","radix","radixLong","rem1","radixToPower","remDiv","digits","relaxed","$numberLong","lowBits","highBits","cachedObj","cache","TWO_PWR_32_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_64_DBL","MAX_VALUE","fromString","p","substring","power","fromBytesLE","fromBytesBE","fromInt","decimal128","Decimal128","PARSE_STRING_REGEXP","PARSE_INF_REGEXP","PARSE_NAN_REGEXP","NAN_BUFFER","reverse","INF_NEGATIVE_BUFFER","INF_POSITIVE_BUFFER","EXPONENT_REGEX","isDigit","divideu128","DIVISOR","_rem","quotient","invalidErr","biased_exponent","significand_digits","significand","significand_msb","k","index","is_zero","significand128","midl","midh","combination","exponent","least_digits","scientific_exponent","radix_position","$numberDecimal","representation","biasedExponent","sawRadix","foundNonZero","significantDigits","nDigitsRead","nDigits","radixPosition","firstNonZero","nDigitsStored","digitsInsert","firstDigit","lastDigit","significandHigh","significandLow","stringMatch","infMatch","nanMatch","unsignedNumber","expSign","expNumber","endOfString","roundDigit","roundBit","dIdx","left","right","uhleft","uhright","leftHigh","leftLow","getLowBits","rightHigh","rightLow","productHigh","productMid","productMid2","productLow","dec","and","or","double_1","Double","is","sign","$numberDouble","toFixed","isInteger","toExponential","toUpperCase","toExtendedJSON","doubleValue","parseFloat","int_32","Int32","$numberInt","max_key","MaxKey","$maxKey","min_key","MinKey","$minKey","objectid","ObjectId","PROCESS_UNIQUE","checkForHexRegExp","hexTable","decodeLookup","kId","id","__id","toHexString","generate","cacheHexString","hexString","otherId","isValid","timestamp","time","setTime","$oid","now","inc","getInc","regexp","BSONRegExp","pattern","sort","$regex","$options","$regularExpression","parseOptions","_bsontype","symbol","BSONSymbol","$symbol","timestamp$1","Timestamp","LongWithoutOverridesClass","$timestamp","t","getHighBits","optRadix","extended_json","isBSONType","Reflect","has","EJSON","keysToCodecs","getISOString","date","isoStr","toISOString","getUTCMilliseconds","BSON_TYPE_MAPPINGS","low_","high_","unsigned_","ObjectID","parse","text","finalOptions","strict","_key","deserializeValue","$undefined","filter","startsWith","fromExtendedJSON","$date","$dbPointer","dollarKeys","valid","replacer","space","serializeValue","dateNum","getTime","inRange","int64Range","flags","source","bsontype","_doc","outDoc","mapper","serialize","deserialize","ejson","bsonMap","Map","check","potentialGlobal","bsonGlobal","Function","_keys","_values","entry","splice","next","done","callback","constants","BSON_BINARY_SUBTYPE_USER_DEFINED","BSON_BINARY_SUBTYPE_MD5","BSON_BINARY_SUBTYPE_UUID_NEW","BSON_BINARY_SUBTYPE_UUID","BSON_BINARY_SUBTYPE_BYTE_ARRAY","BSON_BINARY_SUBTYPE_FUNCTION","BSON_DATA_MAX_KEY","BSON_DATA_MIN_KEY","BSON_DATA_DECIMAL128","BSON_DATA_LONG","BSON_DATA_TIMESTAMP","BSON_DATA_INT","BSON_DATA_CODE_W_SCOPE","BSON_DATA_SYMBOL","BSON_DATA_CODE","BSON_DATA_DBPOINTER","BSON_DATA_REGEXP","BSON_DATA_NULL","BSON_DATA_DATE","BSON_DATA_BOOLEAN","BSON_DATA_OID","BSON_DATA_UNDEFINED","BSON_DATA_BINARY","BSON_DATA_ARRAY","BSON_DATA_OBJECT","BSON_DATA_STRING","BSON_DATA_NUMBER","JS_INT_MIN","JS_INT_MAX","BSON_INT64_MIN","BSON_INT64_MAX","BSON_INT32_MIN","BSON_INT32_MAX","calculate_size","calculateObjectSize","object","serializeFunctions","ignoreUndefined","totalLength","calculateElement","toBSON","ordered_values","ignoreCase","multiline","validate_utf8","validateUtf8","continuation","byte","deserializer","JS_INT_MAX_LONG","JS_INT_MIN_LONG","functionCache","deserializeObject","evalFunctions","cacheFunctions","fieldsAsRaw","raw","bsonRegExp","promoteBuffers","promoteLongs","promoteValues","startIndex","arrayIndex","elementType","stringSize","_index","objectSize","arrayOptions","stopIndex","long","decimal128$1","toObject","binarySize","totalBinarySize","_buffer","regExpOptions","optionsArray","symbol$1","functionString","isolateEval","totalSize","scopeObject","oidBuffer","bind","allowObjectSmallerThanBufferSize","float_parser","writeIEEE754","readIEEE754","endian","bBE","serializer","serializeInto","ignoreKeys","Set","serializeString","numberOfWrittenBytes","serializeNumber","serializeNull","_","serializeBoolean","serializeDate","dateInMilis","serializeRegExp","serializeBSONRegExp","serializeMinMax","serializeObjectId","serializeBuffer","serializeObject","checkKeys","path","endIndex","serializeDecimal128","serializeLong","serializeInt32","serializeDouble","serializeFunction","serializeCode","codeSize","serializeBinary","serializeSymbol","serializeDBRef","startingIndex","iterator","entries","bson","deserializeStream","serializeWithBufferAndIndex","setInternalBufferSize","extended_json_2","timestamp_2","minInternalBufferSize","serializationIndex","finishedBuffer","finalBuffer","numberOfDocuments","documents","docStartIndex","internalOptions","bufferData","bson_16"],"mappings":"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","file":"x","sourcesContent":["var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar byteLength_1 = byteLength;\nvar toByteArray_1 = toByteArray;\nvar fromByteArray_1 = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}\n\nvar base64Js = {\n  byteLength: byteLength_1,\n  toByteArray: toByteArray_1,\n  fromByteArray: fromByteArray_1\n};\n\nvar read = function read(buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nvar write = function write(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};\n\nvar ieee754 = {\n  read: read,\n  write: write\n};\n\nvar buffer = createCommonjsModule(function (module, exports) {\n\n  var customInspectSymbol = typeof Symbol === 'function' && typeof Symbol[\"for\"] === 'function' ? Symbol[\"for\"]('nodejs.util.inspect.custom') : null;\n  exports.Buffer = Buffer;\n  exports.SlowBuffer = SlowBuffer;\n  exports.INSPECT_MAX_BYTES = 50;\n  var K_MAX_LENGTH = 0x7fffffff;\n  exports.kMaxLength = K_MAX_LENGTH;\n  /**\n   * If `Buffer.TYPED_ARRAY_SUPPORT`:\n   *   === true    Use Uint8Array implementation (fastest)\n   *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n   *               implementation (most compatible, even IE6)\n   *\n   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n   * Opera 11.6+, iOS 4.2+.\n   *\n   * We report that the browser does not support typed arrays if the are not subclassable\n   * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n   * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n   * for __proto__ and has a buggy typed array implementation.\n   */\n\n  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n  }\n\n  function typedArraySupport() {\n    // Can typed array instances can be augmented?\n    try {\n      var arr = new Uint8Array(1);\n      var proto = {\n        foo: function foo() {\n          return 42;\n        }\n      };\n      Object.setPrototypeOf(proto, Uint8Array.prototype);\n      Object.setPrototypeOf(arr, proto);\n      return arr.foo() === 42;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  Object.defineProperty(Buffer.prototype, 'parent', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.buffer;\n    }\n  });\n  Object.defineProperty(Buffer.prototype, 'offset', {\n    enumerable: true,\n    get: function get() {\n      if (!Buffer.isBuffer(this)) return undefined;\n      return this.byteOffset;\n    }\n  });\n\n  function createBuffer(length) {\n    if (length > K_MAX_LENGTH) {\n      throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n    } // Return an augmented `Uint8Array` instance\n\n\n    var buf = new Uint8Array(length);\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n  /**\n   * The Buffer constructor returns instances of `Uint8Array` that have their\n   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n   * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n   * returns a single octet.\n   *\n   * The `Uint8Array` prototype remains unmodified.\n   */\n\n\n  function Buffer(arg, encodingOrOffset, length) {\n    // Common case.\n    if (typeof arg === 'number') {\n      if (typeof encodingOrOffset === 'string') {\n        throw new TypeError('The \"string\" argument must be of type string. Received type number');\n      }\n\n      return allocUnsafe(arg);\n    }\n\n    return from(arg, encodingOrOffset, length);\n  }\n\n  Buffer.poolSize = 8192; // not used by this implementation\n\n  function from(value, encodingOrOffset, length) {\n    if (typeof value === 'string') {\n      return fromString(value, encodingOrOffset);\n    }\n\n    if (ArrayBuffer.isView(value)) {\n      return fromArrayLike(value);\n    }\n\n    if (value == null) {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + babelHelpers[\"typeof\"](value));\n    }\n\n    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n      return fromArrayBuffer(value, encodingOrOffset, length);\n    }\n\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n    }\n\n    var valueOf = value.valueOf && value.valueOf();\n\n    if (valueOf != null && valueOf !== value) {\n      return Buffer.from(valueOf, encodingOrOffset, length);\n    }\n\n    var b = fromObject(value);\n    if (b) return b;\n\n    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n      return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n    }\n\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + babelHelpers[\"typeof\"](value));\n  }\n  /**\n   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n   * if value is a number.\n   * Buffer.from(str[, encoding])\n   * Buffer.from(array)\n   * Buffer.from(buffer)\n   * Buffer.from(arrayBuffer[, byteOffset[, length]])\n   **/\n\n\n  Buffer.from = function (value, encodingOrOffset, length) {\n    return from(value, encodingOrOffset, length);\n  }; // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n  // https://github.com/feross/buffer/pull/148\n\n\n  Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n  Object.setPrototypeOf(Buffer, Uint8Array);\n\n  function assertSize(size) {\n    if (typeof size !== 'number') {\n      throw new TypeError('\"size\" argument must be of type number');\n    } else if (size < 0) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n  }\n\n  function alloc(size, fill, encoding) {\n    assertSize(size);\n\n    if (size <= 0) {\n      return createBuffer(size);\n    }\n\n    if (fill !== undefined) {\n      // Only pay attention to encoding if it's a string. This\n      // prevents accidentally sending in a number that would\n      // be interpretted as a start offset.\n      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n    }\n\n    return createBuffer(size);\n  }\n  /**\n   * Creates a new filled Buffer instance.\n   * alloc(size[, fill[, encoding]])\n   **/\n\n\n  Buffer.alloc = function (size, fill, encoding) {\n    return alloc(size, fill, encoding);\n  };\n\n  function allocUnsafe(size) {\n    assertSize(size);\n    return createBuffer(size < 0 ? 0 : checked(size) | 0);\n  }\n  /**\n   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n   * */\n\n\n  Buffer.allocUnsafe = function (size) {\n    return allocUnsafe(size);\n  };\n  /**\n   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n   */\n\n\n  Buffer.allocUnsafeSlow = function (size) {\n    return allocUnsafe(size);\n  };\n\n  function fromString(string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n      encoding = 'utf8';\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n\n    var length = byteLength(string, encoding) | 0;\n    var buf = createBuffer(length);\n    var actual = buf.write(string, encoding);\n\n    if (actual !== length) {\n      // Writing a hex string, for example, that contains invalid characters will\n      // cause everything after the first invalid character to be ignored. (e.g.\n      // 'abxxcd' will be treated as 'ab')\n      buf = buf.slice(0, actual);\n    }\n\n    return buf;\n  }\n\n  function fromArrayLike(array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    var buf = createBuffer(length);\n\n    for (var i = 0; i < length; i += 1) {\n      buf[i] = array[i] & 255;\n    }\n\n    return buf;\n  }\n\n  function fromArrayBuffer(array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n      throw new RangeError('\"offset\" is outside of buffer bounds');\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n      throw new RangeError('\"length\" is outside of buffer bounds');\n    }\n\n    var buf;\n\n    if (byteOffset === undefined && length === undefined) {\n      buf = new Uint8Array(array);\n    } else if (length === undefined) {\n      buf = new Uint8Array(array, byteOffset);\n    } else {\n      buf = new Uint8Array(array, byteOffset, length);\n    } // Return an augmented `Uint8Array` instance\n\n\n    Object.setPrototypeOf(buf, Buffer.prototype);\n    return buf;\n  }\n\n  function fromObject(obj) {\n    if (Buffer.isBuffer(obj)) {\n      var len = checked(obj.length) | 0;\n      var buf = createBuffer(len);\n\n      if (buf.length === 0) {\n        return buf;\n      }\n\n      obj.copy(buf, 0, 0, len);\n      return buf;\n    }\n\n    if (obj.length !== undefined) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0);\n      }\n\n      return fromArrayLike(obj);\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data);\n    }\n  }\n\n  function checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n    }\n\n    return length | 0;\n  }\n\n  function SlowBuffer(length) {\n    if (+length != length) {\n      // eslint-disable-line eqeqeq\n      length = 0;\n    }\n\n    return Buffer.alloc(+length);\n  }\n\n  Buffer.isBuffer = function isBuffer(b) {\n    return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n  };\n\n  Buffer.compare = function compare(a, b) {\n    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n\n    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n      throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n    }\n\n    if (a === b) return 0;\n    var x = a.length;\n    var y = b.length;\n\n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n      if (a[i] !== b[i]) {\n        x = a[i];\n        y = b[i];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  };\n\n  Buffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n      case 'hex':\n      case 'utf8':\n      case 'utf-8':\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n      case 'base64':\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return true;\n\n      default:\n        return false;\n    }\n  };\n\n  Buffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    if (list.length === 0) {\n      return Buffer.alloc(0);\n    }\n\n    var i;\n\n    if (length === undefined) {\n      length = 0;\n\n      for (i = 0; i < list.length; ++i) {\n        length += list[i].length;\n      }\n    }\n\n    var buffer = Buffer.allocUnsafe(length);\n    var pos = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      var buf = list[i];\n\n      if (isInstance(buf, Uint8Array)) {\n        buf = Buffer.from(buf);\n      }\n\n      if (!Buffer.isBuffer(buf)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      }\n\n      buf.copy(buffer, pos);\n      pos += buf.length;\n    }\n\n    return buffer;\n  };\n\n  function byteLength(string, encoding) {\n    if (Buffer.isBuffer(string)) {\n      return string.length;\n    }\n\n    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n      return string.byteLength;\n    }\n\n    if (typeof string !== 'string') {\n      throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + babelHelpers[\"typeof\"](string));\n    }\n\n    var len = string.length;\n    var mustMatch = arguments.length > 2 && arguments[2] === true;\n    if (!mustMatch && len === 0) return 0; // Use a for loop to avoid recursion\n\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n          return len;\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8ToBytes(string).length;\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return len * 2;\n\n        case 'hex':\n          return len >>> 1;\n\n        case 'base64':\n          return base64ToBytes(string).length;\n\n        default:\n          if (loweredCase) {\n            return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n          }\n\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  }\n\n  Buffer.byteLength = byteLength;\n\n  function slowToString(encoding, start, end) {\n    var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n    if (start === undefined || start < 0) {\n      start = 0;\n    } // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n\n\n    if (start > this.length) {\n      return '';\n    }\n\n    if (end === undefined || end > this.length) {\n      end = this.length;\n    }\n\n    if (end <= 0) {\n      return '';\n    } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n    end >>>= 0;\n    start >>>= 0;\n\n    if (end <= start) {\n      return '';\n    }\n\n    if (!encoding) encoding = 'utf8';\n\n    while (true) {\n      switch (encoding) {\n        case 'hex':\n          return hexSlice(this, start, end);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Slice(this, start, end);\n\n        case 'ascii':\n          return asciiSlice(this, start, end);\n\n        case 'latin1':\n        case 'binary':\n          return latin1Slice(this, start, end);\n\n        case 'base64':\n          return base64Slice(this, start, end);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return utf16leSlice(this, start, end);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = (encoding + '').toLowerCase();\n          loweredCase = true;\n      }\n    }\n  } // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n  // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n  // reliably in a browserify context because there could be multiple different\n  // copies of the 'buffer' package in use. This method works even for Buffer\n  // instances that were created from another copy of the `buffer` package.\n  // See: https://github.com/feross/buffer/issues/154\n\n\n  Buffer.prototype._isBuffer = true;\n\n  function swap(b, n, m) {\n    var i = b[n];\n    b[n] = b[m];\n    b[m] = i;\n  }\n\n  Buffer.prototype.swap16 = function swap16() {\n    var len = this.length;\n\n    if (len % 2 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 16-bits');\n    }\n\n    for (var i = 0; i < len; i += 2) {\n      swap(this, i, i + 1);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap32 = function swap32() {\n    var len = this.length;\n\n    if (len % 4 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 32-bits');\n    }\n\n    for (var i = 0; i < len; i += 4) {\n      swap(this, i, i + 3);\n      swap(this, i + 1, i + 2);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.swap64 = function swap64() {\n    var len = this.length;\n\n    if (len % 8 !== 0) {\n      throw new RangeError('Buffer size must be a multiple of 64-bits');\n    }\n\n    for (var i = 0; i < len; i += 8) {\n      swap(this, i, i + 7);\n      swap(this, i + 1, i + 6);\n      swap(this, i + 2, i + 5);\n      swap(this, i + 3, i + 4);\n    }\n\n    return this;\n  };\n\n  Buffer.prototype.toString = function toString() {\n    var length = this.length;\n    if (length === 0) return '';\n    if (arguments.length === 0) return utf8Slice(this, 0, length);\n    return slowToString.apply(this, arguments);\n  };\n\n  Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n  Buffer.prototype.equals = function equals(b) {\n    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n    if (this === b) return true;\n    return Buffer.compare(this, b) === 0;\n  };\n\n  Buffer.prototype.inspect = function inspect() {\n    var str = '';\n    var max = exports.INSPECT_MAX_BYTES;\n    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n    if (this.length > max) str += ' ... ';\n    return '<Buffer ' + str + '>';\n  };\n\n  if (customInspectSymbol) {\n    Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n  }\n\n  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n    if (isInstance(target, Uint8Array)) {\n      target = Buffer.from(target, target.offset, target.byteLength);\n    }\n\n    if (!Buffer.isBuffer(target)) {\n      throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + babelHelpers[\"typeof\"](target));\n    }\n\n    if (start === undefined) {\n      start = 0;\n    }\n\n    if (end === undefined) {\n      end = target ? target.length : 0;\n    }\n\n    if (thisStart === undefined) {\n      thisStart = 0;\n    }\n\n    if (thisEnd === undefined) {\n      thisEnd = this.length;\n    }\n\n    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n      throw new RangeError('out of range index');\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n      return 0;\n    }\n\n    if (thisStart >= thisEnd) {\n      return -1;\n    }\n\n    if (start >= end) {\n      return 1;\n    }\n\n    start >>>= 0;\n    end >>>= 0;\n    thisStart >>>= 0;\n    thisEnd >>>= 0;\n    if (this === target) return 0;\n    var x = thisEnd - thisStart;\n    var y = end - start;\n    var len = Math.min(x, y);\n    var thisCopy = this.slice(thisStart, thisEnd);\n    var targetCopy = target.slice(start, end);\n\n    for (var i = 0; i < len; ++i) {\n      if (thisCopy[i] !== targetCopy[i]) {\n        x = thisCopy[i];\n        y = targetCopy[i];\n        break;\n      }\n    }\n\n    if (x < y) return -1;\n    if (y < x) return 1;\n    return 0;\n  }; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n  //\n  // Arguments:\n  // - buffer - a Buffer to search\n  // - val - a string, Buffer, or number\n  // - byteOffset - an index into `buffer`; will be clamped to an int32\n  // - encoding - an optional encoding, relevant is val is a string\n  // - dir - true for indexOf, false for lastIndexOf\n\n\n  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1; // Normalize byteOffset\n\n    if (typeof byteOffset === 'string') {\n      encoding = byteOffset;\n      byteOffset = 0;\n    } else if (byteOffset > 0x7fffffff) {\n      byteOffset = 0x7fffffff;\n    } else if (byteOffset < -0x80000000) {\n      byteOffset = -0x80000000;\n    }\n\n    byteOffset = +byteOffset; // Coerce to Number.\n\n    if (numberIsNaN(byteOffset)) {\n      // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n      byteOffset = dir ? 0 : buffer.length - 1;\n    } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n    if (byteOffset >= buffer.length) {\n      if (dir) return -1;else byteOffset = buffer.length - 1;\n    } else if (byteOffset < 0) {\n      if (dir) byteOffset = 0;else return -1;\n    } // Normalize val\n\n\n    if (typeof val === 'string') {\n      val = Buffer.from(val, encoding);\n    } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n    if (Buffer.isBuffer(val)) {\n      // Special case: looking for empty string/buffer always fails\n      if (val.length === 0) {\n        return -1;\n      }\n\n      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n    } else if (typeof val === 'number') {\n      val = val & 0xFF; // Search for a byte value [0-255]\n\n      if (typeof Uint8Array.prototype.indexOf === 'function') {\n        if (dir) {\n          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n        } else {\n          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n        }\n      }\n\n      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n    }\n\n    throw new TypeError('val must be string, number or Buffer');\n  }\n\n  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1;\n    var arrLength = arr.length;\n    var valLength = val.length;\n\n    if (encoding !== undefined) {\n      encoding = String(encoding).toLowerCase();\n\n      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n        if (arr.length < 2 || val.length < 2) {\n          return -1;\n        }\n\n        indexSize = 2;\n        arrLength /= 2;\n        valLength /= 2;\n        byteOffset /= 2;\n      }\n    }\n\n    function read(buf, i) {\n      if (indexSize === 1) {\n        return buf[i];\n      } else {\n        return buf.readUInt16BE(i * indexSize);\n      }\n    }\n\n    var i;\n\n    if (dir) {\n      var foundIndex = -1;\n\n      for (i = byteOffset; i < arrLength; i++) {\n        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n          if (foundIndex === -1) foundIndex = i;\n          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n        } else {\n          if (foundIndex !== -1) i -= i - foundIndex;\n          foundIndex = -1;\n        }\n      }\n    } else {\n      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n      for (i = byteOffset; i >= 0; i--) {\n        var found = true;\n\n        for (var j = 0; j < valLength; j++) {\n          if (read(arr, i + j) !== read(val, j)) {\n            found = false;\n            break;\n          }\n        }\n\n        if (found) return i;\n      }\n    }\n\n    return -1;\n  }\n\n  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1;\n  };\n\n  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n  };\n\n  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n  };\n\n  function hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0;\n    var remaining = buf.length - offset;\n\n    if (!length) {\n      length = remaining;\n    } else {\n      length = Number(length);\n\n      if (length > remaining) {\n        length = remaining;\n      }\n    }\n\n    var strLen = string.length;\n\n    if (length > strLen / 2) {\n      length = strLen / 2;\n    }\n\n    for (var i = 0; i < length; ++i) {\n      var parsed = parseInt(string.substr(i * 2, 2), 16);\n      if (numberIsNaN(parsed)) return i;\n      buf[offset + i] = parsed;\n    }\n\n    return i;\n  }\n\n  function utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  function asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length);\n  }\n\n  function latin1Write(buf, string, offset, length) {\n    return asciiWrite(buf, string, offset, length);\n  }\n\n  function base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length);\n  }\n\n  function ucs2Write(buf, string, offset, length) {\n    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n  }\n\n  Buffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n      encoding = 'utf8';\n      length = this.length;\n      offset = 0; // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n      encoding = offset;\n      length = this.length;\n      offset = 0; // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n      offset = offset >>> 0;\n\n      if (isFinite(length)) {\n        length = length >>> 0;\n        if (encoding === undefined) encoding = 'utf8';\n      } else {\n        encoding = length;\n        length = undefined;\n      }\n    } else {\n      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n    }\n\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining) length = remaining;\n\n    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n      throw new RangeError('Attempt to write outside buffer bounds');\n    }\n\n    if (!encoding) encoding = 'utf8';\n    var loweredCase = false;\n\n    for (;;) {\n      switch (encoding) {\n        case 'hex':\n          return hexWrite(this, string, offset, length);\n\n        case 'utf8':\n        case 'utf-8':\n          return utf8Write(this, string, offset, length);\n\n        case 'ascii':\n          return asciiWrite(this, string, offset, length);\n\n        case 'latin1':\n        case 'binary':\n          return latin1Write(this, string, offset, length);\n\n        case 'base64':\n          // Warning: maxLength not taken into account in base64Write\n          return base64Write(this, string, offset, length);\n\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return ucs2Write(this, string, offset, length);\n\n        default:\n          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n          encoding = ('' + encoding).toLowerCase();\n          loweredCase = true;\n      }\n    }\n  };\n\n  Buffer.prototype.toJSON = function toJSON() {\n    return {\n      type: 'Buffer',\n      data: Array.prototype.slice.call(this._arr || this, 0)\n    };\n  };\n\n  function base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n      return base64Js.fromByteArray(buf);\n    } else {\n      return base64Js.fromByteArray(buf.slice(start, end));\n    }\n  }\n\n  function utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end);\n    var res = [];\n    var i = start;\n\n    while (i < end) {\n      var firstByte = buf[i];\n      var codePoint = null;\n      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n      if (i + bytesPerSequence <= end) {\n        var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n        switch (bytesPerSequence) {\n          case 1:\n            if (firstByte < 0x80) {\n              codePoint = firstByte;\n            }\n\n            break;\n\n          case 2:\n            secondByte = buf[i + 1];\n\n            if ((secondByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n              if (tempCodePoint > 0x7F) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 3:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n            break;\n\n          case 4:\n            secondByte = buf[i + 1];\n            thirdByte = buf[i + 2];\n            fourthByte = buf[i + 3];\n\n            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                codePoint = tempCodePoint;\n              }\n            }\n\n        }\n      }\n\n      if (codePoint === null) {\n        // we did not generate a valid codePoint so insert a\n        // replacement char (U+FFFD) and advance only 1 byte\n        codePoint = 0xFFFD;\n        bytesPerSequence = 1;\n      } else if (codePoint > 0xFFFF) {\n        // encode to utf16 (surrogate pair dance)\n        codePoint -= 0x10000;\n        res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n        codePoint = 0xDC00 | codePoint & 0x3FF;\n      }\n\n      res.push(codePoint);\n      i += bytesPerSequence;\n    }\n\n    return decodeCodePointsArray(res);\n  } // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n  // the lowest limit is Chrome, with 0x10000 args.\n  // We go 1 magnitude less, for safety\n\n\n  var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n  function decodeCodePointsArray(codePoints) {\n    var len = codePoints.length;\n\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n      return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n    } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n    var res = '';\n    var i = 0;\n\n    while (i < len) {\n      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n    }\n\n    return res;\n  }\n\n  function asciiSlice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i] & 0x7F);\n    }\n\n    return ret;\n  }\n\n  function latin1Slice(buf, start, end) {\n    var ret = '';\n    end = Math.min(buf.length, end);\n\n    for (var i = start; i < end; ++i) {\n      ret += String.fromCharCode(buf[i]);\n    }\n\n    return ret;\n  }\n\n  function hexSlice(buf, start, end) {\n    var len = buf.length;\n    if (!start || start < 0) start = 0;\n    if (!end || end < 0 || end > len) end = len;\n    var out = '';\n\n    for (var i = start; i < end; ++i) {\n      out += hexSliceLookupTable[buf[i]];\n    }\n\n    return out;\n  }\n\n  function utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end);\n    var res = '';\n\n    for (var i = 0; i < bytes.length; i += 2) {\n      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n    }\n\n    return res;\n  }\n\n  Buffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n\n    if (start < 0) {\n      start += len;\n      if (start < 0) start = 0;\n    } else if (start > len) {\n      start = len;\n    }\n\n    if (end < 0) {\n      end += len;\n      if (end < 0) end = 0;\n    } else if (end > len) {\n      end = len;\n    }\n\n    if (end < start) end = start;\n    var newBuf = this.subarray(start, end); // Return an augmented `Uint8Array` instance\n\n    Object.setPrototypeOf(newBuf, Buffer.prototype);\n    return newBuf;\n  };\n  /*\n   * Need to make sure that buffer isn't trying to write out of bounds.\n   */\n\n\n  function checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n  }\n\n  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      checkOffset(offset, byteLength, this.length);\n    }\n\n    var val = this[offset + --byteLength];\n    var mul = 1;\n\n    while (byteLength > 0 && (mul *= 0x100)) {\n      val += this[offset + --byteLength] * mul;\n    }\n\n    return val;\n  };\n\n  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    return this[offset];\n  };\n\n  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] | this[offset + 1] << 8;\n  };\n\n  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    return this[offset] << 8 | this[offset + 1];\n  };\n\n  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n  };\n\n  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n  };\n\n  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var val = this[offset];\n    var mul = 1;\n    var i = 0;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      val += this[offset + i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n    if (!noAssert) checkOffset(offset, byteLength, this.length);\n    var i = byteLength;\n    var mul = 1;\n    var val = this[offset + --i];\n\n    while (i > 0 && (mul *= 0x100)) {\n      val += this[offset + --i] * mul;\n    }\n\n    mul *= 0x80;\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n    return val;\n  };\n\n  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 1, this.length);\n    if (!(this[offset] & 0x80)) return this[offset];\n    return (0xff - this[offset] + 1) * -1;\n  };\n\n  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset] | this[offset + 1] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 2, this.length);\n    var val = this[offset + 1] | this[offset] << 8;\n    return val & 0x8000 ? val | 0xFFFF0000 : val;\n  };\n\n  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n  };\n\n  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n  };\n\n  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, true, 23, 4);\n  };\n\n  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 4, this.length);\n    return ieee754.read(this, offset, false, 23, 4);\n  };\n\n  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, true, 52, 8);\n  };\n\n  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    offset = offset >>> 0;\n    if (!noAssert) checkOffset(offset, 8, this.length);\n    return ieee754.read(this, offset, false, 52, 8);\n  };\n\n  function checkInt(buf, value, offset, ext, max, min) {\n    if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n    if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  }\n\n  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var mul = 1;\n    var i = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    byteLength = byteLength >>> 0;\n\n    if (!noAssert) {\n      var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n      checkInt(this, value, offset, byteLength, maxBytes, 0);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      this[offset + i] = value / mul & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = 0;\n    var mul = 1;\n    var sub = 0;\n    this[offset] = value & 0xFF;\n\n    while (++i < byteLength && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      var limit = Math.pow(2, 8 * byteLength - 1);\n      checkInt(this, value, offset, byteLength, limit - 1, -limit);\n    }\n\n    var i = byteLength - 1;\n    var mul = 1;\n    var sub = 0;\n    this[offset + i] = value & 0xFF;\n\n    while (--i >= 0 && (mul *= 0x100)) {\n      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n        sub = 1;\n      }\n\n      this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n    }\n\n    return offset + byteLength;\n  };\n\n  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n    if (value < 0) value = 0xff + value + 1;\n    this[offset] = value & 0xff;\n    return offset + 1;\n  };\n\n  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n    return offset + 2;\n  };\n\n  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n    return offset + 4;\n  };\n\n  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n    if (value < 0) value = 0xffffffff + value + 1;\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n    return offset + 4;\n  };\n\n  function checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    if (offset < 0) throw new RangeError('Index out of range');\n  }\n\n  function writeFloat(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 4);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 23, 4);\n    return offset + 4;\n  }\n\n  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert);\n  };\n\n  function writeDouble(buf, value, offset, littleEndian, noAssert) {\n    value = +value;\n    offset = offset >>> 0;\n\n    if (!noAssert) {\n      checkIEEE754(buf, value, offset, 8);\n    }\n\n    ieee754.write(buf, value, offset, littleEndian, 52, 8);\n    return offset + 8;\n  }\n\n  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, true, noAssert);\n  };\n\n  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n    return writeDouble(this, value, offset, false, noAssert);\n  }; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\n  Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n    if (!start) start = 0;\n    if (!end && end !== 0) end = this.length;\n    if (targetStart >= target.length) targetStart = target.length;\n    if (!targetStart) targetStart = 0;\n    if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n    if (end === start) return 0;\n    if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n    if (targetStart < 0) {\n      throw new RangeError('targetStart out of bounds');\n    }\n\n    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n    if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n    if (end > this.length) end = this.length;\n\n    if (target.length - targetStart < end - start) {\n      end = target.length - targetStart + start;\n    }\n\n    var len = end - start;\n\n    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n      // Use built-in when available, missing from IE11\n      this.copyWithin(targetStart, start, end);\n    } else if (this === target && start < targetStart && targetStart < end) {\n      // descending copy from end\n      for (var i = len - 1; i >= 0; --i) {\n        target[i + targetStart] = this[i + start];\n      }\n    } else {\n      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n    }\n\n    return len;\n  }; // Usage:\n  //    buffer.fill(number[, offset[, end]])\n  //    buffer.fill(buffer[, offset[, end]])\n  //    buffer.fill(string[, offset[, end]][, encoding])\n\n\n  Buffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n      if (typeof start === 'string') {\n        encoding = start;\n        start = 0;\n        end = this.length;\n      } else if (typeof end === 'string') {\n        encoding = end;\n        end = this.length;\n      }\n\n      if (encoding !== undefined && typeof encoding !== 'string') {\n        throw new TypeError('encoding must be a string');\n      }\n\n      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding);\n      }\n\n      if (val.length === 1) {\n        var code = val.charCodeAt(0);\n\n        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n          // Fast path: If `val` fits into a single byte, use that numeric value.\n          val = code;\n        }\n      }\n    } else if (typeof val === 'number') {\n      val = val & 255;\n    } else if (typeof val === 'boolean') {\n      val = Number(val);\n    } // Invalid ranges are not set to a default, so can range check early.\n\n\n    if (start < 0 || this.length < start || this.length < end) {\n      throw new RangeError('Out of range index');\n    }\n\n    if (end <= start) {\n      return this;\n    }\n\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val) val = 0;\n    var i;\n\n    if (typeof val === 'number') {\n      for (i = start; i < end; ++i) {\n        this[i] = val;\n      }\n    } else {\n      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n      var len = bytes.length;\n\n      if (len === 0) {\n        throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n      }\n\n      for (i = 0; i < end - start; ++i) {\n        this[i + start] = bytes[i % len];\n      }\n    }\n\n    return this;\n  }; // HELPER FUNCTIONS\n  // ================\n\n\n  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n  function base64clean(str) {\n    // Node takes equal signs as end of the Base64 encoding\n    str = str.split('=')[0]; // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\n    str = str.trim().replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n    if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n    while (str.length % 4 !== 0) {\n      str = str + '=';\n    }\n\n    return str;\n  }\n\n  function utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n\n    for (var i = 0; i < length; ++i) {\n      codePoint = string.charCodeAt(i); // is surrogate component\n\n      if (codePoint > 0xD7FF && codePoint < 0xE000) {\n        // last char was a lead\n        if (!leadSurrogate) {\n          // no lead yet\n          if (codePoint > 0xDBFF) {\n            // unexpected trail\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } else if (i + 1 === length) {\n            // unpaired lead\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            continue;\n          } // valid lead\n\n\n          leadSurrogate = codePoint;\n          continue;\n        } // 2 leads in a row\n\n\n        if (codePoint < 0xDC00) {\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          leadSurrogate = codePoint;\n          continue;\n        } // valid surrogate pair\n\n\n        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n      } else if (leadSurrogate) {\n        // valid bmp char, but last char was a lead\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n      }\n\n      leadSurrogate = null; // encode utf8\n\n      if (codePoint < 0x80) {\n        if ((units -= 1) < 0) break;\n        bytes.push(codePoint);\n      } else if (codePoint < 0x800) {\n        if ((units -= 2) < 0) break;\n        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x10000) {\n        if ((units -= 3) < 0) break;\n        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else if (codePoint < 0x110000) {\n        if ((units -= 4) < 0) break;\n        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n      } else {\n        throw new Error('Invalid code point');\n      }\n    }\n\n    return bytes;\n  }\n\n  function asciiToBytes(str) {\n    var byteArray = [];\n\n    for (var i = 0; i < str.length; ++i) {\n      // Node's code seems to be doing this and not & 0x7F..\n      byteArray.push(str.charCodeAt(i) & 0xFF);\n    }\n\n    return byteArray;\n  }\n\n  function utf16leToBytes(str, units) {\n    var c, hi, lo;\n    var byteArray = [];\n\n    for (var i = 0; i < str.length; ++i) {\n      if ((units -= 2) < 0) break;\n      c = str.charCodeAt(i);\n      hi = c >> 8;\n      lo = c % 256;\n      byteArray.push(lo);\n      byteArray.push(hi);\n    }\n\n    return byteArray;\n  }\n\n  function base64ToBytes(str) {\n    return base64Js.toByteArray(base64clean(str));\n  }\n\n  function blitBuffer(src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n      if (i + offset >= dst.length || i >= src.length) break;\n      dst[i + offset] = src[i];\n    }\n\n    return i;\n  } // ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n  // the `instanceof` check but they should be treated as of that type.\n  // See: https://github.com/feross/buffer/issues/166\n\n\n  function isInstance(obj, type) {\n    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n  }\n\n  function numberIsNaN(obj) {\n    // For IE11 support\n    return obj !== obj; // eslint-disable-line no-self-compare\n  } // Create lookup table for `toString('hex')`\n  // See: https://github.com/feross/buffer/issues/219\n\n\n  var hexSliceLookupTable = function () {\n    var alphabet = '0123456789abcdef';\n    var table = new Array(256);\n\n    for (var i = 0; i < 16; ++i) {\n      var i16 = i * 16;\n\n      for (var j = 0; j < 16; ++j) {\n        table[i16 + j] = alphabet[i] + alphabet[j];\n      }\n    }\n\n    return table;\n  }();\n});\nvar buffer_1 = buffer.Buffer;\nvar buffer_2 = buffer.SlowBuffer;\nvar buffer_3 = buffer.INSPECT_MAX_BYTES;\nvar buffer_4 = buffer.kMaxLength;\n\nvar require$$0 = {};\n\nvar inherits;\n\nif (typeof Object.create === 'function') {\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}\n\nvar inherits$1 = inherits;\n\n// Copyright Joyent, Inc. and other Node contributors.\nvar formatRegExp = /%[sdj%]/g;\nfunction format(f) {\n  if (!isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n\n  return str;\n}\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\n\nfunction deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function () {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      {\n        console.error(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\nvar debugs = {};\nvar debugEnviron;\nfunction debuglog(set) {\n  if (isUndefined(debugEnviron)) debugEnviron =  '';\n  set = set.toUpperCase();\n\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n\n      debugs[set] = function () {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n\n  return debugs[set];\n}\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n} // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function (prev, cur) {\n    if (cur.indexOf('\\n') >= 0) ;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nfunction isSymbol(arg) {\n  return babelHelpers[\"typeof\"](arg) === 'symbol';\n}\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nfunction isObject(arg) {\n  return babelHelpers[\"typeof\"](arg) === 'object' && arg !== null;\n}\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || babelHelpers[\"typeof\"](arg) === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\nfunction isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n} // log is just a thin wrapper to console.log that prepends a timestamp\n\n\nfunction log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\nfunction _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar require$$1 = {\n  inherits: inherits$1,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n};\n\nvar utils = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deprecate = exports.isObjectLike = exports.isDate = exports.isBuffer = exports.haveBuffer = exports.isBigUInt64Array = exports.isBigInt64Array = exports.isUint8Array = exports.randomBytes = exports.normalizedFunctionString = void 0;\n\n/**\n * Normalizes our expected stringified form of a function across versions of node\n * @param fn - The function to stringify\n */\nfunction normalizedFunctionString(fn) {\n    return fn.toString().replace('function(', 'function (');\n}\nexports.normalizedFunctionString = normalizedFunctionString;\nfunction insecureRandomBytes(size) {\n    const result = buffer.Buffer.alloc(size);\n    for (let i = 0; i < size; ++i)\n        result[i] = Math.floor(Math.random() * 256);\n    return result;\n}\nexports.randomBytes = insecureRandomBytes;\nif (typeof window !== 'undefined' && window.crypto && window.crypto.getRandomValues) {\n    exports.randomBytes = size => window.crypto.getRandomValues(buffer.Buffer.alloc(size));\n}\nelse {\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        exports.randomBytes = require$$0.randomBytes;\n    }\n    catch (e) {\n        // keep the fallback\n    }\n    // NOTE: in transpiled cases the above require might return null/undefined\n    if (exports.randomBytes == null) {\n        exports.randomBytes = insecureRandomBytes;\n    }\n}\nfunction isUint8Array(value) {\n    return Object.prototype.toString.call(value) === '[object Uint8Array]';\n}\nexports.isUint8Array = isUint8Array;\nfunction isBigInt64Array(value) {\n    return Object.prototype.toString.call(value) === '[object BigInt64Array]';\n}\nexports.isBigInt64Array = isBigInt64Array;\nfunction isBigUInt64Array(value) {\n    return Object.prototype.toString.call(value) === '[object BigUint64Array]';\n}\nexports.isBigUInt64Array = isBigUInt64Array;\n/** Call to check if your environment has `Buffer` */\nfunction haveBuffer() {\n    return typeof commonjsGlobal !== 'undefined' && typeof commonjsGlobal.Buffer !== 'undefined';\n}\nexports.haveBuffer = haveBuffer;\n/** Callable in any environment to check if value is a Buffer */\nfunction isBuffer(value) {\n    var _a;\n    return typeof value === 'object' && ((_a = value === null || value === void 0 ? void 0 : value.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Buffer';\n}\nexports.isBuffer = isBuffer;\n// To ensure that 0.4 of node works correctly\nfunction isDate(d) {\n    return isObjectLike(d) && Object.prototype.toString.call(d) === '[object Date]';\n}\nexports.isDate = isDate;\n/**\n * @internal\n * this is to solve the `'someKey' in x` problem where x is unknown.\n * https://github.com/typescript-eslint/typescript-eslint/issues/1071#issuecomment-541955753\n */\nfunction isObjectLike(candidate) {\n    return typeof candidate === 'object' && candidate !== null;\n}\nexports.isObjectLike = isObjectLike;\nfunction deprecate(fn, message) {\n    if (typeof window === 'undefined' || typeof self === 'undefined') {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        return require$$1.deprecate(fn, message);\n    }\n    let warned = false;\n    function deprecated(...args) {\n        if (!warned) {\n            console.warn(message);\n            warned = true;\n        }\n        return fn.apply(this, ...args);\n    }\n    return deprecated;\n}\nexports.deprecate = deprecate;\n\n});\n\nunwrapExports(utils);\nvar utils_1 = utils.deprecate;\nvar utils_2 = utils.isObjectLike;\nvar utils_3 = utils.isDate;\nvar utils_4 = utils.isBuffer;\nvar utils_5 = utils.haveBuffer;\nvar utils_6 = utils.isBigUInt64Array;\nvar utils_7 = utils.isBigInt64Array;\nvar utils_8 = utils.isUint8Array;\nvar utils_9 = utils.randomBytes;\nvar utils_10 = utils.normalizedFunctionString;\n\nvar ensure_buffer = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureBuffer = void 0;\n\n\n/**\n * Makes sure that, if a Uint8Array is passed in, it is wrapped in a Buffer.\n *\n * @param potentialBuffer - The potential buffer\n * @returns Buffer the input if potentialBuffer is a buffer, or a buffer that\n * wraps a passed in Uint8Array\n * @throws TypeError If anything other than a Buffer or Uint8Array is passed in\n */\nfunction ensureBuffer(potentialBuffer) {\n    if (utils.isBuffer(potentialBuffer)) {\n        return potentialBuffer;\n    }\n    if (ArrayBuffer.isView(potentialBuffer)) {\n        return buffer.Buffer.from(potentialBuffer.buffer);\n    }\n    if (potentialBuffer instanceof ArrayBuffer) {\n        return buffer.Buffer.from(potentialBuffer);\n    }\n    throw new TypeError('Must use either Buffer or TypedArray');\n}\nexports.ensureBuffer = ensureBuffer;\n\n});\n\nunwrapExports(ensure_buffer);\nvar ensure_buffer_1 = ensure_buffer.ensureBuffer;\n\nvar uuid = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUUID = void 0;\n/**\n * UUID regular expression pattern copied from `uuid` npm module.\n * @see https://github.com/uuidjs/uuid/blob/master/src/regex.js\n */\nconst UUID_RX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n/**\n * Parser function copied from `uuid` npm module.\n * @see https://github.com/uuidjs/uuid/blob/master/src/parse.js\n * @internal\n */\nfunction parseUUID(uuid) {\n    if (typeof uuid !== 'string') {\n        throw new TypeError('Invalid type for UUID, expected string but got ' + typeof uuid);\n    }\n    if (!UUID_RX.test(uuid)) {\n        throw new TypeError('Invalid format for UUID: ' + uuid);\n    }\n    let v;\n    const arr = new Uint8Array(16);\n    // Parse ########-....-....-....-............\n    arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n    arr[1] = (v >>> 16) & 0xff;\n    arr[2] = (v >>> 8) & 0xff;\n    arr[3] = v & 0xff;\n    // Parse ........-####-....-....-............\n    arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n    arr[5] = v & 0xff;\n    // Parse ........-....-####-....-............\n    arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n    arr[7] = v & 0xff;\n    // Parse ........-....-....-####-............\n    arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n    arr[9] = v & 0xff;\n    // Parse ........-....-....-....-############\n    // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n    arr[10] = ((v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000) & 0xff;\n    arr[11] = (v / 0x100000000) & 0xff;\n    arr[12] = (v >>> 24) & 0xff;\n    arr[13] = (v >>> 16) & 0xff;\n    arr[14] = (v >>> 8) & 0xff;\n    arr[15] = v & 0xff;\n    return arr;\n}\nexports.parseUUID = parseUUID;\n\n});\n\nunwrapExports(uuid);\nvar uuid_1 = uuid.parseUUID;\n\nvar binary = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Binary = void 0;\n\n\n\n/**\n * A class representation of the BSON Binary type.\n * @public\n */\nclass Binary {\n    /**\n     * @param buffer - a buffer object containing the binary data.\n     * @param subType - the option binary type.\n     */\n    constructor(buffer$1, subType) {\n        if (!(buffer$1 == null) &&\n            !(typeof buffer$1 === 'string') &&\n            !ArrayBuffer.isView(buffer$1) &&\n            !(buffer$1 instanceof ArrayBuffer) &&\n            !Array.isArray(buffer$1)) {\n            throw new TypeError('Binary can only be constructed from string, Buffer, TypedArray, or Array<number>');\n        }\n        this.sub_type = subType !== null && subType !== void 0 ? subType : Binary.BSON_BINARY_SUBTYPE_DEFAULT;\n        if (buffer$1 == null) {\n            // create an empty binary buffer\n            this.buffer = buffer.Buffer.alloc(Binary.BUFFER_SIZE);\n            this.position = 0;\n        }\n        else {\n            if (typeof buffer$1 === 'string') {\n                // string\n                this.buffer = buffer.Buffer.from(buffer$1, 'binary');\n            }\n            else if (Array.isArray(buffer$1)) {\n                // number[]\n                this.buffer = buffer.Buffer.from(buffer$1);\n            }\n            else {\n                // Buffer | TypedArray | ArrayBuffer\n                this.buffer = ensure_buffer.ensureBuffer(buffer$1);\n            }\n            this.position = this.buffer.byteLength;\n        }\n    }\n    /**\n     * Updates this binary with byte_value.\n     *\n     * @param byteValue - a single byte we wish to write.\n     */\n    put(byteValue) {\n        // If it's a string and a has more than one character throw an error\n        if (typeof byteValue === 'string' && byteValue.length !== 1) {\n            throw new TypeError('only accepts single character String');\n        }\n        else if (typeof byteValue !== 'number' && byteValue.length !== 1)\n            throw new TypeError('only accepts single character Uint8Array or Array');\n        // Decode the byte value once\n        let decodedByte;\n        if (typeof byteValue === 'string') {\n            decodedByte = byteValue.charCodeAt(0);\n        }\n        else if (typeof byteValue === 'number') {\n            decodedByte = byteValue;\n        }\n        else {\n            decodedByte = byteValue[0];\n        }\n        if (decodedByte < 0 || decodedByte > 255) {\n            throw new TypeError('only accepts number in a valid unsigned byte range 0-255');\n        }\n        if (this.buffer.length > this.position) {\n            this.buffer[this.position++] = decodedByte;\n        }\n        else {\n            const buffer$1 = buffer.Buffer.alloc(Binary.BUFFER_SIZE + this.buffer.length);\n            // Combine the two buffers together\n            this.buffer.copy(buffer$1, 0, 0, this.buffer.length);\n            this.buffer = buffer$1;\n            this.buffer[this.position++] = decodedByte;\n        }\n    }\n    /**\n     * Writes a buffer or string to the binary.\n     *\n     * @param sequence - a string or buffer to be written to the Binary BSON object.\n     * @param offset - specify the binary of where to write the content.\n     */\n    write(sequence, offset) {\n        offset = typeof offset === 'number' ? offset : this.position;\n        // If the buffer is to small let's extend the buffer\n        if (this.buffer.length < offset + sequence.length) {\n            const buffer$1 = buffer.Buffer.alloc(this.buffer.length + sequence.length);\n            this.buffer.copy(buffer$1, 0, 0, this.buffer.length);\n            // Assign the new buffer\n            this.buffer = buffer$1;\n        }\n        if (ArrayBuffer.isView(sequence)) {\n            this.buffer.set(ensure_buffer.ensureBuffer(sequence), offset);\n            this.position =\n                offset + sequence.byteLength > this.position ? offset + sequence.length : this.position;\n        }\n        else if (typeof sequence === 'string') {\n            this.buffer.write(sequence, offset, sequence.length, 'binary');\n            this.position =\n                offset + sequence.length > this.position ? offset + sequence.length : this.position;\n        }\n    }\n    /**\n     * Reads **length** bytes starting at **position**.\n     *\n     * @param position - read from the given position in the Binary.\n     * @param length - the number of bytes to read.\n     */\n    read(position, length) {\n        length = length && length > 0 ? length : this.position;\n        // Let's return the data based on the type we have\n        return this.buffer.slice(position, position + length);\n    }\n    /**\n     * Returns the value of this binary as a string.\n     * @param asRaw - Will skip converting to a string\n     * @remarks\n     * This is handy when calling this function conditionally for some key value pairs and not others\n     */\n    value(asRaw) {\n        asRaw = !!asRaw;\n        // Optimize to serialize for the situation where the data == size of buffer\n        if (asRaw && this.buffer.length === this.position) {\n            return this.buffer;\n        }\n        // If it's a node.js buffer object\n        if (asRaw) {\n            return this.buffer.slice(0, this.position);\n        }\n        return this.buffer.toString('binary', 0, this.position);\n    }\n    /** the length of the binary sequence */\n    length() {\n        return this.position;\n    }\n    /** @internal */\n    toJSON() {\n        return this.buffer.toString('base64');\n    }\n    /** @internal */\n    toString(format) {\n        return this.buffer.toString(format);\n    }\n    /** @internal */\n    toExtendedJSON(options) {\n        options = options || {};\n        const base64String = this.buffer.toString('base64');\n        const subType = Number(this.sub_type).toString(16);\n        if (options.legacy) {\n            return {\n                $binary: base64String,\n                $type: subType.length === 1 ? '0' + subType : subType\n            };\n        }\n        return {\n            $binary: {\n                base64: base64String,\n                subType: subType.length === 1 ? '0' + subType : subType\n            }\n        };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc, options) {\n        options = options || {};\n        let data;\n        let type;\n        if ('$binary' in doc) {\n            if (options.legacy && typeof doc.$binary === 'string' && '$type' in doc) {\n                type = doc.$type ? parseInt(doc.$type, 16) : 0;\n                data = buffer.Buffer.from(doc.$binary, 'base64');\n            }\n            else {\n                if (typeof doc.$binary !== 'string') {\n                    type = doc.$binary.subType ? parseInt(doc.$binary.subType, 16) : 0;\n                    data = buffer.Buffer.from(doc.$binary.base64, 'base64');\n                }\n            }\n        }\n        else if ('$uuid' in doc) {\n            type = 4;\n            data = buffer.Buffer.from(uuid.parseUUID(doc.$uuid));\n        }\n        if (!data) {\n            throw new TypeError(`Unexpected Binary Extended JSON format ${JSON.stringify(doc)}`);\n        }\n        return new Binary(data, type);\n    }\n    /** @internal */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const asBuffer = this.value(true);\n        return `Binary(\"${asBuffer.toString('hex')}\", ${this.sub_type})`;\n    }\n}\nexports.Binary = Binary;\n/**\n * Binary default subtype\n * @internal\n */\nBinary.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/** Initial buffer default size */\nBinary.BUFFER_SIZE = 256;\n/** Default BSON type */\nBinary.SUBTYPE_DEFAULT = 0;\n/** Function BSON type */\nBinary.SUBTYPE_FUNCTION = 1;\n/** Byte Array BSON type */\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/** Deprecated UUID BSON type @deprecated Please use SUBTYPE_UUID */\nBinary.SUBTYPE_UUID_OLD = 3;\n/** UUID BSON type */\nBinary.SUBTYPE_UUID = 4;\n/** MD5 BSON type */\nBinary.SUBTYPE_MD5 = 5;\n/** User BSON type */\nBinary.SUBTYPE_USER_DEFINED = 128;\nObject.defineProperty(Binary.prototype, '_bsontype', { value: 'Binary' });\n\n});\n\nunwrapExports(binary);\nvar binary_1 = binary.Binary;\n\nvar code$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Code = void 0;\n/**\n * A class representation of the BSON Code type.\n * @public\n */\nclass Code {\n    /**\n     * @param code - a string or function.\n     * @param scope - an optional scope for the function.\n     */\n    constructor(code, scope) {\n        this.code = code;\n        this.scope = scope;\n    }\n    /** @internal */\n    toJSON() {\n        return { code: this.code, scope: this.scope };\n    }\n    /** @internal */\n    toExtendedJSON() {\n        if (this.scope) {\n            return { $code: this.code, $scope: this.scope };\n        }\n        return { $code: this.code };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        return new Code(doc.$code, doc.$scope);\n    }\n    /** @internal */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const codeJson = this.toJSON();\n        return `Code(\"${codeJson.code}\"${codeJson.scope ? `, ${JSON.stringify(codeJson.scope)}` : ''})`;\n    }\n}\nexports.Code = Code;\nObject.defineProperty(Code.prototype, '_bsontype', { value: 'Code' });\n\n});\n\nunwrapExports(code$1);\nvar code_1 = code$1.Code;\n\nvar db_ref = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DBRef = exports.isDBRefLike = void 0;\n\n/** @internal */\nfunction isDBRefLike(value) {\n    return utils.isObjectLike(value) && value['$id'] != null && value['$ref'] != null;\n}\nexports.isDBRefLike = isDBRefLike;\n/**\n * A class representation of the BSON DBRef type.\n * @public\n */\nclass DBRef {\n    /**\n     * @param collection - the collection name.\n     * @param oid - the reference ObjectId.\n     * @param db - optional db name, if omitted the reference is local to the current db.\n     */\n    constructor(collection, oid, db, fields) {\n        // check if namespace has been provided\n        const parts = collection.split('.');\n        if (parts.length === 2) {\n            db = parts.shift();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            collection = parts.shift();\n        }\n        this.collection = collection;\n        this.oid = oid;\n        this.db = db;\n        this.fields = fields || {};\n    }\n    // Property provided for compatibility with the 1.x parser\n    // the 1.x parser used a \"namespace\" property, while 4.x uses \"collection\"\n    /** @internal */\n    get namespace() {\n        return this.collection;\n    }\n    set namespace(value) {\n        this.collection = value;\n    }\n    /** @internal */\n    toJSON() {\n        const o = Object.assign({\n            $ref: this.collection,\n            $id: this.oid\n        }, this.fields);\n        if (this.db != null)\n            o.$db = this.db;\n        return o;\n    }\n    /** @internal */\n    toExtendedJSON(options) {\n        options = options || {};\n        let o = {\n            $ref: this.collection,\n            $id: this.oid\n        };\n        if (options.legacy) {\n            return o;\n        }\n        if (this.db)\n            o.$db = this.db;\n        o = Object.assign(o, this.fields);\n        return o;\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        const copy = Object.assign({}, doc);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new DBRef(doc.$ref, doc.$id, doc.$db, copy);\n    }\n    /** @internal */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        // NOTE: if OID is an ObjectId class it will just print the oid string.\n        const oid = this.oid === undefined || this.oid.toString === undefined ? this.oid : this.oid.toString();\n        return `DBRef(\"${this.namespace}\", \"${oid}\"${this.db ? `, \"${this.db}\"` : ''})`;\n    }\n}\nexports.DBRef = DBRef;\nObject.defineProperty(DBRef.prototype, '_bsontype', { value: 'DBRef' });\n\n});\n\nunwrapExports(db_ref);\nvar db_ref_1 = db_ref.DBRef;\nvar db_ref_2 = db_ref.isDBRefLike;\n\nvar long_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Long = void 0;\n\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nlet wasm = undefined;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(\n    // prettier-ignore\n    new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n}\ncatch (_a) {\n    // no wasm support\n}\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_24_DBL = 1 << 24;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\nconst TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/** A cache of the Long representations of small integer values. */\nconst INT_CACHE = {};\n/** A cache of the Long representations of small unsigned integer values. */\nconst UINT_CACHE = {};\n/**\n * A class representing a 64-bit integer\n * @public\n * @remarks\n * The internal representation of a long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16 bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n * Common constant values ZERO, ONE, NEG_ONE, etc. are found as static properties on this class.\n */\nclass Long {\n    /**\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n     *  See the from* functions below for more convenient ways of constructing Longs.\n     * @param low - The low (signed) 32 bits of the long\n     * @param high - The high (signed) 32 bits of the long\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     */\n    constructor(low = 0, high = 0, unsigned) {\n        this.low = low | 0;\n        this.high = high | 0;\n        this.unsigned = !!unsigned;\n        Object.defineProperty(this, '__isLong__', {\n            value: true,\n            configurable: false,\n            writable: false,\n            enumerable: false\n        });\n    }\n    /**\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits.\n     * Each is assumed to use 32 bits.\n     * @param lowBits - The low 32 bits\n     * @param highBits - The high 32 bits\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromBits(lowBits, highBits, unsigned) {\n        return new Long(lowBits, highBits, unsigned);\n    }\n    /**\n     * Returns a Long representing the given 32 bit integer value.\n     * @param value - The 32 bit integer in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromInt(value, unsigned) {\n        let obj, cachedObj, cache;\n        if (unsigned) {\n            value >>>= 0;\n            if ((cache = 0 <= value && value < 256)) {\n                cachedObj = UINT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n            if (cache)\n                UINT_CACHE[value] = obj;\n            return obj;\n        }\n        else {\n            value |= 0;\n            if ((cache = -128 <= value && value < 128)) {\n                cachedObj = INT_CACHE[value];\n                if (cachedObj)\n                    return cachedObj;\n            }\n            obj = Long.fromBits(value, value < 0 ? -1 : 0, false);\n            if (cache)\n                INT_CACHE[value] = obj;\n            return obj;\n        }\n    }\n    /**\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n     * @param value - The number in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromNumber(value, unsigned) {\n        if (isNaN(value))\n            return unsigned ? Long.UZERO : Long.ZERO;\n        if (unsigned) {\n            if (value < 0)\n                return Long.UZERO;\n            if (value >= TWO_PWR_64_DBL)\n                return Long.MAX_UNSIGNED_VALUE;\n        }\n        else {\n            if (value <= -TWO_PWR_63_DBL)\n                return Long.MIN_VALUE;\n            if (value + 1 >= TWO_PWR_63_DBL)\n                return Long.MAX_VALUE;\n        }\n        if (value < 0)\n            return Long.fromNumber(-value, unsigned).neg();\n        return Long.fromBits(value % TWO_PWR_32_DBL | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n    }\n    /**\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n     * @param value - The number in question\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromBigInt(value, unsigned) {\n        return Long.fromString(value.toString(), unsigned);\n    }\n    /**\n     * Returns a Long representation of the given string, written using the specified radix.\n     * @param str - The textual representation of the Long\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @param radix - The radix in which the text is written (2-36), defaults to 10\n     * @returns The corresponding Long value\n     */\n    static fromString(str, unsigned, radix) {\n        if (str.length === 0)\n            throw Error('empty string');\n        if (str === 'NaN' || str === 'Infinity' || str === '+Infinity' || str === '-Infinity')\n            return Long.ZERO;\n        if (typeof unsigned === 'number') {\n            // For goog.math.long compatibility\n            (radix = unsigned), (unsigned = false);\n        }\n        else {\n            unsigned = !!unsigned;\n        }\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw RangeError('radix');\n        let p;\n        if ((p = str.indexOf('-')) > 0)\n            throw Error('interior hyphen');\n        else if (p === 0) {\n            return Long.fromString(str.substring(1), unsigned, radix).neg();\n        }\n        // Do several (8) digits each time through the loop, so as to\n        // minimize the calls to the very expensive emulated div.\n        const radixToPower = Long.fromNumber(Math.pow(radix, 8));\n        let result = Long.ZERO;\n        for (let i = 0; i < str.length; i += 8) {\n            const size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n            if (size < 8) {\n                const power = Long.fromNumber(Math.pow(radix, size));\n                result = result.mul(power).add(Long.fromNumber(value));\n            }\n            else {\n                result = result.mul(radixToPower);\n                result = result.add(Long.fromNumber(value));\n            }\n        }\n        result.unsigned = unsigned;\n        return result;\n    }\n    /**\n     * Creates a Long from its byte representation.\n     * @param bytes - Byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @param le - Whether little or big endian, defaults to big endian\n     * @returns The corresponding Long value\n     */\n    static fromBytes(bytes, unsigned, le) {\n        return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n    }\n    /**\n     * Creates a Long from its little endian byte representation.\n     * @param bytes - Little endian byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromBytesLE(bytes, unsigned) {\n        return new Long(bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24), bytes[4] | (bytes[5] << 8) | (bytes[6] << 16) | (bytes[7] << 24), unsigned);\n    }\n    /**\n     * Creates a Long from its big endian byte representation.\n     * @param bytes - Big endian byte representation\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     * @returns The corresponding Long value\n     */\n    static fromBytesBE(bytes, unsigned) {\n        return new Long((bytes[4] << 24) | (bytes[5] << 16) | (bytes[6] << 8) | bytes[7], (bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3], unsigned);\n    }\n    /**\n     * Tests if the specified object is a Long.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    static isLong(value) {\n        return utils.isObjectLike(value) && value['__isLong__'] === true;\n    }\n    /**\n     * Converts the specified value to a Long.\n     * @param unsigned - Whether unsigned or not, defaults to signed\n     */\n    static fromValue(val, unsigned) {\n        if (typeof val === 'number')\n            return Long.fromNumber(val, unsigned);\n        if (typeof val === 'string')\n            return Long.fromString(val, unsigned);\n        // Throws for non-objects, converts non-instanceof Long:\n        return Long.fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n    }\n    /** Returns the sum of this and the specified Long. */\n    add(addend) {\n        if (!Long.isLong(addend))\n            addend = Long.fromValue(addend);\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n        const a48 = this.high >>> 16;\n        const a32 = this.high & 0xffff;\n        const a16 = this.low >>> 16;\n        const a00 = this.low & 0xffff;\n        const b48 = addend.high >>> 16;\n        const b32 = addend.high & 0xffff;\n        const b16 = addend.low >>> 16;\n        const b00 = addend.low & 0xffff;\n        let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 + b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 + b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 + b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 + b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    }\n    /**\n     * Returns the sum of this and the specified Long.\n     * @returns Sum\n     */\n    and(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n    }\n    /**\n     * Compares this Long's value with the specified's.\n     * @returns 0 if they are the same, 1 if the this is greater and -1 if the given one is greater\n     */\n    compare(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.eq(other))\n            return 0;\n        const thisNeg = this.isNegative(), otherNeg = other.isNegative();\n        if (thisNeg && !otherNeg)\n            return -1;\n        if (!thisNeg && otherNeg)\n            return 1;\n        // At this point the sign bits are the same\n        if (!this.unsigned)\n            return this.sub(other).isNegative() ? -1 : 1;\n        // Both are positive if at least one is unsigned\n        return other.high >>> 0 > this.high >>> 0 ||\n            (other.high === this.high && other.low >>> 0 > this.low >>> 0)\n            ? -1\n            : 1;\n    }\n    /** This is an alias of {@link Long.compare} */\n    comp(other) {\n        return this.compare(other);\n    }\n    /**\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or unsigned if this Long is unsigned.\n     * @returns Quotient\n     */\n    divide(divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        if (divisor.isZero())\n            throw Error('division by zero');\n        // use wasm support if present\n        if (wasm) {\n            // guard against signed division overflow: the largest\n            // negative number / -1 would be 1 larger than the largest\n            // positive number, due to two's complement.\n            if (!this.unsigned &&\n                this.high === -0x80000000 &&\n                divisor.low === -1 &&\n                divisor.high === -1) {\n                // be consistent with non-wasm code path\n                return this;\n            }\n            const low = (this.unsigned ? wasm.div_u : wasm.div_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (this.isZero())\n            return this.unsigned ? Long.UZERO : Long.ZERO;\n        let approx, rem, res;\n        if (!this.unsigned) {\n            // This section is only relevant for signed longs and is derived from the\n            // closure library as a whole.\n            if (this.eq(Long.MIN_VALUE)) {\n                if (divisor.eq(Long.ONE) || divisor.eq(Long.NEG_ONE))\n                    return Long.MIN_VALUE;\n                // recall that -MIN_VALUE == MIN_VALUE\n                else if (divisor.eq(Long.MIN_VALUE))\n                    return Long.ONE;\n                else {\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                    const halfThis = this.shr(1);\n                    approx = halfThis.div(divisor).shl(1);\n                    if (approx.eq(Long.ZERO)) {\n                        return divisor.isNegative() ? Long.ONE : Long.NEG_ONE;\n                    }\n                    else {\n                        rem = this.sub(divisor.mul(approx));\n                        res = approx.add(rem.div(divisor));\n                        return res;\n                    }\n                }\n            }\n            else if (divisor.eq(Long.MIN_VALUE))\n                return this.unsigned ? Long.UZERO : Long.ZERO;\n            if (this.isNegative()) {\n                if (divisor.isNegative())\n                    return this.neg().div(divisor.neg());\n                return this.neg().div(divisor).neg();\n            }\n            else if (divisor.isNegative())\n                return this.div(divisor.neg()).neg();\n            res = Long.ZERO;\n        }\n        else {\n            // The algorithm below has not been made for unsigned longs. It's therefore\n            // required to take special care of the MSB prior to running it.\n            if (!divisor.unsigned)\n                divisor = divisor.toUnsigned();\n            if (divisor.gt(this))\n                return Long.UZERO;\n            if (divisor.gt(this.shru(1)))\n                // 15 >>> 1 = 7 ; with divisor = 8 ; true\n                return Long.UONE;\n            res = Long.UZERO;\n        }\n        // Repeat the following until the remainder is less than other:  find a\n        // floating-point that approximates remainder / other *from below*, add this\n        // into the result, and subtract it from the remainder.  It is critical that\n        // the approximate value is less than or equal to the real value so that the\n        // remainder never becomes negative.\n        rem = this;\n        while (rem.gte(divisor)) {\n            // Approximate the result of division. This may be a little greater or\n            // smaller than the actual value.\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\n            // We will tweak the approximate result by changing it in the 48-th digit or\n            // the smallest non-fractional digit, whichever is larger.\n            const log2 = Math.ceil(Math.log(approx) / Math.LN2);\n            const delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n            // Decrease the approximation until it is smaller than the remainder.  Note\n            // that if it is too large, the product overflows and is negative.\n            let approxRes = Long.fromNumber(approx);\n            let approxRem = approxRes.mul(divisor);\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\n                approx -= delta;\n                approxRes = Long.fromNumber(approx, this.unsigned);\n                approxRem = approxRes.mul(divisor);\n            }\n            // We know the answer can't be zero... and actually, zero would cause\n            // infinite recursion since we would make no progress.\n            if (approxRes.isZero())\n                approxRes = Long.ONE;\n            res = res.add(approxRes);\n            rem = rem.sub(approxRem);\n        }\n        return res;\n    }\n    /**This is an alias of {@link Long.divide} */\n    div(divisor) {\n        return this.divide(divisor);\n    }\n    /**\n     * Tests if this Long's value equals the specified's.\n     * @param other - Other value\n     */\n    equals(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1)\n            return false;\n        return this.high === other.high && this.low === other.low;\n    }\n    /** This is an alias of {@link Long.equals} */\n    eq(other) {\n        return this.equals(other);\n    }\n    /** Gets the high 32 bits as a signed integer. */\n    getHighBits() {\n        return this.high;\n    }\n    /** Gets the high 32 bits as an unsigned integer. */\n    getHighBitsUnsigned() {\n        return this.high >>> 0;\n    }\n    /** Gets the low 32 bits as a signed integer. */\n    getLowBits() {\n        return this.low;\n    }\n    /** Gets the low 32 bits as an unsigned integer. */\n    getLowBitsUnsigned() {\n        return this.low >>> 0;\n    }\n    /** Gets the number of bits needed to represent the absolute value of this Long. */\n    getNumBitsAbs() {\n        if (this.isNegative()) {\n            // Unsigned Longs are never negative\n            return this.eq(Long.MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n        }\n        const val = this.high !== 0 ? this.high : this.low;\n        let bit;\n        for (bit = 31; bit > 0; bit--)\n            if ((val & (1 << bit)) !== 0)\n                break;\n        return this.high !== 0 ? bit + 33 : bit + 1;\n    }\n    /** Tests if this Long's value is greater than the specified's. */\n    greaterThan(other) {\n        return this.comp(other) > 0;\n    }\n    /** This is an alias of {@link Long.greaterThan} */\n    gt(other) {\n        return this.greaterThan(other);\n    }\n    /** Tests if this Long's value is greater than or equal the specified's. */\n    greaterThanOrEqual(other) {\n        return this.comp(other) >= 0;\n    }\n    /** This is an alias of {@link Long.greaterThanOrEqual} */\n    gte(other) {\n        return this.greaterThanOrEqual(other);\n    }\n    /** This is an alias of {@link Long.greaterThanOrEqual} */\n    ge(other) {\n        return this.greaterThanOrEqual(other);\n    }\n    /** Tests if this Long's value is even. */\n    isEven() {\n        return (this.low & 1) === 0;\n    }\n    /** Tests if this Long's value is negative. */\n    isNegative() {\n        return !this.unsigned && this.high < 0;\n    }\n    /** Tests if this Long's value is odd. */\n    isOdd() {\n        return (this.low & 1) === 1;\n    }\n    /** Tests if this Long's value is positive. */\n    isPositive() {\n        return this.unsigned || this.high >= 0;\n    }\n    /** Tests if this Long's value equals zero. */\n    isZero() {\n        return this.high === 0 && this.low === 0;\n    }\n    /** Tests if this Long's value is less than the specified's. */\n    lessThan(other) {\n        return this.comp(other) < 0;\n    }\n    /** This is an alias of {@link Long#lessThan}. */\n    lt(other) {\n        return this.lessThan(other);\n    }\n    /** Tests if this Long's value is less than or equal the specified's. */\n    lessThanOrEqual(other) {\n        return this.comp(other) <= 0;\n    }\n    /** This is an alias of {@link Long.lessThanOrEqual} */\n    lte(other) {\n        return this.lessThanOrEqual(other);\n    }\n    /** Returns this Long modulo the specified. */\n    modulo(divisor) {\n        if (!Long.isLong(divisor))\n            divisor = Long.fromValue(divisor);\n        // use wasm support if present\n        if (wasm) {\n            const low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(this.low, this.high, divisor.low, divisor.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        return this.sub(this.div(divisor).mul(divisor));\n    }\n    /** This is an alias of {@link Long.modulo} */\n    mod(divisor) {\n        return this.modulo(divisor);\n    }\n    /** This is an alias of {@link Long.modulo} */\n    rem(divisor) {\n        return this.modulo(divisor);\n    }\n    /**\n     * Returns the product of this and the specified Long.\n     * @param multiplier - Multiplier\n     * @returns Product\n     */\n    multiply(multiplier) {\n        if (this.isZero())\n            return Long.ZERO;\n        if (!Long.isLong(multiplier))\n            multiplier = Long.fromValue(multiplier);\n        // use wasm support if present\n        if (wasm) {\n            const low = wasm.mul(this.low, this.high, multiplier.low, multiplier.high);\n            return Long.fromBits(low, wasm.get_high(), this.unsigned);\n        }\n        if (multiplier.isZero())\n            return Long.ZERO;\n        if (this.eq(Long.MIN_VALUE))\n            return multiplier.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (multiplier.eq(Long.MIN_VALUE))\n            return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n        if (this.isNegative()) {\n            if (multiplier.isNegative())\n                return this.neg().mul(multiplier.neg());\n            else\n                return this.neg().mul(multiplier).neg();\n        }\n        else if (multiplier.isNegative())\n            return this.mul(multiplier.neg()).neg();\n        // If both longs are small, use float multiplication\n        if (this.lt(Long.TWO_PWR_24) && multiplier.lt(Long.TWO_PWR_24))\n            return Long.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n        // We can skip products that would overflow.\n        const a48 = this.high >>> 16;\n        const a32 = this.high & 0xffff;\n        const a16 = this.low >>> 16;\n        const a00 = this.low & 0xffff;\n        const b48 = multiplier.high >>> 16;\n        const b32 = multiplier.high & 0xffff;\n        const b16 = multiplier.low >>> 16;\n        const b00 = multiplier.low & 0xffff;\n        let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 * b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xffff;\n        c16 += a16 * b00;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c16 += a00 * b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xffff;\n        c32 += a32 * b00;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a16 * b16;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c32 += a00 * b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xffff;\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n        c48 &= 0xffff;\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\n    }\n    /** This is an alias of {@link Long.multiply} */\n    mul(multiplier) {\n        return this.multiply(multiplier);\n    }\n    /** Returns the Negation of this Long's value. */\n    negate() {\n        if (!this.unsigned && this.eq(Long.MIN_VALUE))\n            return Long.MIN_VALUE;\n        return this.not().add(Long.ONE);\n    }\n    /** This is an alias of {@link Long.negate} */\n    neg() {\n        return this.negate();\n    }\n    /** Returns the bitwise NOT of this Long. */\n    not() {\n        return Long.fromBits(~this.low, ~this.high, this.unsigned);\n    }\n    /** Tests if this Long's value differs from the specified's. */\n    notEquals(other) {\n        return !this.equals(other);\n    }\n    /** This is an alias of {@link Long.notEquals} */\n    neq(other) {\n        return this.notEquals(other);\n    }\n    /** This is an alias of {@link Long.notEquals} */\n    ne(other) {\n        return this.notEquals(other);\n    }\n    /**\n     * Returns the bitwise OR of this Long and the specified.\n     */\n    or(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n    }\n    /**\n     * Returns this Long with bits shifted to the left by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n    shiftLeft(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\n        else\n            return Long.fromBits(0, this.low << (numBits - 32), this.unsigned);\n    }\n    /** This is an alias of {@link Long.shiftLeft} */\n    shl(numBits) {\n        return this.shiftLeft(numBits);\n    }\n    /**\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n    shiftRight(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        if ((numBits &= 63) === 0)\n            return this;\n        else if (numBits < 32)\n            return Long.fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\n        else\n            return Long.fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\n    }\n    /** This is an alias of {@link Long.shiftRight} */\n    shr(numBits) {\n        return this.shiftRight(numBits);\n    }\n    /**\n     * Returns this Long with bits logically shifted to the right by the given amount.\n     * @param numBits - Number of bits\n     * @returns Shifted Long\n     */\n    shiftRightUnsigned(numBits) {\n        if (Long.isLong(numBits))\n            numBits = numBits.toInt();\n        numBits &= 63;\n        if (numBits === 0)\n            return this;\n        else {\n            const high = this.high;\n            if (numBits < 32) {\n                const low = this.low;\n                return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\n            }\n            else if (numBits === 32)\n                return Long.fromBits(high, 0, this.unsigned);\n            else\n                return Long.fromBits(high >>> (numBits - 32), 0, this.unsigned);\n        }\n    }\n    /** This is an alias of {@link Long.shiftRightUnsigned} */\n    shr_u(numBits) {\n        return this.shiftRightUnsigned(numBits);\n    }\n    /** This is an alias of {@link Long.shiftRightUnsigned} */\n    shru(numBits) {\n        return this.shiftRightUnsigned(numBits);\n    }\n    /**\n     * Returns the difference of this and the specified Long.\n     * @param subtrahend - Subtrahend\n     * @returns Difference\n     */\n    subtract(subtrahend) {\n        if (!Long.isLong(subtrahend))\n            subtrahend = Long.fromValue(subtrahend);\n        return this.add(subtrahend.neg());\n    }\n    /** This is an alias of {@link Long.subtract} */\n    sub(subtrahend) {\n        return this.subtract(subtrahend);\n    }\n    /** Converts the Long to a 32 bit integer, assuming it is a 32 bit integer. */\n    toInt() {\n        return this.unsigned ? this.low >>> 0 : this.low;\n    }\n    /** Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa). */\n    toNumber() {\n        if (this.unsigned)\n            return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n    }\n    /** Converts the Long to a BigInt (arbitrary precision). */\n    toBigInt() {\n        return BigInt(this.toString());\n    }\n    /**\n     * Converts this Long to its byte representation.\n     * @param le - Whether little or big endian, defaults to big endian\n     * @returns Byte representation\n     */\n    toBytes(le) {\n        return le ? this.toBytesLE() : this.toBytesBE();\n    }\n    /**\n     * Converts this Long to its little endian byte representation.\n     * @returns Little endian byte representation\n     */\n    toBytesLE() {\n        const hi = this.high, lo = this.low;\n        return [\n            lo & 0xff,\n            (lo >>> 8) & 0xff,\n            (lo >>> 16) & 0xff,\n            lo >>> 24,\n            hi & 0xff,\n            (hi >>> 8) & 0xff,\n            (hi >>> 16) & 0xff,\n            hi >>> 24\n        ];\n    }\n    /**\n     * Converts this Long to its big endian byte representation.\n     * @returns Big endian byte representation\n     */\n    toBytesBE() {\n        const hi = this.high, lo = this.low;\n        return [\n            hi >>> 24,\n            (hi >>> 16) & 0xff,\n            (hi >>> 8) & 0xff,\n            hi & 0xff,\n            lo >>> 24,\n            (lo >>> 16) & 0xff,\n            (lo >>> 8) & 0xff,\n            lo & 0xff\n        ];\n    }\n    /**\n     * Converts this Long to signed.\n     */\n    toSigned() {\n        if (!this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, false);\n    }\n    /**\n     * Converts the Long to a string written in the specified radix.\n     * @param radix - Radix (2-36), defaults to 10\n     * @throws RangeError If `radix` is out of range\n     */\n    toString(radix) {\n        radix = radix || 10;\n        if (radix < 2 || 36 < radix)\n            throw RangeError('radix');\n        if (this.isZero())\n            return '0';\n        if (this.isNegative()) {\n            // Unsigned Longs are never negative\n            if (this.eq(Long.MIN_VALUE)) {\n                // We need to change the Long value before it can be negated, so we remove\n                // the bottom-most digit in this base and then recurse to do the rest.\n                const radixLong = Long.fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);\n                return div.toString(radix) + rem1.toInt().toString(radix);\n            }\n            else\n                return '-' + this.neg().toString(radix);\n        }\n        // Do several (6) digits each time through the loop, so as to\n        // minimize the calls to the very expensive emulated div.\n        const radixToPower = Long.fromNumber(Math.pow(radix, 6), this.unsigned);\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let rem = this;\n        let result = '';\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const remDiv = rem.div(radixToPower);\n            const intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0;\n            let digits = intval.toString(radix);\n            rem = remDiv;\n            if (rem.isZero()) {\n                return digits + result;\n            }\n            else {\n                while (digits.length < 6)\n                    digits = '0' + digits;\n                result = '' + digits + result;\n            }\n        }\n    }\n    /** Converts this Long to unsigned. */\n    toUnsigned() {\n        if (this.unsigned)\n            return this;\n        return Long.fromBits(this.low, this.high, true);\n    }\n    /** Returns the bitwise XOR of this Long and the given one. */\n    xor(other) {\n        if (!Long.isLong(other))\n            other = Long.fromValue(other);\n        return Long.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n    }\n    /** This is an alias of {@link Long.isZero} */\n    eqz() {\n        return this.isZero();\n    }\n    /** This is an alias of {@link Long.lessThanOrEqual} */\n    le(other) {\n        return this.lessThanOrEqual(other);\n    }\n    /*\n     ****************************************************************\n     *                  BSON SPECIFIC ADDITIONS                     *\n     ****************************************************************\n     */\n    toExtendedJSON(options) {\n        if (options && options.relaxed)\n            return this.toNumber();\n        return { $numberLong: this.toString() };\n    }\n    static fromExtendedJSON(doc, options) {\n        const result = Long.fromString(doc.$numberLong);\n        return options && options.relaxed ? result.toNumber() : result;\n    }\n    /** @internal */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `Long(\"${this.toString()}\")`;\n    }\n}\nexports.Long = Long;\nLong.TWO_PWR_24 = Long.fromInt(TWO_PWR_24_DBL);\n/** Maximum unsigned value. */\nLong.MAX_UNSIGNED_VALUE = Long.fromBits(0xffffffff | 0, 0xffffffff | 0, true);\n/** Signed zero */\nLong.ZERO = Long.fromInt(0);\n/** Unsigned zero. */\nLong.UZERO = Long.fromInt(0, true);\n/** Signed one. */\nLong.ONE = Long.fromInt(1);\n/** Unsigned one. */\nLong.UONE = Long.fromInt(1, true);\n/** Signed negative one. */\nLong.NEG_ONE = Long.fromInt(-1);\n/** Maximum signed value. */\nLong.MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0, false);\n/** Minimum signed value. */\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0, false);\nObject.defineProperty(Long.prototype, '__isLong__', { value: true });\nObject.defineProperty(Long.prototype, '_bsontype', { value: 'Long' });\n\n});\n\nunwrapExports(long_1);\nvar long_2 = long_1.Long;\n\nvar decimal128 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decimal128 = void 0;\n\n\nconst PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nconst PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nconst PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\nconst EXPONENT_MAX = 6111;\nconst EXPONENT_MIN = -6176;\nconst EXPONENT_BIAS = 6176;\nconst MAX_DIGITS = 34;\n// Nan value bits as 32 bit values (due to lack of longs)\nconst NAN_BUFFER = [\n    0x7c,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00\n].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nconst INF_NEGATIVE_BUFFER = [\n    0xf8,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00\n].reverse();\nconst INF_POSITIVE_BUFFER = [\n    0x78,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00\n].reverse();\nconst EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\n// Extract least significant 5 bits\nconst COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nconst EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nconst COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nconst COMBINATION_NAN = 31;\n// Detect if the value is a digit\nfunction isDigit(value) {\n    return !isNaN(parseInt(value, 10));\n}\n// Divide two uint128 values\nfunction divideu128(value) {\n    const DIVISOR = long_1.Long.fromNumber(1000 * 1000 * 1000);\n    let _rem = long_1.Long.fromNumber(0);\n    if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n        return { quotient: value, rem: _rem };\n    }\n    for (let i = 0; i <= 3; i++) {\n        // Adjust remainder to match value of next dividend\n        _rem = _rem.shiftLeft(32);\n        // Add the divided to _rem\n        _rem = _rem.add(new long_1.Long(value.parts[i], 0));\n        value.parts[i] = _rem.div(DIVISOR).low;\n        _rem = _rem.modulo(DIVISOR);\n    }\n    return { quotient: value, rem: _rem };\n}\n// Multiply two Long values and return the 128 bit value\nfunction multiply64x2(left, right) {\n    if (!left && !right) {\n        return { high: long_1.Long.fromNumber(0), low: long_1.Long.fromNumber(0) };\n    }\n    const leftHigh = left.shiftRightUnsigned(32);\n    const leftLow = new long_1.Long(left.getLowBits(), 0);\n    const rightHigh = right.shiftRightUnsigned(32);\n    const rightLow = new long_1.Long(right.getLowBits(), 0);\n    let productHigh = leftHigh.multiply(rightHigh);\n    let productMid = leftHigh.multiply(rightLow);\n    const productMid2 = leftLow.multiply(rightHigh);\n    let productLow = leftLow.multiply(rightLow);\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productMid = new long_1.Long(productMid.getLowBits(), 0)\n        .add(productMid2)\n        .add(productLow.shiftRightUnsigned(32));\n    productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n    productLow = productMid.shiftLeft(32).add(new long_1.Long(productLow.getLowBits(), 0));\n    // Return the 128 bit result\n    return { high: productHigh, low: productLow };\n}\nfunction lessThan(left, right) {\n    // Make values unsigned\n    const uhleft = left.high >>> 0;\n    const uhright = right.high >>> 0;\n    // Compare high bits first\n    if (uhleft < uhright) {\n        return true;\n    }\n    else if (uhleft === uhright) {\n        const ulleft = left.low >>> 0;\n        const ulright = right.low >>> 0;\n        if (ulleft < ulright)\n            return true;\n    }\n    return false;\n}\nfunction invalidErr(string, message) {\n    throw new TypeError(`\"${string}\" is not a valid Decimal128 string - ${message}`);\n}\n/**\n * A class representation of the BSON Decimal128 type.\n * @public\n */\nclass Decimal128 {\n    /** @param bytes - a buffer containing the raw Decimal128 bytes in little endian order */\n    constructor(bytes) {\n        this.bytes = bytes;\n    }\n    /**\n     * Create a Decimal128 instance from a string representation\n     *\n     * @param representation - a numeric string representation.\n     */\n    static fromString(representation) {\n        // Parse state tracking\n        let isNegative = false;\n        let sawRadix = false;\n        let foundNonZero = false;\n        // Total number of significant digits (no leading or trailing zero)\n        let significantDigits = 0;\n        // Total number of significand digits read\n        let nDigitsRead = 0;\n        // Total number of digits (no leading zeros)\n        let nDigits = 0;\n        // The number of the digits after radix\n        let radixPosition = 0;\n        // The index of the first non-zero in *str*\n        let firstNonZero = 0;\n        // Digits Array\n        const digits = [0];\n        // The number of digits in digits\n        let nDigitsStored = 0;\n        // Insertion pointer for digits\n        let digitsInsert = 0;\n        // The index of the first non-zero digit\n        let firstDigit = 0;\n        // The index of the last digit\n        let lastDigit = 0;\n        // Exponent\n        let exponent = 0;\n        // loop index over array\n        let i = 0;\n        // The high 17 digits of the significand\n        let significandHigh = new long_1.Long(0, 0);\n        // The low 17 digits of the significand\n        let significandLow = new long_1.Long(0, 0);\n        // The biased exponent\n        let biasedExponent = 0;\n        // Read index\n        let index = 0;\n        // Naively prevent against REDOS attacks.\n        // TODO: implementing a custom parsing for this, or refactoring the regex would yield\n        //       further gains.\n        if (representation.length >= 7000) {\n            throw new TypeError('' + representation + ' not a valid Decimal128 string');\n        }\n        // Results\n        const stringMatch = representation.match(PARSE_STRING_REGEXP);\n        const infMatch = representation.match(PARSE_INF_REGEXP);\n        const nanMatch = representation.match(PARSE_NAN_REGEXP);\n        // Validate the string\n        if ((!stringMatch && !infMatch && !nanMatch) || representation.length === 0) {\n            throw new TypeError('' + representation + ' not a valid Decimal128 string');\n        }\n        if (stringMatch) {\n            // full_match = stringMatch[0]\n            // sign = stringMatch[1]\n            const unsignedNumber = stringMatch[2];\n            // stringMatch[3] is undefined if a whole number (ex \"1\", 12\")\n            // but defined if a number w/ decimal in it (ex \"1.0, 12.2\")\n            const e = stringMatch[4];\n            const expSign = stringMatch[5];\n            const expNumber = stringMatch[6];\n            // they provided e, but didn't give an exponent number. for ex \"1e\"\n            if (e && expNumber === undefined)\n                invalidErr(representation, 'missing exponent power');\n            // they provided e, but didn't give a number before it. for ex \"e1\"\n            if (e && unsignedNumber === undefined)\n                invalidErr(representation, 'missing exponent base');\n            if (e === undefined && (expSign || expNumber)) {\n                invalidErr(representation, 'missing e before exponent');\n            }\n        }\n        // Get the negative or positive sign\n        if (representation[index] === '+' || representation[index] === '-') {\n            isNegative = representation[index++] === '-';\n        }\n        // Check if user passed Infinity or NaN\n        if (!isDigit(representation[index]) && representation[index] !== '.') {\n            if (representation[index] === 'i' || representation[index] === 'I') {\n                return new Decimal128(buffer.Buffer.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n            }\n            else if (representation[index] === 'N') {\n                return new Decimal128(buffer.Buffer.from(NAN_BUFFER));\n            }\n        }\n        // Read all the digits\n        while (isDigit(representation[index]) || representation[index] === '.') {\n            if (representation[index] === '.') {\n                if (sawRadix)\n                    invalidErr(representation, 'contains multiple periods');\n                sawRadix = true;\n                index = index + 1;\n                continue;\n            }\n            if (nDigitsStored < 34) {\n                if (representation[index] !== '0' || foundNonZero) {\n                    if (!foundNonZero) {\n                        firstNonZero = nDigitsRead;\n                    }\n                    foundNonZero = true;\n                    // Only store 34 digits\n                    digits[digitsInsert++] = parseInt(representation[index], 10);\n                    nDigitsStored = nDigitsStored + 1;\n                }\n            }\n            if (foundNonZero)\n                nDigits = nDigits + 1;\n            if (sawRadix)\n                radixPosition = radixPosition + 1;\n            nDigitsRead = nDigitsRead + 1;\n            index = index + 1;\n        }\n        if (sawRadix && !nDigitsRead)\n            throw new TypeError('' + representation + ' not a valid Decimal128 string');\n        // Read exponent if exists\n        if (representation[index] === 'e' || representation[index] === 'E') {\n            // Read exponent digits\n            const match = representation.substr(++index).match(EXPONENT_REGEX);\n            // No digits read\n            if (!match || !match[2])\n                return new Decimal128(buffer.Buffer.from(NAN_BUFFER));\n            // Get exponent\n            exponent = parseInt(match[0], 10);\n            // Adjust the index\n            index = index + match[0].length;\n        }\n        // Return not a number\n        if (representation[index])\n            return new Decimal128(buffer.Buffer.from(NAN_BUFFER));\n        // Done reading input\n        // Find first non-zero digit in digits\n        firstDigit = 0;\n        if (!nDigitsStored) {\n            firstDigit = 0;\n            lastDigit = 0;\n            digits[0] = 0;\n            nDigits = 1;\n            nDigitsStored = 1;\n            significantDigits = 0;\n        }\n        else {\n            lastDigit = nDigitsStored - 1;\n            significantDigits = nDigits;\n            if (significantDigits !== 1) {\n                while (representation[firstNonZero + significantDigits - 1] === '0') {\n                    significantDigits = significantDigits - 1;\n                }\n            }\n        }\n        // Normalization of exponent\n        // Correct exponent based on radix position, and shift significand as needed\n        // to represent user input\n        // Overflow prevention\n        if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n            exponent = EXPONENT_MIN;\n        }\n        else {\n            exponent = exponent - radixPosition;\n        }\n        // Attempt to normalize the exponent\n        while (exponent > EXPONENT_MAX) {\n            // Shift exponent to significand and decrease\n            lastDigit = lastDigit + 1;\n            if (lastDigit - firstDigit > MAX_DIGITS) {\n                // Check if we have a zero then just hard clamp, otherwise fail\n                const digitsString = digits.join('');\n                if (digitsString.match(/^0+$/)) {\n                    exponent = EXPONENT_MAX;\n                    break;\n                }\n                invalidErr(representation, 'overflow');\n            }\n            exponent = exponent - 1;\n        }\n        while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n            // Shift last digit. can only do this if < significant digits than # stored.\n            if (lastDigit === 0 && significantDigits < nDigitsStored) {\n                exponent = EXPONENT_MIN;\n                significantDigits = 0;\n                break;\n            }\n            if (nDigitsStored < nDigits) {\n                // adjust to match digits not stored\n                nDigits = nDigits - 1;\n            }\n            else {\n                // adjust to round\n                lastDigit = lastDigit - 1;\n            }\n            if (exponent < EXPONENT_MAX) {\n                exponent = exponent + 1;\n            }\n            else {\n                // Check if we have a zero then just hard clamp, otherwise fail\n                const digitsString = digits.join('');\n                if (digitsString.match(/^0+$/)) {\n                    exponent = EXPONENT_MAX;\n                    break;\n                }\n                invalidErr(representation, 'overflow');\n            }\n        }\n        // Round\n        // We've normalized the exponent, but might still need to round.\n        if (lastDigit - firstDigit + 1 < significantDigits) {\n            let endOfString = nDigitsRead;\n            // If we have seen a radix point, 'string' is 1 longer than we have\n            // documented with ndigits_read, so inc the position of the first nonzero\n            // digit and the position that digits are read to.\n            if (sawRadix) {\n                firstNonZero = firstNonZero + 1;\n                endOfString = endOfString + 1;\n            }\n            // if negative, we need to increment again to account for - sign at start.\n            if (isNegative) {\n                firstNonZero = firstNonZero + 1;\n                endOfString = endOfString + 1;\n            }\n            const roundDigit = parseInt(representation[firstNonZero + lastDigit + 1], 10);\n            let roundBit = 0;\n            if (roundDigit >= 5) {\n                roundBit = 1;\n                if (roundDigit === 5) {\n                    roundBit = digits[lastDigit] % 2 === 1 ? 1 : 0;\n                    for (i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n                        if (parseInt(representation[i], 10)) {\n                            roundBit = 1;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (roundBit) {\n                let dIdx = lastDigit;\n                for (; dIdx >= 0; dIdx--) {\n                    if (++digits[dIdx] > 9) {\n                        digits[dIdx] = 0;\n                        // overflowed most significant digit\n                        if (dIdx === 0) {\n                            if (exponent < EXPONENT_MAX) {\n                                exponent = exponent + 1;\n                                digits[dIdx] = 1;\n                            }\n                            else {\n                                return new Decimal128(buffer.Buffer.from(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // Encode significand\n        // The high 17 digits of the significand\n        significandHigh = long_1.Long.fromNumber(0);\n        // The low 17 digits of the significand\n        significandLow = long_1.Long.fromNumber(0);\n        // read a zero\n        if (significantDigits === 0) {\n            significandHigh = long_1.Long.fromNumber(0);\n            significandLow = long_1.Long.fromNumber(0);\n        }\n        else if (lastDigit - firstDigit < 17) {\n            let dIdx = firstDigit;\n            significandLow = long_1.Long.fromNumber(digits[dIdx++]);\n            significandHigh = new long_1.Long(0, 0);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(long_1.Long.fromNumber(10));\n                significandLow = significandLow.add(long_1.Long.fromNumber(digits[dIdx]));\n            }\n        }\n        else {\n            let dIdx = firstDigit;\n            significandHigh = long_1.Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit - 17; dIdx++) {\n                significandHigh = significandHigh.multiply(long_1.Long.fromNumber(10));\n                significandHigh = significandHigh.add(long_1.Long.fromNumber(digits[dIdx]));\n            }\n            significandLow = long_1.Long.fromNumber(digits[dIdx++]);\n            for (; dIdx <= lastDigit; dIdx++) {\n                significandLow = significandLow.multiply(long_1.Long.fromNumber(10));\n                significandLow = significandLow.add(long_1.Long.fromNumber(digits[dIdx]));\n            }\n        }\n        const significand = multiply64x2(significandHigh, long_1.Long.fromString('100000000000000000'));\n        significand.low = significand.low.add(significandLow);\n        if (lessThan(significand.low, significandLow)) {\n            significand.high = significand.high.add(long_1.Long.fromNumber(1));\n        }\n        // Biased exponent\n        biasedExponent = exponent + EXPONENT_BIAS;\n        const dec = { low: long_1.Long.fromNumber(0), high: long_1.Long.fromNumber(0) };\n        // Encode combination, exponent, and significand.\n        if (significand.high.shiftRightUnsigned(49).and(long_1.Long.fromNumber(1)).equals(long_1.Long.fromNumber(1))) {\n            // Encode '11' into bits 1 to 3\n            dec.high = dec.high.or(long_1.Long.fromNumber(0x3).shiftLeft(61));\n            dec.high = dec.high.or(long_1.Long.fromNumber(biasedExponent).and(long_1.Long.fromNumber(0x3fff).shiftLeft(47)));\n            dec.high = dec.high.or(significand.high.and(long_1.Long.fromNumber(0x7fffffffffff)));\n        }\n        else {\n            dec.high = dec.high.or(long_1.Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n            dec.high = dec.high.or(significand.high.and(long_1.Long.fromNumber(0x1ffffffffffff)));\n        }\n        dec.low = significand.low;\n        // Encode sign\n        if (isNegative) {\n            dec.high = dec.high.or(long_1.Long.fromString('9223372036854775808'));\n        }\n        // Encode into a buffer\n        const buffer$1 = buffer.Buffer.alloc(16);\n        index = 0;\n        // Encode the low 64 bits of the decimal\n        // Encode low bits\n        buffer$1[index++] = dec.low.low & 0xff;\n        buffer$1[index++] = (dec.low.low >> 8) & 0xff;\n        buffer$1[index++] = (dec.low.low >> 16) & 0xff;\n        buffer$1[index++] = (dec.low.low >> 24) & 0xff;\n        // Encode high bits\n        buffer$1[index++] = dec.low.high & 0xff;\n        buffer$1[index++] = (dec.low.high >> 8) & 0xff;\n        buffer$1[index++] = (dec.low.high >> 16) & 0xff;\n        buffer$1[index++] = (dec.low.high >> 24) & 0xff;\n        // Encode the high 64 bits of the decimal\n        // Encode low bits\n        buffer$1[index++] = dec.high.low & 0xff;\n        buffer$1[index++] = (dec.high.low >> 8) & 0xff;\n        buffer$1[index++] = (dec.high.low >> 16) & 0xff;\n        buffer$1[index++] = (dec.high.low >> 24) & 0xff;\n        // Encode high bits\n        buffer$1[index++] = dec.high.high & 0xff;\n        buffer$1[index++] = (dec.high.high >> 8) & 0xff;\n        buffer$1[index++] = (dec.high.high >> 16) & 0xff;\n        buffer$1[index++] = (dec.high.high >> 24) & 0xff;\n        // Return the new Decimal128\n        return new Decimal128(buffer$1);\n    }\n    /** Create a string representation of the raw Decimal128 value */\n    toString() {\n        // Note: bits in this routine are referred to starting at 0,\n        // from the sign bit, towards the coefficient.\n        // decoded biased exponent (14 bits)\n        let biased_exponent;\n        // the number of significand digits\n        let significand_digits = 0;\n        // the base-10 digits in the significand\n        const significand = new Array(36);\n        for (let i = 0; i < significand.length; i++)\n            significand[i] = 0;\n        // read pointer into significand\n        let index = 0;\n        // true if the number is zero\n        let is_zero = false;\n        // the most significant significand bits (50-46)\n        let significand_msb;\n        // temporary storage for significand decoding\n        let significand128 = { parts: [0, 0, 0, 0] };\n        // indexing variables\n        let j, k;\n        // Output string\n        const string = [];\n        // Unpack index\n        index = 0;\n        // Buffer reference\n        const buffer = this.bytes;\n        // Unpack the low 64bits into a long\n        // bits 96 - 127\n        const low = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // bits 64 - 95\n        const midl = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // Unpack the high 64bits into a long\n        // bits 32 - 63\n        const midh = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // bits 0 - 31\n        const high = buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n        // Unpack index\n        index = 0;\n        // Create the state of the decimal\n        const dec = {\n            low: new long_1.Long(low, midl),\n            high: new long_1.Long(midh, high)\n        };\n        if (dec.high.lessThan(long_1.Long.ZERO)) {\n            string.push('-');\n        }\n        // Decode combination field and exponent\n        // bits 1 - 5\n        const combination = (high >> 26) & COMBINATION_MASK;\n        if (combination >> 3 === 3) {\n            // Check for 'special' values\n            if (combination === COMBINATION_INFINITY) {\n                return string.join('') + 'Infinity';\n            }\n            else if (combination === COMBINATION_NAN) {\n                return 'NaN';\n            }\n            else {\n                biased_exponent = (high >> 15) & EXPONENT_MASK;\n                significand_msb = 0x08 + ((high >> 14) & 0x01);\n            }\n        }\n        else {\n            significand_msb = (high >> 14) & 0x07;\n            biased_exponent = (high >> 17) & EXPONENT_MASK;\n        }\n        // unbiased exponent\n        const exponent = biased_exponent - EXPONENT_BIAS;\n        // Create string of significand digits\n        // Convert the 114-bit binary number represented by\n        // (significand_high, significand_low) to at most 34 decimal\n        // digits through modulo and division.\n        significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n        significand128.parts[1] = midh;\n        significand128.parts[2] = midl;\n        significand128.parts[3] = low;\n        if (significand128.parts[0] === 0 &&\n            significand128.parts[1] === 0 &&\n            significand128.parts[2] === 0 &&\n            significand128.parts[3] === 0) {\n            is_zero = true;\n        }\n        else {\n            for (k = 3; k >= 0; k--) {\n                let least_digits = 0;\n                // Perform the divide\n                const result = divideu128(significand128);\n                significand128 = result.quotient;\n                least_digits = result.rem.low;\n                // We now have the 9 least significant digits (in base 2).\n                // Convert and output to string.\n                if (!least_digits)\n                    continue;\n                for (j = 8; j >= 0; j--) {\n                    // significand[k * 9 + j] = Math.round(least_digits % 10);\n                    significand[k * 9 + j] = least_digits % 10;\n                    // least_digits = Math.round(least_digits / 10);\n                    least_digits = Math.floor(least_digits / 10);\n                }\n            }\n        }\n        // Output format options:\n        // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n        // Regular    - ddd.ddd\n        if (is_zero) {\n            significand_digits = 1;\n            significand[index] = 0;\n        }\n        else {\n            significand_digits = 36;\n            while (!significand[index]) {\n                significand_digits = significand_digits - 1;\n                index = index + 1;\n            }\n        }\n        // the exponent if scientific notation is used\n        const scientific_exponent = significand_digits - 1 + exponent;\n        // The scientific exponent checks are dictated by the string conversion\n        // specification and are somewhat arbitrary cutoffs.\n        //\n        // We must check exponent > 0, because if this is the case, the number\n        // has trailing zeros.  However, we *cannot* output these trailing zeros,\n        // because doing so would change the precision of the value, and would\n        // change stored data if the string converted number is round tripped.\n        if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n            // Scientific format\n            // if there are too many significant digits, we should just be treating numbers\n            // as + or - 0 and using the non-scientific exponent (this is for the \"invalid\n            // representation should be treated as 0/-0\" spec cases in decimal128-1.json)\n            if (significand_digits > 34) {\n                string.push(`${0}`);\n                if (exponent > 0)\n                    string.push('E+' + exponent);\n                else if (exponent < 0)\n                    string.push('E' + exponent);\n                return string.join('');\n            }\n            string.push(`${significand[index++]}`);\n            significand_digits = significand_digits - 1;\n            if (significand_digits) {\n                string.push('.');\n            }\n            for (let i = 0; i < significand_digits; i++) {\n                string.push(`${significand[index++]}`);\n            }\n            // Exponent\n            string.push('E');\n            if (scientific_exponent > 0) {\n                string.push('+' + scientific_exponent);\n            }\n            else {\n                string.push(`${scientific_exponent}`);\n            }\n        }\n        else {\n            // Regular format with no decimal place\n            if (exponent >= 0) {\n                for (let i = 0; i < significand_digits; i++) {\n                    string.push(`${significand[index++]}`);\n                }\n            }\n            else {\n                let radix_position = significand_digits + exponent;\n                // non-zero digits before radix\n                if (radix_position > 0) {\n                    for (let i = 0; i < radix_position; i++) {\n                        string.push(`${significand[index++]}`);\n                    }\n                }\n                else {\n                    string.push('0');\n                }\n                string.push('.');\n                // add leading zeros after radix\n                while (radix_position++ < 0) {\n                    string.push('0');\n                }\n                for (let i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n                    string.push(`${significand[index++]}`);\n                }\n            }\n        }\n        return string.join('');\n    }\n    toJSON() {\n        return { $numberDecimal: this.toString() };\n    }\n    /** @internal */\n    toExtendedJSON() {\n        return { $numberDecimal: this.toString() };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        return Decimal128.fromString(doc.$numberDecimal);\n    }\n    /** @internal */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `Decimal128(\"${this.toString()}\")`;\n    }\n}\nexports.Decimal128 = Decimal128;\nObject.defineProperty(Decimal128.prototype, '_bsontype', { value: 'Decimal128' });\n\n});\n\nunwrapExports(decimal128);\nvar decimal128_1 = decimal128.Decimal128;\n\nvar double_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Double = void 0;\n/**\n * A class representation of the BSON Double type.\n * @public\n */\nclass Double {\n    /**\n     * Create a Double type\n     *\n     * @param value - the number we want to represent as a double.\n     */\n    constructor(value) {\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value;\n    }\n    /**\n     * Access the number value.\n     *\n     * @returns returns the wrapped double number.\n     */\n    valueOf() {\n        return this.value;\n    }\n    /** @internal */\n    toJSON() {\n        return this.value;\n    }\n    /** @internal */\n    toExtendedJSON(options) {\n        if (options && (options.legacy || (options.relaxed && isFinite(this.value)))) {\n            return this.value;\n        }\n        // NOTE: JavaScript has +0 and -0, apparently to model limit calculations. If a user\n        // explicitly provided `-0` then we need to ensure the sign makes it into the output\n        if (Object.is(Math.sign(this.value), -0)) {\n            return { $numberDouble: `-${this.value.toFixed(1)}` };\n        }\n        let $numberDouble;\n        if (Number.isInteger(this.value)) {\n            $numberDouble = this.value.toFixed(1);\n            if ($numberDouble.length >= 13) {\n                $numberDouble = this.value.toExponential(13).toUpperCase();\n            }\n        }\n        else {\n            $numberDouble = this.value.toString();\n        }\n        return { $numberDouble };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc, options) {\n        const doubleValue = parseFloat(doc.$numberDouble);\n        return options && options.relaxed ? doubleValue : new Double(doubleValue);\n    }\n    /** @internal */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        const eJSON = this.toExtendedJSON();\n        return `Double(${eJSON.$numberDouble})`;\n    }\n}\nexports.Double = Double;\nObject.defineProperty(Double.prototype, '_bsontype', { value: 'Double' });\n\n});\n\nunwrapExports(double_1);\nvar double_2 = double_1.Double;\n\nvar int_32 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Int32 = void 0;\n/**\n * A class representation of a BSON Int32 type.\n * @public\n */\nclass Int32 {\n    /**\n     * Create an Int32 type\n     *\n     * @param value - the number we want to represent as an int32.\n     */\n    constructor(value) {\n        if (value instanceof Number) {\n            value = value.valueOf();\n        }\n        this.value = +value;\n    }\n    /**\n     * Access the number value.\n     *\n     * @returns returns the wrapped int32 number.\n     */\n    valueOf() {\n        return this.value;\n    }\n    /** @internal */\n    toJSON() {\n        return this.value;\n    }\n    /** @internal */\n    toExtendedJSON(options) {\n        if (options && (options.relaxed || options.legacy))\n            return this.value;\n        return { $numberInt: this.value.toString() };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc, options) {\n        return options && options.relaxed ? parseInt(doc.$numberInt, 10) : new Int32(doc.$numberInt);\n    }\n    /** @internal */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `Int32(${this.valueOf()})`;\n    }\n}\nexports.Int32 = Int32;\nObject.defineProperty(Int32.prototype, '_bsontype', { value: 'Int32' });\n\n});\n\nunwrapExports(int_32);\nvar int_32_1 = int_32.Int32;\n\nvar max_key = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MaxKey = void 0;\n/**\n * A class representation of the BSON MaxKey type.\n * @public\n */\nclass MaxKey {\n    /** @internal */\n    toExtendedJSON() {\n        return { $maxKey: 1 };\n    }\n    /** @internal */\n    static fromExtendedJSON() {\n        return new MaxKey();\n    }\n    /** @internal */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return 'MaxKey()';\n    }\n}\nexports.MaxKey = MaxKey;\nObject.defineProperty(MaxKey.prototype, '_bsontype', { value: 'MaxKey' });\n\n});\n\nunwrapExports(max_key);\nvar max_key_1 = max_key.MaxKey;\n\nvar min_key = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinKey = void 0;\n/**\n * A class representation of the BSON MinKey type.\n * @public\n */\nclass MinKey {\n    /** @internal */\n    toExtendedJSON() {\n        return { $minKey: 1 };\n    }\n    /** @internal */\n    static fromExtendedJSON() {\n        return new MinKey();\n    }\n    /** @internal */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return 'MinKey()';\n    }\n}\nexports.MinKey = MinKey;\nObject.defineProperty(MinKey.prototype, '_bsontype', { value: 'MinKey' });\n\n});\n\nunwrapExports(min_key);\nvar min_key_1 = min_key.MinKey;\n\nvar objectid = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectId = void 0;\n\n\n\n// constants\nconst PROCESS_UNIQUE = utils.randomBytes(5);\n// Regular expression that checks for hex value\nconst checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\n// Precomputed hex table enables speedy hex string conversion\nconst hexTable = [];\nfor (let i = 0; i < 256; i++) {\n    hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n// Lookup tables\nconst decodeLookup = [];\nlet i = 0;\nwhile (i < 10)\n    decodeLookup[0x30 + i] = i++;\nwhile (i < 16)\n    decodeLookup[0x41 - 10 + i] = decodeLookup[0x61 - 10 + i] = i++;\nconst kId = Symbol('id');\n/**\n * A class representation of the BSON ObjectId type.\n * @public\n */\nclass ObjectId {\n    /**\n     * Create an ObjectId type\n     *\n     * @param id - Can be a 24 character hex string, 12 byte binary Buffer, or a number.\n     */\n    constructor(id) {\n        // Duck-typing to support ObjectId from different npm packages\n        if (id instanceof ObjectId) {\n            this[kId] = id.id;\n            this.__id = id.__id;\n        }\n        if (typeof id === 'object' && id && 'id' in id) {\n            if ('toHexString' in id && typeof id.toHexString === 'function') {\n                this[kId] = buffer.Buffer.from(id.toHexString(), 'hex');\n            }\n            else {\n                this[kId] = typeof id.id === 'string' ? buffer.Buffer.from(id.id) : id.id;\n            }\n        }\n        // The most common use case (blank id, new objectId instance)\n        if (id == null || typeof id === 'number') {\n            // Generate a new id\n            this[kId] = ObjectId.generate(typeof id === 'number' ? id : undefined);\n            // If we are caching the hex string\n            if (ObjectId.cacheHexString) {\n                this.__id = this.id.toString('hex');\n            }\n        }\n        if (ArrayBuffer.isView(id) && id.byteLength === 12) {\n            this[kId] = ensure_buffer.ensureBuffer(id);\n        }\n        if (typeof id === 'string') {\n            if (id.length === 12) {\n                const bytes = buffer.Buffer.from(id);\n                if (bytes.byteLength === 12) {\n                    this[kId] = bytes;\n                }\n            }\n            else if (id.length === 24 && checkForHexRegExp.test(id)) {\n                this[kId] = buffer.Buffer.from(id, 'hex');\n            }\n            else {\n                throw new TypeError('Argument passed in must be a Buffer or string of 12 bytes or a string of 24 hex characters');\n            }\n        }\n        if (ObjectId.cacheHexString) {\n            this.__id = this.id.toString('hex');\n        }\n    }\n    /**\n     * The ObjectId bytes\n     * @readonly\n     */\n    get id() {\n        return this[kId];\n    }\n    set id(value) {\n        this[kId] = value;\n        if (ObjectId.cacheHexString) {\n            this.__id = value.toString('hex');\n        }\n    }\n    /**\n     * The generation time of this ObjectId instance\n     * @deprecated Please use getTimestamp / createFromTime which returns an int32 epoch\n     */\n    get generationTime() {\n        return this.id.readInt32BE(0);\n    }\n    set generationTime(value) {\n        // Encode time into first 4 bytes\n        this.id.writeUInt32BE(value, 0);\n    }\n    /** Returns the ObjectId id as a 24 character hex string representation */\n    toHexString() {\n        if (ObjectId.cacheHexString && this.__id) {\n            return this.__id;\n        }\n        const hexString = this.id.toString('hex');\n        if (ObjectId.cacheHexString && !this.__id) {\n            this.__id = hexString;\n        }\n        return hexString;\n    }\n    /**\n     * Update the ObjectId index\n     * @privateRemarks\n     * Used in generating new ObjectId's on the driver\n     * @internal\n     */\n    static getInc() {\n        return (ObjectId.index = (ObjectId.index + 1) % 0xffffff);\n    }\n    /**\n     * Generate a 12 byte id buffer used in ObjectId's\n     *\n     * @param time - pass in a second based timestamp.\n     */\n    static generate(time) {\n        if ('number' !== typeof time) {\n            time = ~~(Date.now() / 1000);\n        }\n        const inc = ObjectId.getInc();\n        const buffer$1 = buffer.Buffer.alloc(12);\n        // 4-byte timestamp\n        buffer$1.writeUInt32BE(time, 0);\n        // 5-byte process unique\n        buffer$1[4] = PROCESS_UNIQUE[0];\n        buffer$1[5] = PROCESS_UNIQUE[1];\n        buffer$1[6] = PROCESS_UNIQUE[2];\n        buffer$1[7] = PROCESS_UNIQUE[3];\n        buffer$1[8] = PROCESS_UNIQUE[4];\n        // 3-byte counter\n        buffer$1[11] = inc & 0xff;\n        buffer$1[10] = (inc >> 8) & 0xff;\n        buffer$1[9] = (inc >> 16) & 0xff;\n        return buffer$1;\n    }\n    /**\n     * Converts the id into a 24 character hex string for printing\n     *\n     * @param format - The Buffer toString format parameter.\n     * @internal\n     */\n    toString(format) {\n        // Is the id a buffer then use the buffer toString method to return the format\n        if (format)\n            return this.id.toString(format);\n        return this.toHexString();\n    }\n    /**\n     * Converts to its JSON the 24 character hex string representation.\n     * @internal\n     */\n    toJSON() {\n        return this.toHexString();\n    }\n    /**\n     * Compares the equality of this ObjectId with `otherID`.\n     *\n     * @param otherId - ObjectId instance to compare against.\n     */\n    equals(otherId) {\n        if (otherId === undefined || otherId === null) {\n            return false;\n        }\n        if (otherId instanceof ObjectId) {\n            return this.toString() === otherId.toString();\n        }\n        if (typeof otherId === 'string' &&\n            ObjectId.isValid(otherId) &&\n            otherId.length === 12 &&\n            this.id instanceof buffer.Buffer) {\n            return otherId === this.id.toString('binary');\n        }\n        if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 24) {\n            return otherId.toLowerCase() === this.toHexString();\n        }\n        if (typeof otherId === 'string' && ObjectId.isValid(otherId) && otherId.length === 12) {\n            return buffer.Buffer.from(otherId).equals(this.id);\n        }\n        if (typeof otherId === 'object' &&\n            'toHexString' in otherId &&\n            typeof otherId.toHexString === 'function') {\n            return otherId.toHexString() === this.toHexString();\n        }\n        return false;\n    }\n    /** Returns the generation date (accurate up to the second) that this ID was generated. */\n    getTimestamp() {\n        const timestamp = new Date();\n        const time = this.id.readUInt32BE(0);\n        timestamp.setTime(Math.floor(time) * 1000);\n        return timestamp;\n    }\n    /** @internal */\n    static createPk() {\n        return new ObjectId();\n    }\n    /**\n     * Creates an ObjectId from a second based number, with the rest of the ObjectId zeroed out. Used for comparisons or sorting the ObjectId.\n     *\n     * @param time - an integer number representing a number of seconds.\n     */\n    static createFromTime(time) {\n        const buffer$1 = buffer.Buffer.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n        // Encode time into first 4 bytes\n        buffer$1.writeUInt32BE(time, 0);\n        // Return the new objectId\n        return new ObjectId(buffer$1);\n    }\n    /**\n     * Creates an ObjectId from a hex string representation of an ObjectId.\n     *\n     * @param hexString - create a ObjectId from a passed in 24 character hexstring.\n     */\n    static createFromHexString(hexString) {\n        // Throw an error if it's not a valid setup\n        if (typeof hexString === 'undefined' || (hexString != null && hexString.length !== 24)) {\n            throw new TypeError('Argument passed in must be a single String of 12 bytes or a string of 24 hex characters');\n        }\n        return new ObjectId(buffer.Buffer.from(hexString, 'hex'));\n    }\n    /**\n     * Checks if a value is a valid bson ObjectId\n     *\n     * @param id - ObjectId instance to validate.\n     */\n    static isValid(id) {\n        if (id == null)\n            return false;\n        if (typeof id === 'number') {\n            return true;\n        }\n        if (typeof id === 'string') {\n            return id.length === 12 || (id.length === 24 && checkForHexRegExp.test(id));\n        }\n        if (id instanceof ObjectId) {\n            return true;\n        }\n        if (id instanceof buffer.Buffer && id.length === 12) {\n            return true;\n        }\n        // Duck-Typing detection of ObjectId like objects\n        if (typeof id === 'object' && 'toHexString' in id && typeof id.toHexString === 'function') {\n            if (typeof id.id === 'string') {\n                return id.id.length === 12;\n            }\n            return id.toHexString().length === 24 && checkForHexRegExp.test(id.id.toString('hex'));\n        }\n        return false;\n    }\n    /** @internal */\n    toExtendedJSON() {\n        if (this.toHexString)\n            return { $oid: this.toHexString() };\n        return { $oid: this.toString('hex') };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        return new ObjectId(doc.$oid);\n    }\n    /**\n     * Converts to a string representation of this Id.\n     *\n     * @returns return the 24 character hex string representation.\n     * @internal\n     */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `ObjectId(\"${this.toHexString()}\")`;\n    }\n}\nexports.ObjectId = ObjectId;\n/** @internal */\nObjectId.index = ~~(Math.random() * 0xffffff);\n// Deprecated methods\nObject.defineProperty(ObjectId.prototype, 'generate', {\n    value: utils.deprecate((time) => ObjectId.generate(time), 'Please use the static `ObjectId.generate(time)` instead')\n});\nObject.defineProperty(ObjectId.prototype, 'getInc', {\n    value: utils.deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n});\nObject.defineProperty(ObjectId.prototype, 'get_inc', {\n    value: utils.deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n});\nObject.defineProperty(ObjectId, 'get_inc', {\n    value: utils.deprecate(() => ObjectId.getInc(), 'Please use the static `ObjectId.getInc()` instead')\n});\nObject.defineProperty(ObjectId.prototype, '_bsontype', { value: 'ObjectID' });\n\n});\n\nunwrapExports(objectid);\nvar objectid_1 = objectid.ObjectId;\n\nvar regexp = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BSONRegExp = void 0;\nfunction alphabetize(str) {\n    return str.split('').sort().join('');\n}\n/**\n * A class representation of the BSON RegExp type.\n * @public\n */\nclass BSONRegExp {\n    /**\n     * @param pattern - The regular expression pattern to match\n     * @param options - The regular expression options\n     */\n    constructor(pattern, options) {\n        this.pattern = pattern;\n        this.options = options !== null && options !== void 0 ? options : '';\n        // Execute\n        alphabetize(this.options);\n        // Validate options\n        for (let i = 0; i < this.options.length; i++) {\n            if (!(this.options[i] === 'i' ||\n                this.options[i] === 'm' ||\n                this.options[i] === 'x' ||\n                this.options[i] === 'l' ||\n                this.options[i] === 's' ||\n                this.options[i] === 'u')) {\n                throw new Error(`The regular expression option [${this.options[i]}] is not supported`);\n            }\n        }\n    }\n    static parseOptions(options) {\n        return options ? options.split('').sort().join('') : '';\n    }\n    /** @internal */\n    toExtendedJSON(options) {\n        options = options || {};\n        if (options.legacy) {\n            return { $regex: this.pattern, $options: this.options };\n        }\n        return { $regularExpression: { pattern: this.pattern, options: this.options } };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        if ('$regex' in doc) {\n            if (typeof doc.$regex !== 'string') {\n                // This is for $regex query operators that have extended json values.\n                if (doc.$regex._bsontype === 'BSONRegExp') {\n                    return doc;\n                }\n            }\n            else {\n                return new BSONRegExp(doc.$regex, BSONRegExp.parseOptions(doc.$options));\n            }\n        }\n        if ('$regularExpression' in doc) {\n            return new BSONRegExp(doc.$regularExpression.pattern, BSONRegExp.parseOptions(doc.$regularExpression.options));\n        }\n        throw new TypeError(`Unexpected BSONRegExp EJSON object form: ${JSON.stringify(doc)}`);\n    }\n}\nexports.BSONRegExp = BSONRegExp;\nObject.defineProperty(BSONRegExp.prototype, '_bsontype', { value: 'BSONRegExp' });\n\n});\n\nunwrapExports(regexp);\nvar regexp_1 = regexp.BSONRegExp;\n\nvar symbol = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BSONSymbol = void 0;\n/**\n * A class representation of the BSON Symbol type.\n * @public\n */\nclass BSONSymbol {\n    /**\n     * @param value - the string representing the symbol.\n     */\n    constructor(value) {\n        this.value = value;\n    }\n    /** Access the wrapped string value. */\n    valueOf() {\n        return this.value;\n    }\n    /** @internal */\n    toString() {\n        return this.value;\n    }\n    /** @internal */\n    inspect() {\n        return `BSONSymbol(\"${this.value}\")`;\n    }\n    /** @internal */\n    toJSON() {\n        return this.value;\n    }\n    /** @internal */\n    toExtendedJSON() {\n        return { $symbol: this.value };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        return new BSONSymbol(doc.$symbol);\n    }\n    /** @internal */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n}\nexports.BSONSymbol = BSONSymbol;\nObject.defineProperty(BSONSymbol.prototype, '_bsontype', { value: 'Symbol' });\n\n});\n\nunwrapExports(symbol);\nvar symbol_1 = symbol.BSONSymbol;\n\nvar timestamp$1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Timestamp = exports.LongWithoutOverridesClass = void 0;\n\n/** @public */\nexports.LongWithoutOverridesClass = long_1.Long;\n/** @public */\nclass Timestamp extends exports.LongWithoutOverridesClass {\n    constructor(low, high) {\n        if (long_1.Long.isLong(low)) {\n            super(low.low, low.high, true);\n        }\n        else {\n            super(low, high, true);\n        }\n        Object.defineProperty(this, '_bsontype', {\n            value: 'Timestamp',\n            writable: false,\n            configurable: false,\n            enumerable: false\n        });\n    }\n    toJSON() {\n        return {\n            $timestamp: this.toString()\n        };\n    }\n    /** Returns a Timestamp represented by the given (32-bit) integer value. */\n    static fromInt(value) {\n        return new Timestamp(long_1.Long.fromInt(value, true));\n    }\n    /** Returns a Timestamp representing the given number value, provided that it is a finite number. Otherwise, zero is returned. */\n    static fromNumber(value) {\n        return new Timestamp(long_1.Long.fromNumber(value, true));\n    }\n    /**\n     * Returns a Timestamp for the given high and low bits. Each is assumed to use 32 bits.\n     *\n     * @param lowBits - the low 32-bits.\n     * @param highBits - the high 32-bits.\n     */\n    static fromBits(lowBits, highBits) {\n        return new Timestamp(lowBits, highBits);\n    }\n    /**\n     * Returns a Timestamp from the given string, optionally using the given radix.\n     *\n     * @param str - the textual representation of the Timestamp.\n     * @param optRadix - the radix in which the text is written.\n     */\n    static fromString(str, optRadix) {\n        return new Timestamp(long_1.Long.fromString(str, true, optRadix));\n    }\n    /** @internal */\n    toExtendedJSON() {\n        return { $timestamp: { t: this.high >>> 0, i: this.low >>> 0 } };\n    }\n    /** @internal */\n    static fromExtendedJSON(doc) {\n        return new Timestamp(doc.$timestamp.i, doc.$timestamp.t);\n    }\n    /** @internal */\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return this.inspect();\n    }\n    inspect() {\n        return `Timestamp(${this.getLowBits().toString()}, ${this.getHighBits().toString()})`;\n    }\n}\nexports.Timestamp = Timestamp;\nTimestamp.MAX_VALUE = long_1.Long.MAX_UNSIGNED_VALUE;\n\n});\n\nunwrapExports(timestamp$1);\nvar timestamp_1 = timestamp$1.Timestamp;\nvar timestamp_2 = timestamp$1.LongWithoutOverridesClass;\n\nvar extended_json = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EJSON = exports.isBSONType = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction isBSONType(value) {\n    return (utils.isObjectLike(value) && Reflect.has(value, '_bsontype') && typeof value._bsontype === 'string');\n}\nexports.isBSONType = isBSONType;\n// INT32 boundaries\nconst BSON_INT32_MAX = 0x7fffffff;\nconst BSON_INT32_MIN = -0x80000000;\n// INT64 boundaries\nconst BSON_INT64_MAX = 0x7fffffffffffffff;\nconst BSON_INT64_MIN = -0x8000000000000000;\n// all the types where we don't need to do any special processing and can just pass the EJSON\n//straight to type.fromExtendedJSON\nconst keysToCodecs = {\n    $oid: objectid.ObjectId,\n    $binary: binary.Binary,\n    $uuid: binary.Binary,\n    $symbol: symbol.BSONSymbol,\n    $numberInt: int_32.Int32,\n    $numberDecimal: decimal128.Decimal128,\n    $numberDouble: double_1.Double,\n    $numberLong: long_1.Long,\n    $minKey: min_key.MinKey,\n    $maxKey: max_key.MaxKey,\n    $regex: regexp.BSONRegExp,\n    $regularExpression: regexp.BSONRegExp,\n    $timestamp: timestamp$1.Timestamp\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction deserializeValue(value, options = {}) {\n    if (typeof value === 'number') {\n        if (options.relaxed || options.legacy) {\n            return value;\n        }\n        // if it's an integer, should interpret as smallest BSON integer\n        // that can represent it exactly. (if out of range, interpret as double.)\n        if (Math.floor(value) === value) {\n            if (value >= BSON_INT32_MIN && value <= BSON_INT32_MAX)\n                return new int_32.Int32(value);\n            if (value >= BSON_INT64_MIN && value <= BSON_INT64_MAX)\n                return long_1.Long.fromNumber(value);\n        }\n        // If the number is a non-integer or out of integer range, should interpret as BSON Double.\n        return new double_1.Double(value);\n    }\n    // from here on out we're looking for bson types, so bail if its not an object\n    if (value == null || typeof value !== 'object')\n        return value;\n    // upgrade deprecated undefined to null\n    if (value.$undefined)\n        return null;\n    const keys = Object.keys(value).filter(k => k.startsWith('$') && value[k] != null);\n    for (let i = 0; i < keys.length; i++) {\n        const c = keysToCodecs[keys[i]];\n        if (c)\n            return c.fromExtendedJSON(value, options);\n    }\n    if (value.$date != null) {\n        const d = value.$date;\n        const date = new Date();\n        if (options.legacy) {\n            if (typeof d === 'number')\n                date.setTime(d);\n            else if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n        }\n        else {\n            if (typeof d === 'string')\n                date.setTime(Date.parse(d));\n            else if (long_1.Long.isLong(d))\n                date.setTime(d.toNumber());\n            else if (typeof d === 'number' && options.relaxed)\n                date.setTime(d);\n        }\n        return date;\n    }\n    if (value.$code != null) {\n        const copy = Object.assign({}, value);\n        if (value.$scope) {\n            copy.$scope = deserializeValue(value.$scope);\n        }\n        return code$1.Code.fromExtendedJSON(value);\n    }\n    if (value.$ref != null || value.$dbPointer != null) {\n        const v = value.$ref ? value : value.$dbPointer;\n        // we run into this in a \"degenerate EJSON\" case (with $id and $ref order flipped)\n        // because of the order JSON.parse goes through the document\n        if (v instanceof db_ref.DBRef)\n            return v;\n        const dollarKeys = Object.keys(v).filter(k => k.startsWith('$'));\n        let valid = true;\n        dollarKeys.forEach(k => {\n            if (['$ref', '$id', '$db'].indexOf(k) === -1)\n                valid = false;\n        });\n        // only make DBRef if $ keys are all valid\n        if (valid)\n            return db_ref.DBRef.fromExtendedJSON(v);\n    }\n    return value;\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeArray(array, options) {\n    return array.map((v) => serializeValue(v, options));\n}\nfunction getISOString(date) {\n    const isoStr = date.toISOString();\n    // we should only show milliseconds in timestamp if they're non-zero\n    return date.getUTCMilliseconds() !== 0 ? isoStr : isoStr.slice(0, -5) + 'Z';\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeValue(value, options) {\n    if (Array.isArray(value))\n        return serializeArray(value, options);\n    if (value === undefined)\n        return null;\n    if (value instanceof Date) {\n        const dateNum = value.getTime(), \n        // is it in year range 1970-9999?\n        inRange = dateNum > -1 && dateNum < 253402318800000;\n        if (options.legacy) {\n            return options.relaxed && inRange\n                ? { $date: value.getTime() }\n                : { $date: getISOString(value) };\n        }\n        return options.relaxed && inRange\n            ? { $date: getISOString(value) }\n            : { $date: { $numberLong: value.getTime().toString() } };\n    }\n    if (typeof value === 'number' && !options.relaxed) {\n        // it's an integer\n        if (Math.floor(value) === value) {\n            const int32Range = value >= BSON_INT32_MIN && value <= BSON_INT32_MAX, int64Range = value >= BSON_INT64_MIN && value <= BSON_INT64_MAX;\n            // interpret as being of the smallest BSON integer type that can represent the number exactly\n            if (int32Range)\n                return { $numberInt: value.toString() };\n            if (int64Range)\n                return { $numberLong: value.toString() };\n        }\n        return { $numberDouble: value.toString() };\n    }\n    if (value instanceof RegExp) {\n        let flags = value.flags;\n        if (flags === undefined) {\n            const match = value.toString().match(/[gimuy]*$/);\n            if (match) {\n                flags = match[0];\n            }\n        }\n        const rx = new regexp.BSONRegExp(value.source, flags);\n        return rx.toExtendedJSON(options);\n    }\n    if (value != null && typeof value === 'object')\n        return serializeDocument(value, options);\n    return value;\n}\nconst BSON_TYPE_MAPPINGS = {\n    Binary: (o) => new binary.Binary(o.value(), o.sub_type),\n    Code: (o) => new code$1.Code(o.code, o.scope),\n    DBRef: (o) => new db_ref.DBRef(o.collection || o.namespace, o.oid, o.db, o.fields),\n    Decimal128: (o) => new decimal128.Decimal128(o.bytes),\n    Double: (o) => new double_1.Double(o.value),\n    Int32: (o) => new int_32.Int32(o.value),\n    Long: (o) => long_1.Long.fromBits(\n    // underscore variants for 1.x backwards compatibility\n    o.low != null ? o.low : o.low_, o.low != null ? o.high : o.high_, o.low != null ? o.unsigned : o.unsigned_),\n    MaxKey: () => new max_key.MaxKey(),\n    MinKey: () => new min_key.MinKey(),\n    ObjectID: (o) => new objectid.ObjectId(o),\n    ObjectId: (o) => new objectid.ObjectId(o),\n    BSONRegExp: (o) => new regexp.BSONRegExp(o.pattern, o.options),\n    Symbol: (o) => new symbol.BSONSymbol(o.value),\n    Timestamp: (o) => timestamp$1.Timestamp.fromBits(o.low, o.high)\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction serializeDocument(doc, options) {\n    if (doc == null || typeof doc !== 'object')\n        throw new Error('not an object instance');\n    const bsontype = doc._bsontype;\n    if (typeof bsontype === 'undefined') {\n        // It's a regular object. Recursively serialize its property values.\n        const _doc = {};\n        for (const name in doc) {\n            _doc[name] = serializeValue(doc[name], options);\n        }\n        return _doc;\n    }\n    else if (isBSONType(doc)) {\n        // the \"document\" is really just a BSON type object\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let outDoc = doc;\n        if (typeof outDoc.toExtendedJSON !== 'function') {\n            // There's no EJSON serialization function on the object. It's probably an\n            // object created by a previous version of this library (or another library)\n            // that's duck-typing objects to look like they were generated by this library).\n            // Copy the object into this library's version of that type.\n            const mapper = BSON_TYPE_MAPPINGS[doc._bsontype];\n            if (!mapper) {\n                throw new TypeError('Unrecognized or invalid _bsontype: ' + doc._bsontype);\n            }\n            outDoc = mapper(outDoc);\n        }\n        // Two BSON types may have nested objects that may need to be serialized too\n        if (bsontype === 'Code' && outDoc.scope) {\n            outDoc = new code$1.Code(outDoc.code, serializeValue(outDoc.scope, options));\n        }\n        else if (bsontype === 'DBRef' && outDoc.oid) {\n            outDoc = new db_ref.DBRef(outDoc.collection, serializeValue(outDoc.oid, options), outDoc.db, outDoc.fields);\n        }\n        return outDoc.toExtendedJSON(options);\n    }\n    else {\n        throw new Error('_bsontype must be a string, but was: ' + typeof bsontype);\n    }\n}\n/**\n * EJSON parse / stringify API\n * @public\n */\n// the namespace here is used to emulate `export * as EJSON from '...'`\n// which as of now (sept 2020) api-extractor does not support\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar EJSON;\n(function (EJSON) {\n    /**\n     * Parse an Extended JSON string, constructing the JavaScript value or object described by that\n     * string.\n     *\n     * @example\n     * ```js\n     * const { EJSON } = require('bson');\n     * const text = '{ \"int32\": { \"$numberInt\": \"10\" } }';\n     *\n     * // prints { int32: { [String: '10'] _bsontype: 'Int32', value: '10' } }\n     * console.log(EJSON.parse(text, { relaxed: false }));\n     *\n     * // prints { int32: 10 }\n     * console.log(EJSON.parse(text));\n     * ```\n     */\n    function parse(text, options) {\n        const finalOptions = Object.assign({}, { relaxed: true, legacy: false }, options);\n        // relaxed implies not strict\n        if (typeof finalOptions.relaxed === 'boolean')\n            finalOptions.strict = !finalOptions.relaxed;\n        if (typeof finalOptions.strict === 'boolean')\n            finalOptions.relaxed = !finalOptions.strict;\n        return JSON.parse(text, (_key, value) => deserializeValue(value, finalOptions));\n    }\n    EJSON.parse = parse;\n    /**\n     * Converts a BSON document to an Extended JSON string, optionally replacing values if a replacer\n     * function is specified or optionally including only the specified properties if a replacer array\n     * is specified.\n     *\n     * @param value - The value to convert to extended JSON\n     * @param replacer - A function that alters the behavior of the stringification process, or an array of String and Number objects that serve as a whitelist for selecting/filtering the properties of the value object to be included in the JSON string. If this value is null or not provided, all properties of the object are included in the resulting JSON string\n     * @param space - A String or Number object that's used to insert white space into the output JSON string for readability purposes.\n     * @param options - Optional settings\n     *\n     * @example\n     * ```js\n     * const { EJSON } = require('bson');\n     * const Int32 = require('mongodb').Int32;\n     * const doc = { int32: new Int32(10) };\n     *\n     * // prints '{\"int32\":{\"$numberInt\":\"10\"}}'\n     * console.log(EJSON.stringify(doc, { relaxed: false }));\n     *\n     * // prints '{\"int32\":10}'\n     * console.log(EJSON.stringify(doc));\n     * ```\n     */\n    function stringify(value, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    replacer, space, options) {\n        if (space != null && typeof space === 'object') {\n            options = space;\n            space = 0;\n        }\n        if (replacer != null && typeof replacer === 'object' && !Array.isArray(replacer)) {\n            options = replacer;\n            replacer = undefined;\n            space = 0;\n        }\n        options = Object.assign({}, { relaxed: true, legacy: false }, options);\n        const doc = serializeValue(value, options);\n        return JSON.stringify(doc, replacer, space);\n    }\n    EJSON.stringify = stringify;\n    /**\n     * Serializes an object to an Extended JSON string, and reparse it as a JavaScript object.\n     *\n     * @param value - The object to serialize\n     * @param options - Optional settings passed to the `stringify` function\n     */\n    function serialize(value, options) {\n        options = options || {};\n        return JSON.parse(stringify(value, options));\n    }\n    EJSON.serialize = serialize;\n    /**\n     * Deserializes an Extended JSON object into a plain JavaScript object with native/BSON types\n     *\n     * @param ejson - The Extended JSON object to deserialize\n     * @param options - Optional settings passed to the parse method\n     */\n    function deserialize(ejson, options) {\n        options = options || {};\n        return parse(JSON.stringify(ejson), options);\n    }\n    EJSON.deserialize = deserialize;\n})(EJSON = exports.EJSON || (exports.EJSON = {}));\n\n});\n\nunwrapExports(extended_json);\nvar extended_json_1 = extended_json.EJSON;\nvar extended_json_2 = extended_json.isBSONType;\n\nvar map = createCommonjsModule(function (module, exports) {\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// We have an ES6 Map available, return the native instance\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Map = void 0;\n/** @public */\nlet bsonMap;\nexports.Map = bsonMap;\nconst check = function (potentialGlobal) {\n    // eslint-disable-next-line eqeqeq\n    return potentialGlobal && potentialGlobal.Math == Math && potentialGlobal;\n};\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nfunction getGlobal() {\n    // eslint-disable-next-line no-undef\n    return (check(typeof globalThis === 'object' && globalThis) ||\n        check(typeof window === 'object' && window) ||\n        check(typeof self === 'object' && self) ||\n        check(typeof commonjsGlobal === 'object' && commonjsGlobal) ||\n        Function('return this')());\n}\nconst bsonGlobal = getGlobal();\nif (Object.prototype.hasOwnProperty.call(bsonGlobal, 'Map')) {\n    exports.Map = bsonMap = bsonGlobal.Map;\n}\nelse {\n    // We will return a polyfill\n    exports.Map = bsonMap = class Map {\n        constructor(array = []) {\n            this._keys = [];\n            this._values = {};\n            for (let i = 0; i < array.length; i++) {\n                if (array[i] == null)\n                    continue; // skip null and undefined\n                const entry = array[i];\n                const key = entry[0];\n                const value = entry[1];\n                // Add the key to the list of keys in order\n                this._keys.push(key);\n                // Add the key and value to the values dictionary with a point\n                // to the location in the ordered keys list\n                this._values[key] = { v: value, i: this._keys.length - 1 };\n            }\n        }\n        clear() {\n            this._keys = [];\n            this._values = {};\n        }\n        delete(key) {\n            const value = this._values[key];\n            if (value == null)\n                return false;\n            // Delete entry\n            delete this._values[key];\n            // Remove the key from the ordered keys list\n            this._keys.splice(value.i, 1);\n            return true;\n        }\n        entries() {\n            let index = 0;\n            return {\n                next: () => {\n                    const key = this._keys[index++];\n                    return {\n                        value: key !== undefined ? [key, this._values[key].v] : undefined,\n                        done: key !== undefined ? false : true\n                    };\n                }\n            };\n        }\n        forEach(callback, self) {\n            self = self || this;\n            for (let i = 0; i < this._keys.length; i++) {\n                const key = this._keys[i];\n                // Call the forEach callback\n                callback.call(self, this._values[key].v, key, self);\n            }\n        }\n        get(key) {\n            return this._values[key] ? this._values[key].v : undefined;\n        }\n        has(key) {\n            return this._values[key] != null;\n        }\n        keys() {\n            let index = 0;\n            return {\n                next: () => {\n                    const key = this._keys[index++];\n                    return {\n                        value: key !== undefined ? key : undefined,\n                        done: key !== undefined ? false : true\n                    };\n                }\n            };\n        }\n        set(key, value) {\n            if (this._values[key]) {\n                this._values[key].v = value;\n                return this;\n            }\n            // Add the key to the list of keys in order\n            this._keys.push(key);\n            // Add the key and value to the values dictionary with a point\n            // to the location in the ordered keys list\n            this._values[key] = { v: value, i: this._keys.length - 1 };\n            return this;\n        }\n        values() {\n            let index = 0;\n            return {\n                next: () => {\n                    const key = this._keys[index++];\n                    return {\n                        value: key !== undefined ? this._values[key].v : undefined,\n                        done: key !== undefined ? false : true\n                    };\n                }\n            };\n        }\n        get size() {\n            return this._keys.length;\n        }\n    };\n}\n\n});\n\nunwrapExports(map);\nvar map_1 = map.Map;\n\nvar constants = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BSON_BINARY_SUBTYPE_USER_DEFINED = exports.BSON_BINARY_SUBTYPE_MD5 = exports.BSON_BINARY_SUBTYPE_UUID_NEW = exports.BSON_BINARY_SUBTYPE_UUID = exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = exports.BSON_BINARY_SUBTYPE_FUNCTION = exports.BSON_BINARY_SUBTYPE_DEFAULT = exports.BSON_DATA_MAX_KEY = exports.BSON_DATA_MIN_KEY = exports.BSON_DATA_DECIMAL128 = exports.BSON_DATA_LONG = exports.BSON_DATA_TIMESTAMP = exports.BSON_DATA_INT = exports.BSON_DATA_CODE_W_SCOPE = exports.BSON_DATA_SYMBOL = exports.BSON_DATA_CODE = exports.BSON_DATA_DBPOINTER = exports.BSON_DATA_REGEXP = exports.BSON_DATA_NULL = exports.BSON_DATA_DATE = exports.BSON_DATA_BOOLEAN = exports.BSON_DATA_OID = exports.BSON_DATA_UNDEFINED = exports.BSON_DATA_BINARY = exports.BSON_DATA_ARRAY = exports.BSON_DATA_OBJECT = exports.BSON_DATA_STRING = exports.BSON_DATA_NUMBER = exports.JS_INT_MIN = exports.JS_INT_MAX = exports.BSON_INT64_MIN = exports.BSON_INT64_MAX = exports.BSON_INT32_MIN = exports.BSON_INT32_MAX = void 0;\n/** @internal */\nexports.BSON_INT32_MAX = 0x7fffffff;\n/** @internal */\nexports.BSON_INT32_MIN = -0x80000000;\n/** @internal */\nexports.BSON_INT64_MAX = Math.pow(2, 63) - 1;\n/** @internal */\nexports.BSON_INT64_MIN = -Math.pow(2, 63);\n/**\n * Any integer up to 2^53 can be precisely represented by a double.\n * @internal\n */\nexports.JS_INT_MAX = Math.pow(2, 53);\n/**\n * Any integer down to -2^53 can be precisely represented by a double.\n * @internal\n */\nexports.JS_INT_MIN = -Math.pow(2, 53);\n/** Number BSON Type @internal */\nexports.BSON_DATA_NUMBER = 1;\n/** String BSON Type @internal */\nexports.BSON_DATA_STRING = 2;\n/** Object BSON Type @internal */\nexports.BSON_DATA_OBJECT = 3;\n/** Array BSON Type @internal */\nexports.BSON_DATA_ARRAY = 4;\n/** Binary BSON Type @internal */\nexports.BSON_DATA_BINARY = 5;\n/** Binary BSON Type @internal */\nexports.BSON_DATA_UNDEFINED = 6;\n/** ObjectId BSON Type @internal */\nexports.BSON_DATA_OID = 7;\n/** Boolean BSON Type @internal */\nexports.BSON_DATA_BOOLEAN = 8;\n/** Date BSON Type @internal */\nexports.BSON_DATA_DATE = 9;\n/** null BSON Type @internal */\nexports.BSON_DATA_NULL = 10;\n/** RegExp BSON Type @internal */\nexports.BSON_DATA_REGEXP = 11;\n/** Code BSON Type @internal */\nexports.BSON_DATA_DBPOINTER = 12;\n/** Code BSON Type @internal */\nexports.BSON_DATA_CODE = 13;\n/** Symbol BSON Type @internal */\nexports.BSON_DATA_SYMBOL = 14;\n/** Code with Scope BSON Type @internal */\nexports.BSON_DATA_CODE_W_SCOPE = 15;\n/** 32 bit Integer BSON Type @internal */\nexports.BSON_DATA_INT = 16;\n/** Timestamp BSON Type @internal */\nexports.BSON_DATA_TIMESTAMP = 17;\n/** Long BSON Type @internal */\nexports.BSON_DATA_LONG = 18;\n/** Decimal128 BSON Type @internal */\nexports.BSON_DATA_DECIMAL128 = 19;\n/** MinKey BSON Type @internal */\nexports.BSON_DATA_MIN_KEY = 0xff;\n/** MaxKey BSON Type @internal */\nexports.BSON_DATA_MAX_KEY = 0x7f;\n/** Binary Default Type @internal */\nexports.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/** Binary Function Type @internal */\nexports.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/** Binary Byte Array Type @internal */\nexports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/** Binary Deprecated UUID Type @deprecated Please use BSON_BINARY_SUBTYPE_UUID_NEW @internal */\nexports.BSON_BINARY_SUBTYPE_UUID = 3;\n/** Binary UUID Type @internal */\nexports.BSON_BINARY_SUBTYPE_UUID_NEW = 4;\n/** Binary MD5 Type @internal */\nexports.BSON_BINARY_SUBTYPE_MD5 = 5;\n/** Binary User Defined Type @internal */\nexports.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n});\n\nunwrapExports(constants);\nvar constants_1 = constants.BSON_BINARY_SUBTYPE_USER_DEFINED;\nvar constants_2 = constants.BSON_BINARY_SUBTYPE_MD5;\nvar constants_3 = constants.BSON_BINARY_SUBTYPE_UUID_NEW;\nvar constants_4 = constants.BSON_BINARY_SUBTYPE_UUID;\nvar constants_5 = constants.BSON_BINARY_SUBTYPE_BYTE_ARRAY;\nvar constants_6 = constants.BSON_BINARY_SUBTYPE_FUNCTION;\nvar constants_7 = constants.BSON_BINARY_SUBTYPE_DEFAULT;\nvar constants_8 = constants.BSON_DATA_MAX_KEY;\nvar constants_9 = constants.BSON_DATA_MIN_KEY;\nvar constants_10 = constants.BSON_DATA_DECIMAL128;\nvar constants_11 = constants.BSON_DATA_LONG;\nvar constants_12 = constants.BSON_DATA_TIMESTAMP;\nvar constants_13 = constants.BSON_DATA_INT;\nvar constants_14 = constants.BSON_DATA_CODE_W_SCOPE;\nvar constants_15 = constants.BSON_DATA_SYMBOL;\nvar constants_16 = constants.BSON_DATA_CODE;\nvar constants_17 = constants.BSON_DATA_DBPOINTER;\nvar constants_18 = constants.BSON_DATA_REGEXP;\nvar constants_19 = constants.BSON_DATA_NULL;\nvar constants_20 = constants.BSON_DATA_DATE;\nvar constants_21 = constants.BSON_DATA_BOOLEAN;\nvar constants_22 = constants.BSON_DATA_OID;\nvar constants_23 = constants.BSON_DATA_UNDEFINED;\nvar constants_24 = constants.BSON_DATA_BINARY;\nvar constants_25 = constants.BSON_DATA_ARRAY;\nvar constants_26 = constants.BSON_DATA_OBJECT;\nvar constants_27 = constants.BSON_DATA_STRING;\nvar constants_28 = constants.BSON_DATA_NUMBER;\nvar constants_29 = constants.JS_INT_MIN;\nvar constants_30 = constants.JS_INT_MAX;\nvar constants_31 = constants.BSON_INT64_MIN;\nvar constants_32 = constants.BSON_INT64_MAX;\nvar constants_33 = constants.BSON_INT32_MIN;\nvar constants_34 = constants.BSON_INT32_MAX;\n\nvar calculate_size = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateObjectSize = void 0;\n\n\n\n\nfunction calculateObjectSize(object, serializeFunctions, ignoreUndefined) {\n    let totalLength = 4 + 1;\n    if (Array.isArray(object)) {\n        for (let i = 0; i < object.length; i++) {\n            totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined);\n        }\n    }\n    else {\n        // If we have toBSON defined, override the current object\n        if (object.toBSON) {\n            object = object.toBSON();\n        }\n        // Calculate size\n        for (const key in object) {\n            totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n        }\n    }\n    return totalLength;\n}\nexports.calculateObjectSize = calculateObjectSize;\n/** @internal */\nfunction calculateElement(name, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvalue, serializeFunctions = false, isArray = false, ignoreUndefined = false) {\n    // If we have toBSON defined, override the current object\n    if (value && value.toBSON) {\n        value = value.toBSON();\n    }\n    switch (typeof value) {\n        case 'string':\n            return 1 + buffer.Buffer.byteLength(name, 'utf8') + 1 + 4 + buffer.Buffer.byteLength(value, 'utf8') + 1;\n        case 'number':\n            if (Math.floor(value) === value &&\n                value >= constants.JS_INT_MIN &&\n                value <= constants.JS_INT_MAX) {\n                if (value >= constants.BSON_INT32_MIN && value <= constants.BSON_INT32_MAX) {\n                    // 32 bit\n                    return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n                }\n                else {\n                    return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n                }\n            }\n            else {\n                // 64 bit\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n            }\n        case 'undefined':\n            if (isArray || !ignoreUndefined)\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n            return 0;\n        case 'boolean':\n            return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n        case 'object':\n            if (value == null || value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n            }\n            else if (value instanceof Date || utils.isDate(value)) {\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n            }\n            else if (ArrayBuffer.isView(value) || value instanceof ArrayBuffer) {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.byteLength);\n            }\n            else if (value['_bsontype'] === 'Long' ||\n                value['_bsontype'] === 'Double' ||\n                value['_bsontype'] === 'Timestamp') {\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n            }\n            else if (value['_bsontype'] === 'Decimal128') {\n                return (name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                // Calculate size depending on the availability of a scope\n                if (value.scope != null && Object.keys(value.scope).length > 0) {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        4 +\n                        buffer.Buffer.byteLength(value.code.toString(), 'utf8') +\n                        1 +\n                        calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined));\n                }\n                else {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        buffer.Buffer.byteLength(value.code.toString(), 'utf8') +\n                        1);\n                }\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                // Check what kind of subtype we have\n                if (value.sub_type === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                        (value.position + 1 + 4 + 1 + 4));\n                }\n                else {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1));\n                }\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    buffer.Buffer.byteLength(value.value, 'utf8') +\n                    4 +\n                    1 +\n                    1);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                // Set up correct object for serialization\n                const ordered_values = Object.assign({\n                    $ref: value.collection,\n                    $id: value.oid\n                }, value.fields);\n                // Add db reference if it exists\n                if (value.db != null) {\n                    ordered_values['$db'] = value.db;\n                }\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined));\n            }\n            else if (value instanceof RegExp ||\n                Object.prototype.toString.call(value) === '[object RegExp]') {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    buffer.Buffer.byteLength(value.source, 'utf8') +\n                    1 +\n                    (value.global ? 1 : 0) +\n                    (value.ignoreCase ? 1 : 0) +\n                    (value.multiline ? 1 : 0) +\n                    1);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    buffer.Buffer.byteLength(value.pattern, 'utf8') +\n                    1 +\n                    buffer.Buffer.byteLength(value.options, 'utf8') +\n                    1);\n            }\n            else {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    calculateObjectSize(value, serializeFunctions, ignoreUndefined) +\n                    1);\n            }\n        case 'function':\n            // WTF for 0.4.X where typeof /someregexp/ === 'function'\n            if (value instanceof RegExp ||\n                Object.prototype.toString.call(value) === '[object RegExp]' ||\n                String.call(value) === '[object RegExp]') {\n                return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                    1 +\n                    buffer.Buffer.byteLength(value.source, 'utf8') +\n                    1 +\n                    (value.global ? 1 : 0) +\n                    (value.ignoreCase ? 1 : 0) +\n                    (value.multiline ? 1 : 0) +\n                    1);\n            }\n            else {\n                if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        4 +\n                        buffer.Buffer.byteLength(utils.normalizedFunctionString(value), 'utf8') +\n                        1 +\n                        calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined));\n                }\n                else if (serializeFunctions) {\n                    return ((name != null ? buffer.Buffer.byteLength(name, 'utf8') + 1 : 0) +\n                        1 +\n                        4 +\n                        buffer.Buffer.byteLength(utils.normalizedFunctionString(value), 'utf8') +\n                        1);\n                }\n            }\n    }\n    return 0;\n}\n\n});\n\nunwrapExports(calculate_size);\nvar calculate_size_1 = calculate_size.calculateObjectSize;\n\nvar validate_utf8 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateUtf8 = void 0;\nconst FIRST_BIT = 0x80;\nconst FIRST_TWO_BITS = 0xc0;\nconst FIRST_THREE_BITS = 0xe0;\nconst FIRST_FOUR_BITS = 0xf0;\nconst FIRST_FIVE_BITS = 0xf8;\nconst TWO_BIT_CHAR = 0xc0;\nconst THREE_BIT_CHAR = 0xe0;\nconst FOUR_BIT_CHAR = 0xf0;\nconst CONTINUING_CHAR = 0x80;\n/**\n * Determines if the passed in bytes are valid utf8\n * @param bytes - An array of 8-bit bytes. Must be indexable and have length property\n * @param start - The index to start validating\n * @param end - The index to end validating\n */\nfunction validateUtf8(bytes, start, end) {\n    let continuation = 0;\n    for (let i = start; i < end; i += 1) {\n        const byte = bytes[i];\n        if (continuation) {\n            if ((byte & FIRST_TWO_BITS) !== CONTINUING_CHAR) {\n                return false;\n            }\n            continuation -= 1;\n        }\n        else if (byte & FIRST_BIT) {\n            if ((byte & FIRST_THREE_BITS) === TWO_BIT_CHAR) {\n                continuation = 1;\n            }\n            else if ((byte & FIRST_FOUR_BITS) === THREE_BIT_CHAR) {\n                continuation = 2;\n            }\n            else if ((byte & FIRST_FIVE_BITS) === FOUR_BIT_CHAR) {\n                continuation = 3;\n            }\n            else {\n                return false;\n            }\n        }\n    }\n    return !continuation;\n}\nexports.validateUtf8 = validateUtf8;\n\n});\n\nunwrapExports(validate_utf8);\nvar validate_utf8_1 = validate_utf8.validateUtf8;\n\nvar deserializer = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserialize = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Internal long versions\nconst JS_INT_MAX_LONG = long_1.Long.fromNumber(constants.JS_INT_MAX);\nconst JS_INT_MIN_LONG = long_1.Long.fromNumber(constants.JS_INT_MIN);\nconst functionCache = {};\nfunction deserialize(buffer, options, isArray) {\n    options = options == null ? {} : options;\n    const index = options && options.index ? options.index : 0;\n    // Read the document size\n    const size = buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n    if (size < 5) {\n        throw new Error(`bson size must be >= 5, is ${size}`);\n    }\n    if (options.allowObjectSmallerThanBufferSize && buffer.length < size) {\n        throw new Error(`buffer length ${buffer.length} must be >= bson size ${size}`);\n    }\n    if (!options.allowObjectSmallerThanBufferSize && buffer.length !== size) {\n        throw new Error(`buffer length ${buffer.length} must === bson size ${size}`);\n    }\n    if (size + index > buffer.byteLength) {\n        throw new Error(`(bson size ${size} + options.index ${index} must be <= buffer length ${buffer.byteLength})`);\n    }\n    // Illegal end value\n    if (buffer[index + size - 1] !== 0) {\n        throw new Error(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");\n    }\n    // Start deserializtion\n    return deserializeObject(buffer, index, options, isArray);\n}\nexports.deserialize = deserialize;\nfunction deserializeObject(buffer$1, index, options, isArray = false) {\n    const evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];\n    const cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];\n    const fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n    // Return raw bson buffer instead of parsing it\n    const raw = options['raw'] == null ? false : options['raw'];\n    // Return BSONRegExp objects instead of native regular expressions\n    const bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false;\n    // Controls the promotion of values vs wrapper classes\n    const promoteBuffers = options['promoteBuffers'] == null ? false : options['promoteBuffers'];\n    const promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];\n    const promoteValues = options['promoteValues'] == null ? true : options['promoteValues'];\n    // Set the start index\n    const startIndex = index;\n    // Validate that we have at least 4 bytes of buffer\n    if (buffer$1.length < 5)\n        throw new Error('corrupt bson message < 5 bytes long');\n    // Read the document size\n    const size = buffer$1[index++] | (buffer$1[index++] << 8) | (buffer$1[index++] << 16) | (buffer$1[index++] << 24);\n    // Ensure buffer is valid size\n    if (size < 5 || size > buffer$1.length)\n        throw new Error('corrupt bson message');\n    // Create holding object\n    const object = isArray ? [] : {};\n    // Used for arrays to skip having to perform utf8 decoding\n    let arrayIndex = 0;\n    const done = false;\n    // While we have more left data left keep parsing\n    while (!done) {\n        // Read the type\n        const elementType = buffer$1[index++];\n        // If we get a zero it's the last byte, exit\n        if (elementType === 0)\n            break;\n        // Get the start search index\n        let i = index;\n        // Locate the end of the c string\n        while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n            i++;\n        }\n        // If are at the end of the buffer there is a problem with the document\n        if (i >= buffer$1.byteLength)\n            throw new Error('Bad BSON Document: illegal CString');\n        const name = isArray ? arrayIndex++ : buffer$1.toString('utf8', index, i);\n        index = i + 1;\n        if (elementType === constants.BSON_DATA_STRING) {\n            const stringSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer$1.length - index ||\n                buffer$1[index + stringSize - 1] !== 0)\n                throw new Error('bad string length in bson');\n            if (!validate_utf8.validateUtf8(buffer$1, index, index + stringSize - 1)) {\n                throw new Error('Invalid UTF-8 string in BSON document');\n            }\n            const s = buffer$1.toString('utf8', index, index + stringSize - 1);\n            object[name] = s;\n            index = index + stringSize;\n        }\n        else if (elementType === constants.BSON_DATA_OID) {\n            const oid = buffer.Buffer.alloc(12);\n            buffer$1.copy(oid, 0, index, index + 12);\n            object[name] = new objectid.ObjectId(oid);\n            index = index + 12;\n        }\n        else if (elementType === constants.BSON_DATA_INT && promoteValues === false) {\n            object[name] = new int_32.Int32(buffer$1[index++] | (buffer$1[index++] << 8) | (buffer$1[index++] << 16) | (buffer$1[index++] << 24));\n        }\n        else if (elementType === constants.BSON_DATA_INT) {\n            object[name] =\n                buffer$1[index++] |\n                    (buffer$1[index++] << 8) |\n                    (buffer$1[index++] << 16) |\n                    (buffer$1[index++] << 24);\n        }\n        else if (elementType === constants.BSON_DATA_NUMBER && promoteValues === false) {\n            object[name] = new double_1.Double(buffer$1.readDoubleLE(index));\n            index = index + 8;\n        }\n        else if (elementType === constants.BSON_DATA_NUMBER) {\n            object[name] = buffer$1.readDoubleLE(index);\n            index = index + 8;\n        }\n        else if (elementType === constants.BSON_DATA_DATE) {\n            const lowBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            const highBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            object[name] = new Date(new long_1.Long(lowBits, highBits).toNumber());\n        }\n        else if (elementType === constants.BSON_DATA_BOOLEAN) {\n            if (buffer$1[index] !== 0 && buffer$1[index] !== 1)\n                throw new Error('illegal boolean type value');\n            object[name] = buffer$1[index++] === 1;\n        }\n        else if (elementType === constants.BSON_DATA_OBJECT) {\n            const _index = index;\n            const objectSize = buffer$1[index] |\n                (buffer$1[index + 1] << 8) |\n                (buffer$1[index + 2] << 16) |\n                (buffer$1[index + 3] << 24);\n            if (objectSize <= 0 || objectSize > buffer$1.length - index)\n                throw new Error('bad embedded document length in bson');\n            // We have a raw value\n            if (raw) {\n                object[name] = buffer$1.slice(index, index + objectSize);\n            }\n            else {\n                object[name] = deserializeObject(buffer$1, _index, options, false);\n            }\n            index = index + objectSize;\n        }\n        else if (elementType === constants.BSON_DATA_ARRAY) {\n            const _index = index;\n            const objectSize = buffer$1[index] |\n                (buffer$1[index + 1] << 8) |\n                (buffer$1[index + 2] << 16) |\n                (buffer$1[index + 3] << 24);\n            let arrayOptions = options;\n            // Stop index\n            const stopIndex = index + objectSize;\n            // All elements of array to be returned as raw bson\n            if (fieldsAsRaw && fieldsAsRaw[name]) {\n                arrayOptions = {};\n                for (const n in options) {\n                    arrayOptions[n] = options[n];\n                }\n                arrayOptions['raw'] = true;\n            }\n            object[name] = deserializeObject(buffer$1, _index, arrayOptions, true);\n            index = index + objectSize;\n            if (buffer$1[index - 1] !== 0)\n                throw new Error('invalid array terminator byte');\n            if (index !== stopIndex)\n                throw new Error('corrupted array bson');\n        }\n        else if (elementType === constants.BSON_DATA_UNDEFINED) {\n            object[name] = undefined;\n        }\n        else if (elementType === constants.BSON_DATA_NULL) {\n            object[name] = null;\n        }\n        else if (elementType === constants.BSON_DATA_LONG) {\n            // Unpack the low and high bits\n            const lowBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            const highBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            const long = new long_1.Long(lowBits, highBits);\n            // Promote the long if possible\n            if (promoteLongs && promoteValues === true) {\n                object[name] =\n                    long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG)\n                        ? long.toNumber()\n                        : long;\n            }\n            else {\n                object[name] = long;\n            }\n        }\n        else if (elementType === constants.BSON_DATA_DECIMAL128) {\n            // Buffer to contain the decimal bytes\n            const bytes = buffer.Buffer.alloc(16);\n            // Copy the next 16 bytes into the bytes buffer\n            buffer$1.copy(bytes, 0, index, index + 16);\n            // Update index\n            index = index + 16;\n            // Assign the new Decimal128 value\n            const decimal128$1 = new decimal128.Decimal128(bytes);\n            // If we have an alternative mapper use that\n            if ('toObject' in decimal128$1 && typeof decimal128$1.toObject === 'function') {\n                object[name] = decimal128$1.toObject();\n            }\n            else {\n                object[name] = decimal128$1;\n            }\n        }\n        else if (elementType === constants.BSON_DATA_BINARY) {\n            let binarySize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            const totalBinarySize = binarySize;\n            const subType = buffer$1[index++];\n            // Did we have a negative binary size, throw\n            if (binarySize < 0)\n                throw new Error('Negative binary type element size found');\n            // Is the length longer than the document\n            if (binarySize > buffer$1.byteLength)\n                throw new Error('Binary type size larger than document size');\n            // Decode as raw Buffer object if options specifies it\n            if (buffer$1['slice'] != null) {\n                // If we have subtype 2 skip the 4 bytes for the size\n                if (subType === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer$1[index++] |\n                            (buffer$1[index++] << 8) |\n                            (buffer$1[index++] << 16) |\n                            (buffer$1[index++] << 24);\n                    if (binarySize < 0)\n                        throw new Error('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new Error('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new Error('Binary type with subtype 0x02 contains too short binary size');\n                }\n                if (promoteBuffers && promoteValues) {\n                    object[name] = buffer$1.slice(index, index + binarySize);\n                }\n                else {\n                    object[name] = new binary.Binary(buffer$1.slice(index, index + binarySize), subType);\n                }\n            }\n            else {\n                const _buffer = buffer.Buffer.alloc(binarySize);\n                // If we have subtype 2 skip the 4 bytes for the size\n                if (subType === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n                    binarySize =\n                        buffer$1[index++] |\n                            (buffer$1[index++] << 8) |\n                            (buffer$1[index++] << 16) |\n                            (buffer$1[index++] << 24);\n                    if (binarySize < 0)\n                        throw new Error('Negative binary type element size found for subtype 0x02');\n                    if (binarySize > totalBinarySize - 4)\n                        throw new Error('Binary type with subtype 0x02 contains too long binary size');\n                    if (binarySize < totalBinarySize - 4)\n                        throw new Error('Binary type with subtype 0x02 contains too short binary size');\n                }\n                // Copy the data\n                for (i = 0; i < binarySize; i++) {\n                    _buffer[i] = buffer$1[index + i];\n                }\n                if (promoteBuffers && promoteValues) {\n                    object[name] = _buffer;\n                }\n                else {\n                    object[name] = new binary.Binary(_buffer, subType);\n                }\n            }\n            // Update the index\n            index = index + binarySize;\n        }\n        else if (elementType === constants.BSON_DATA_REGEXP && bsonRegExp === false) {\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer$1.length)\n                throw new Error('Bad BSON Document: illegal CString');\n            // Return the C string\n            const source = buffer$1.toString('utf8', index, i);\n            // Create the regexp\n            index = i + 1;\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer$1.length)\n                throw new Error('Bad BSON Document: illegal CString');\n            // Return the C string\n            const regExpOptions = buffer$1.toString('utf8', index, i);\n            index = i + 1;\n            // For each option add the corresponding one for javascript\n            const optionsArray = new Array(regExpOptions.length);\n            // Parse options\n            for (i = 0; i < regExpOptions.length; i++) {\n                switch (regExpOptions[i]) {\n                    case 'm':\n                        optionsArray[i] = 'm';\n                        break;\n                    case 's':\n                        optionsArray[i] = 'g';\n                        break;\n                    case 'i':\n                        optionsArray[i] = 'i';\n                        break;\n                }\n            }\n            object[name] = new RegExp(source, optionsArray.join(''));\n        }\n        else if (elementType === constants.BSON_DATA_REGEXP && bsonRegExp === true) {\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer$1.length)\n                throw new Error('Bad BSON Document: illegal CString');\n            // Return the C string\n            const source = buffer$1.toString('utf8', index, i);\n            index = i + 1;\n            // Get the start search index\n            i = index;\n            // Locate the end of the c string\n            while (buffer$1[i] !== 0x00 && i < buffer$1.length) {\n                i++;\n            }\n            // If are at the end of the buffer there is a problem with the document\n            if (i >= buffer$1.length)\n                throw new Error('Bad BSON Document: illegal CString');\n            // Return the C string\n            const regExpOptions = buffer$1.toString('utf8', index, i);\n            index = i + 1;\n            // Set the object\n            object[name] = new regexp.BSONRegExp(source, regExpOptions);\n        }\n        else if (elementType === constants.BSON_DATA_SYMBOL) {\n            const stringSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer$1.length - index ||\n                buffer$1[index + stringSize - 1] !== 0)\n                throw new Error('bad string length in bson');\n            const symbol$1 = buffer$1.toString('utf8', index, index + stringSize - 1);\n            object[name] = promoteValues ? symbol$1 : new symbol.BSONSymbol(symbol$1);\n            index = index + stringSize;\n        }\n        else if (elementType === constants.BSON_DATA_TIMESTAMP) {\n            const lowBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            const highBits = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            object[name] = new timestamp$1.Timestamp(lowBits, highBits);\n        }\n        else if (elementType === constants.BSON_DATA_MIN_KEY) {\n            object[name] = new min_key.MinKey();\n        }\n        else if (elementType === constants.BSON_DATA_MAX_KEY) {\n            object[name] = new max_key.MaxKey();\n        }\n        else if (elementType === constants.BSON_DATA_CODE) {\n            const stringSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            if (stringSize <= 0 ||\n                stringSize > buffer$1.length - index ||\n                buffer$1[index + stringSize - 1] !== 0)\n                throw new Error('bad string length in bson');\n            const functionString = buffer$1.toString('utf8', index, index + stringSize - 1);\n            // If we are evaluating the functions\n            if (evalFunctions) {\n                // If we have cache enabled let's look for the md5 of the function in the cache\n                if (cacheFunctions) {\n                    // Got to do this to avoid V8 deoptimizing the call due to finding eval\n                    object[name] = isolateEval(functionString, functionCache, object);\n                }\n                else {\n                    object[name] = isolateEval(functionString);\n                }\n            }\n            else {\n                object[name] = new code$1.Code(functionString);\n            }\n            // Update parse index position\n            index = index + stringSize;\n        }\n        else if (elementType === constants.BSON_DATA_CODE_W_SCOPE) {\n            const totalSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            // Element cannot be shorter than totalSize + stringSize + documentSize + terminator\n            if (totalSize < 4 + 4 + 4 + 1) {\n                throw new Error('code_w_scope total size shorter minimum expected length');\n            }\n            // Get the code string size\n            const stringSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            // Check if we have a valid string\n            if (stringSize <= 0 ||\n                stringSize > buffer$1.length - index ||\n                buffer$1[index + stringSize - 1] !== 0)\n                throw new Error('bad string length in bson');\n            // Javascript function\n            const functionString = buffer$1.toString('utf8', index, index + stringSize - 1);\n            // Update parse index position\n            index = index + stringSize;\n            // Parse the element\n            const _index = index;\n            // Decode the size of the object document\n            const objectSize = buffer$1[index] |\n                (buffer$1[index + 1] << 8) |\n                (buffer$1[index + 2] << 16) |\n                (buffer$1[index + 3] << 24);\n            // Decode the scope object\n            const scopeObject = deserializeObject(buffer$1, _index, options, false);\n            // Adjust the index\n            index = index + objectSize;\n            // Check if field length is too short\n            if (totalSize < 4 + 4 + objectSize + stringSize) {\n                throw new Error('code_w_scope total size is too short, truncating scope');\n            }\n            // Check if totalSize field is too long\n            if (totalSize > 4 + 4 + objectSize + stringSize) {\n                throw new Error('code_w_scope total size is too long, clips outer document');\n            }\n            // If we are evaluating the functions\n            if (evalFunctions) {\n                // If we have cache enabled let's look for the md5 of the function in the cache\n                if (cacheFunctions) {\n                    // Got to do this to avoid V8 deoptimizing the call due to finding eval\n                    object[name] = isolateEval(functionString, functionCache, object);\n                }\n                else {\n                    object[name] = isolateEval(functionString);\n                }\n                object[name].scope = scopeObject;\n            }\n            else {\n                object[name] = new code$1.Code(functionString, scopeObject);\n            }\n        }\n        else if (elementType === constants.BSON_DATA_DBPOINTER) {\n            // Get the code string size\n            const stringSize = buffer$1[index++] |\n                (buffer$1[index++] << 8) |\n                (buffer$1[index++] << 16) |\n                (buffer$1[index++] << 24);\n            // Check if we have a valid string\n            if (stringSize <= 0 ||\n                stringSize > buffer$1.length - index ||\n                buffer$1[index + stringSize - 1] !== 0)\n                throw new Error('bad string length in bson');\n            // Namespace\n            if (!validate_utf8.validateUtf8(buffer$1, index, index + stringSize - 1)) {\n                throw new Error('Invalid UTF-8 string in BSON document');\n            }\n            const namespace = buffer$1.toString('utf8', index, index + stringSize - 1);\n            // Update parse index position\n            index = index + stringSize;\n            // Read the oid\n            const oidBuffer = buffer.Buffer.alloc(12);\n            buffer$1.copy(oidBuffer, 0, index, index + 12);\n            const oid = new objectid.ObjectId(oidBuffer);\n            // Update the index\n            index = index + 12;\n            // Upgrade to DBRef type\n            object[name] = new db_ref.DBRef(namespace, oid);\n        }\n        else {\n            throw new Error('Detected unknown BSON type ' + elementType.toString(16) + ' for fieldname \"' + name + '\"');\n        }\n    }\n    // Check if the deserialization was against a valid array/object\n    if (size !== index - startIndex) {\n        if (isArray)\n            throw new Error('corrupt array bson');\n        throw new Error('corrupt object bson');\n    }\n    // check if object's $ keys are those of a DBRef\n    const dollarKeys = Object.keys(object).filter(k => k.startsWith('$'));\n    let valid = true;\n    dollarKeys.forEach(k => {\n        if (['$ref', '$id', '$db'].indexOf(k) === -1)\n            valid = false;\n    });\n    // if a $key not in \"$ref\", \"$id\", \"$db\", don't make a DBRef\n    if (!valid)\n        return object;\n    if (db_ref.isDBRefLike(object)) {\n        const copy = Object.assign({}, object);\n        delete copy.$ref;\n        delete copy.$id;\n        delete copy.$db;\n        return new db_ref.DBRef(object.$ref, object.$id, object.$db, copy);\n    }\n    return object;\n}\n/**\n * Ensure eval is isolated, store the result in functionCache.\n *\n * @internal\n */\nfunction isolateEval(functionString, functionCache, object) {\n    if (!functionCache)\n        return new Function(functionString);\n    // Check for cache hit, eval if missing and return cached function\n    if (functionCache[functionString] == null) {\n        functionCache[functionString] = new Function(functionString);\n    }\n    // Set the object\n    return functionCache[functionString].bind(object);\n}\n\n});\n\nunwrapExports(deserializer);\nvar deserializer_1 = deserializer.deserialize;\n\nvar float_parser = createCommonjsModule(function (module, exports) {\n// Copyright (c) 2008, Fair Oaks Labs, Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//  * Redistributions of source code must retain the above copyright notice,\n//    this list of conditions and the following disclaimer.\n//\n//  * Redistributions in binary form must reproduce the above copyright notice,\n//    this list of conditions and the following disclaimer in the documentation\n//    and/or other materials provided with the distribution.\n//\n//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors\n//    may be used to endorse or promote products derived from this software\n//    without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n//\n//\n// Modifications to writeIEEE754 to support negative zeroes made by Brian White\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeIEEE754 = exports.readIEEE754 = void 0;\nfunction readIEEE754(buffer, offset, endian, mLen, nBytes) {\n    let e;\n    let m;\n    const bBE = endian === 'big';\n    const eLen = nBytes * 8 - mLen - 1;\n    const eMax = (1 << eLen) - 1;\n    const eBias = eMax >> 1;\n    let nBits = -7;\n    let i = bBE ? 0 : nBytes - 1;\n    const d = bBE ? 1 : -1;\n    let s = buffer[offset + i];\n    i += d;\n    e = s & ((1 << -nBits) - 1);\n    s >>= -nBits;\n    nBits += eLen;\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8)\n        ;\n    m = e & ((1 << -nBits) - 1);\n    e >>= -nBits;\n    nBits += mLen;\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8)\n        ;\n    if (e === 0) {\n        e = 1 - eBias;\n    }\n    else if (e === eMax) {\n        return m ? NaN : (s ? -1 : 1) * Infinity;\n    }\n    else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n}\nexports.readIEEE754 = readIEEE754;\nfunction writeIEEE754(buffer, value, offset, endian, mLen, nBytes) {\n    let e;\n    let m;\n    let c;\n    const bBE = endian === 'big';\n    let eLen = nBytes * 8 - mLen - 1;\n    const eMax = (1 << eLen) - 1;\n    const eBias = eMax >> 1;\n    const rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n    let i = bBE ? nBytes - 1 : 0;\n    const d = bBE ? -1 : 1;\n    const s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n    value = Math.abs(value);\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n    }\n    else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n        }\n        if (e + eBias >= 1) {\n            value += rt / c;\n        }\n        else {\n            value += rt * Math.pow(2, 1 - eBias);\n        }\n        if (value * c >= 2) {\n            e++;\n            c /= 2;\n        }\n        if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n        }\n        else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n        }\n        else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n        }\n    }\n    if (isNaN(value))\n        m = 0;\n    while (mLen >= 8) {\n        buffer[offset + i] = m & 0xff;\n        i += d;\n        m /= 256;\n        mLen -= 8;\n    }\n    e = (e << mLen) | m;\n    if (isNaN(value))\n        e += 8;\n    eLen += mLen;\n    while (eLen > 0) {\n        buffer[offset + i] = e & 0xff;\n        i += d;\n        e /= 256;\n        eLen -= 8;\n    }\n    buffer[offset + i - d] |= s * 128;\n}\nexports.writeIEEE754 = writeIEEE754;\n\n});\n\nunwrapExports(float_parser);\nvar float_parser_1 = float_parser.writeIEEE754;\nvar float_parser_2 = float_parser.readIEEE754;\n\nvar serializer = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeInto = void 0;\n\n\n\n\n\n\n\n\nconst regexp = /\\x00/; // eslint-disable-line no-control-regex\nconst ignoreKeys = new Set(['$db', '$ref', '$id', '$clusterTime']);\nfunction isRegExp(d) {\n    return Object.prototype.toString.call(d) === '[object RegExp]';\n}\n/*\n * isArray indicates if we are writing to a BSON array (type 0x04)\n * which forces the \"key\" which really an array index as a string to be written as ascii\n * This will catch any errors in index as a string generation\n */\nfunction serializeString(buffer, key, value, index, isArray) {\n    // Encode String type\n    buffer[index++] = constants.BSON_DATA_STRING;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes + 1;\n    buffer[index - 1] = 0;\n    // Write the string\n    const size = buffer.write(value, index + 4, undefined, 'utf8');\n    // Write the size of the string to buffer\n    buffer[index + 3] = ((size + 1) >> 24) & 0xff;\n    buffer[index + 2] = ((size + 1) >> 16) & 0xff;\n    buffer[index + 1] = ((size + 1) >> 8) & 0xff;\n    buffer[index] = (size + 1) & 0xff;\n    // Update index\n    index = index + 4 + size;\n    // Write zero\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeNumber(buffer, key, value, index, isArray) {\n    // We have an integer value\n    // TODO(NODE-2529): Add support for big int\n    if (Number.isInteger(value) &&\n        value >= constants.BSON_INT32_MIN &&\n        value <= constants.BSON_INT32_MAX) {\n        // If the value fits in 32 bits encode as int32\n        // Set int type 32 bits or less\n        buffer[index++] = constants.BSON_DATA_INT;\n        // Number of written bytes\n        const numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Write the int value\n        buffer[index++] = value & 0xff;\n        buffer[index++] = (value >> 8) & 0xff;\n        buffer[index++] = (value >> 16) & 0xff;\n        buffer[index++] = (value >> 24) & 0xff;\n    }\n    else {\n        // Encode as double\n        buffer[index++] = constants.BSON_DATA_NUMBER;\n        // Number of written bytes\n        const numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Write float\n        float_parser.writeIEEE754(buffer, value, index, 'little', 52, 8);\n        // Adjust index\n        index = index + 8;\n    }\n    return index;\n}\nfunction serializeNull(buffer, key, _, index, isArray) {\n    // Set long type\n    buffer[index++] = constants.BSON_DATA_NULL;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeBoolean(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_BOOLEAN;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Encode the boolean value\n    buffer[index++] = value ? 1 : 0;\n    return index;\n}\nfunction serializeDate(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_DATE;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the date\n    const dateInMilis = long_1.Long.fromNumber(value.getTime());\n    const lowBits = dateInMilis.getLowBits();\n    const highBits = dateInMilis.getHighBits();\n    // Encode low bits\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    // Encode high bits\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeRegExp(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_REGEXP;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    if (value.source && value.source.match(regexp) != null) {\n        throw Error('value ' + value.source + ' must not contain null bytes');\n    }\n    // Adjust the index\n    index = index + buffer.write(value.source, index, undefined, 'utf8');\n    // Write zero\n    buffer[index++] = 0x00;\n    // Write the parameters\n    if (value.ignoreCase)\n        buffer[index++] = 0x69; // i\n    if (value.global)\n        buffer[index++] = 0x73; // s\n    if (value.multiline)\n        buffer[index++] = 0x6d; // m\n    // Add ending zero\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeBSONRegExp(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_REGEXP;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Check the pattern for 0 bytes\n    if (value.pattern.match(regexp) != null) {\n        // The BSON spec doesn't allow keys with null bytes because keys are\n        // null-terminated.\n        throw Error('pattern ' + value.pattern + ' must not contain null bytes');\n    }\n    // Adjust the index\n    index = index + buffer.write(value.pattern, index, undefined, 'utf8');\n    // Write zero\n    buffer[index++] = 0x00;\n    // Write the options\n    index = index + buffer.write(value.options.split('').sort().join(''), index, undefined, 'utf8');\n    // Add ending zero\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeMinMax(buffer, key, value, index, isArray) {\n    // Write the type of either min or max key\n    if (value === null) {\n        buffer[index++] = constants.BSON_DATA_NULL;\n    }\n    else if (value._bsontype === 'MinKey') {\n        buffer[index++] = constants.BSON_DATA_MIN_KEY;\n    }\n    else {\n        buffer[index++] = constants.BSON_DATA_MAX_KEY;\n    }\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeObjectId(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_OID;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the objectId into the shared buffer\n    if (typeof value.id === 'string') {\n        buffer.write(value.id, index, undefined, 'binary');\n    }\n    else if (value.id && value.id.copy) {\n        value.id.copy(buffer, index, 0, 12);\n    }\n    else {\n        throw new TypeError('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n    }\n    // Adjust index\n    return index + 12;\n}\nfunction serializeBuffer(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_BINARY;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Get size of the buffer (current write point)\n    const size = value.length;\n    // Write the size of the string to buffer\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    // Write the default subtype\n    buffer[index++] = constants.BSON_BINARY_SUBTYPE_DEFAULT;\n    // Copy the content form the binary field to the buffer\n    buffer.set(ensure_buffer.ensureBuffer(value), index);\n    // Adjust the index\n    index = index + size;\n    return index;\n}\nfunction serializeObject(buffer, key, value, index, checkKeys = false, depth = 0, serializeFunctions = false, ignoreUndefined = true, isArray = false, path = []) {\n    for (let i = 0; i < path.length; i++) {\n        if (path[i] === value)\n            throw new Error('cyclic dependency detected');\n    }\n    // Push value to stack\n    path.push(value);\n    // Write the type\n    buffer[index++] = Array.isArray(value) ? constants.BSON_DATA_ARRAY : constants.BSON_DATA_OBJECT;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    const endIndex = serializeInto(buffer, value, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined, path);\n    // Pop stack\n    path.pop();\n    return endIndex;\n}\nfunction serializeDecimal128(buffer, key, value, index, isArray) {\n    buffer[index++] = constants.BSON_DATA_DECIMAL128;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the data from the value\n    value.bytes.copy(buffer, index, 0, 16);\n    return index + 16;\n}\nfunction serializeLong(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] =\n        value._bsontype === 'Long' ? constants.BSON_DATA_LONG : constants.BSON_DATA_TIMESTAMP;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the date\n    const lowBits = value.getLowBits();\n    const highBits = value.getHighBits();\n    // Encode low bits\n    buffer[index++] = lowBits & 0xff;\n    buffer[index++] = (lowBits >> 8) & 0xff;\n    buffer[index++] = (lowBits >> 16) & 0xff;\n    buffer[index++] = (lowBits >> 24) & 0xff;\n    // Encode high bits\n    buffer[index++] = highBits & 0xff;\n    buffer[index++] = (highBits >> 8) & 0xff;\n    buffer[index++] = (highBits >> 16) & 0xff;\n    buffer[index++] = (highBits >> 24) & 0xff;\n    return index;\n}\nfunction serializeInt32(buffer, key, value, index, isArray) {\n    value = value.valueOf();\n    // Set int type 32 bits or less\n    buffer[index++] = constants.BSON_DATA_INT;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the int value\n    buffer[index++] = value & 0xff;\n    buffer[index++] = (value >> 8) & 0xff;\n    buffer[index++] = (value >> 16) & 0xff;\n    buffer[index++] = (value >> 24) & 0xff;\n    return index;\n}\nfunction serializeDouble(buffer, key, value, index, isArray) {\n    // Encode as double\n    buffer[index++] = constants.BSON_DATA_NUMBER;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write float\n    float_parser.writeIEEE754(buffer, value.value, index, 'little', 52, 8);\n    // Adjust index\n    index = index + 8;\n    return index;\n}\nfunction serializeFunction(buffer, key, value, index, _checkKeys = false, _depth = 0, isArray) {\n    buffer[index++] = constants.BSON_DATA_CODE;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    const functionString = utils.normalizedFunctionString(value);\n    // Write the string\n    const size = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n    return index;\n}\nfunction serializeCode(buffer, key, value, index, checkKeys = false, depth = 0, serializeFunctions = false, ignoreUndefined = true, isArray = false) {\n    if (value.scope && typeof value.scope === 'object') {\n        // Write the type\n        buffer[index++] = constants.BSON_DATA_CODE_W_SCOPE;\n        // Number of written bytes\n        const numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Starting index\n        let startIndex = index;\n        // Serialize the function\n        // Get the function string\n        const functionString = typeof value.code === 'string' ? value.code : value.code.toString();\n        // Index adjustment\n        index = index + 4;\n        // Write string into buffer\n        const codeSize = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n        // Write the size of the string to buffer\n        buffer[index] = codeSize & 0xff;\n        buffer[index + 1] = (codeSize >> 8) & 0xff;\n        buffer[index + 2] = (codeSize >> 16) & 0xff;\n        buffer[index + 3] = (codeSize >> 24) & 0xff;\n        // Write end 0\n        buffer[index + 4 + codeSize - 1] = 0;\n        // Write the\n        index = index + codeSize + 4;\n        //\n        // Serialize the scope value\n        const endIndex = serializeInto(buffer, value.scope, checkKeys, index, depth + 1, serializeFunctions, ignoreUndefined);\n        index = endIndex - 1;\n        // Writ the total\n        const totalSize = endIndex - startIndex;\n        // Write the total size of the object\n        buffer[startIndex++] = totalSize & 0xff;\n        buffer[startIndex++] = (totalSize >> 8) & 0xff;\n        buffer[startIndex++] = (totalSize >> 16) & 0xff;\n        buffer[startIndex++] = (totalSize >> 24) & 0xff;\n        // Write trailing zero\n        buffer[index++] = 0;\n    }\n    else {\n        buffer[index++] = constants.BSON_DATA_CODE;\n        // Number of written bytes\n        const numberOfWrittenBytes = !isArray\n            ? buffer.write(key, index, undefined, 'utf8')\n            : buffer.write(key, index, undefined, 'ascii');\n        // Encode the name\n        index = index + numberOfWrittenBytes;\n        buffer[index++] = 0;\n        // Function string\n        const functionString = value.code.toString();\n        // Write the string\n        const size = buffer.write(functionString, index + 4, undefined, 'utf8') + 1;\n        // Write the size of the string to buffer\n        buffer[index] = size & 0xff;\n        buffer[index + 1] = (size >> 8) & 0xff;\n        buffer[index + 2] = (size >> 16) & 0xff;\n        buffer[index + 3] = (size >> 24) & 0xff;\n        // Update index\n        index = index + 4 + size - 1;\n        // Write zero\n        buffer[index++] = 0;\n    }\n    return index;\n}\nfunction serializeBinary(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_BINARY;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Extract the buffer\n    const data = value.value(true);\n    // Calculate size\n    let size = value.position;\n    // Add the deprecated 02 type 4 bytes of size to total\n    if (value.sub_type === binary.Binary.SUBTYPE_BYTE_ARRAY)\n        size = size + 4;\n    // Write the size of the string to buffer\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n    // Write the subtype to the buffer\n    buffer[index++] = value.sub_type;\n    // If we have binary type 2 the 4 first bytes are the size\n    if (value.sub_type === binary.Binary.SUBTYPE_BYTE_ARRAY) {\n        size = size - 4;\n        buffer[index++] = size & 0xff;\n        buffer[index++] = (size >> 8) & 0xff;\n        buffer[index++] = (size >> 16) & 0xff;\n        buffer[index++] = (size >> 24) & 0xff;\n    }\n    // Write the data to the object\n    buffer.set(data, index);\n    // Adjust the index\n    index = index + value.position;\n    return index;\n}\nfunction serializeSymbol(buffer, key, value, index, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_SYMBOL;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write the string\n    const size = buffer.write(value.value, index + 4, undefined, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0x00;\n    return index;\n}\nfunction serializeDBRef(buffer, key, value, index, depth, serializeFunctions, isArray) {\n    // Write the type\n    buffer[index++] = constants.BSON_DATA_OBJECT;\n    // Number of written bytes\n    const numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, undefined, 'utf8')\n        : buffer.write(key, index, undefined, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    let startIndex = index;\n    let output = {\n        $ref: value.collection || value.namespace,\n        $id: value.oid\n    };\n    if (value.db != null) {\n        output.$db = value.db;\n    }\n    output = Object.assign(output, value.fields);\n    const endIndex = serializeInto(buffer, output, false, index, depth + 1, serializeFunctions);\n    // Calculate object size\n    const size = endIndex - startIndex;\n    // Write the size\n    buffer[startIndex++] = size & 0xff;\n    buffer[startIndex++] = (size >> 8) & 0xff;\n    buffer[startIndex++] = (size >> 16) & 0xff;\n    buffer[startIndex++] = (size >> 24) & 0xff;\n    // Set index\n    return endIndex;\n}\nfunction serializeInto(buffer, object, checkKeys = false, startingIndex = 0, depth = 0, serializeFunctions = false, ignoreUndefined = true, path = []) {\n    startingIndex = startingIndex || 0;\n    path = path || [];\n    // Push the object to the path\n    path.push(object);\n    // Start place to serialize into\n    let index = startingIndex + 4;\n    // Special case isArray\n    if (Array.isArray(object)) {\n        // Get object keys\n        for (let i = 0; i < object.length; i++) {\n            const key = '' + i;\n            let value = object[i];\n            // Is there an override value\n            if (value && value.toBSON) {\n                if (typeof value.toBSON !== 'function')\n                    throw new TypeError('toBSON is not a function');\n                value = value.toBSON();\n            }\n            if (typeof value === 'string') {\n                index = serializeString(buffer, key, value, index, true);\n            }\n            else if (typeof value === 'number') {\n                index = serializeNumber(buffer, key, value, index, true);\n            }\n            else if (typeof value === 'bigint') {\n                throw new TypeError('Unsupported type BigInt, please use Decimal128');\n            }\n            else if (typeof value === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index, true);\n            }\n            else if (value instanceof Date || utils.isDate(value)) {\n                index = serializeDate(buffer, key, value, index, true);\n            }\n            else if (value === undefined) {\n                index = serializeNull(buffer, key, value, index, true);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                index = serializeObjectId(buffer, key, value, index, true);\n            }\n            else if (utils.isBuffer(value) || utils.isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index, true);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index, true);\n            }\n            else if (typeof value === 'object' && value['_bsontype'] == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true, path);\n            }\n            else if (typeof value === 'object' &&\n                extended_json.isBSONType(value) &&\n                value._bsontype === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Double') {\n                index = serializeDouble(buffer, key, value, index, true);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index, checkKeys, depth, true);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, true);\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                index = serializeBinary(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                index = serializeSymbol(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, true);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'Int32') {\n                index = serializeInt32(buffer, key, value, index, true);\n            }\n            else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index, true);\n            }\n            else if (typeof value['_bsontype'] !== 'undefined') {\n                throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n            }\n        }\n    }\n    else if (object instanceof map.Map) {\n        const iterator = object.entries();\n        let done = false;\n        while (!done) {\n            // Unpack the next entry\n            const entry = iterator.next();\n            done = !!entry.done;\n            // Are we done, then skip and terminate\n            if (done)\n                continue;\n            // Get the entry values\n            const key = entry.value[0];\n            const value = entry.value[1];\n            // Check the type of the value\n            const type = typeof value;\n            // Check the key and throw error if it's illegal\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    // The BSON spec doesn't allow keys with null bytes because keys are\n                    // null-terminated.\n                    throw Error('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw Error('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw Error('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (type === 'bigint' || utils.isBigInt64Array(value) || utils.isBigUInt64Array(value)) {\n                throw new TypeError('Unsupported type BigInt, please use Decimal128');\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || utils.isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === null || (value === undefined && ignoreUndefined === false)) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (utils.isBuffer(value) || utils.isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (type === 'object' && value['_bsontype'] == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);\n            }\n            else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value['_bsontype'] !== 'undefined') {\n                throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n            }\n        }\n    }\n    else {\n        // Did we provide a custom serialization method\n        if (object.toBSON) {\n            if (typeof object.toBSON !== 'function')\n                throw new TypeError('toBSON is not a function');\n            object = object.toBSON();\n            if (object != null && typeof object !== 'object')\n                throw new TypeError('toBSON function did not return an object');\n        }\n        // Iterate over all the keys\n        for (const key in object) {\n            let value = object[key];\n            // Is there an override value\n            if (value && value.toBSON) {\n                if (typeof value.toBSON !== 'function')\n                    throw new TypeError('toBSON is not a function');\n                value = value.toBSON();\n            }\n            // Check the type of the value\n            const type = typeof value;\n            // Check the key and throw error if it's illegal\n            if (typeof key === 'string' && !ignoreKeys.has(key)) {\n                if (key.match(regexp) != null) {\n                    // The BSON spec doesn't allow keys with null bytes because keys are\n                    // null-terminated.\n                    throw Error('key ' + key + ' must not contain null bytes');\n                }\n                if (checkKeys) {\n                    if ('$' === key[0]) {\n                        throw Error('key ' + key + \" must not start with '$'\");\n                    }\n                    else if (~key.indexOf('.')) {\n                        throw Error('key ' + key + \" must not contain '.'\");\n                    }\n                }\n            }\n            if (type === 'string') {\n                index = serializeString(buffer, key, value, index);\n            }\n            else if (type === 'number') {\n                index = serializeNumber(buffer, key, value, index);\n            }\n            else if (type === 'bigint') {\n                throw new TypeError('Unsupported type BigInt, please use Decimal128');\n            }\n            else if (type === 'boolean') {\n                index = serializeBoolean(buffer, key, value, index);\n            }\n            else if (value instanceof Date || utils.isDate(value)) {\n                index = serializeDate(buffer, key, value, index);\n            }\n            else if (value === undefined) {\n                if (ignoreUndefined === false)\n                    index = serializeNull(buffer, key, value, index);\n            }\n            else if (value === null) {\n                index = serializeNull(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'ObjectId' || value['_bsontype'] === 'ObjectID') {\n                index = serializeObjectId(buffer, key, value, index);\n            }\n            else if (utils.isBuffer(value) || utils.isUint8Array(value)) {\n                index = serializeBuffer(buffer, key, value, index);\n            }\n            else if (value instanceof RegExp || isRegExp(value)) {\n                index = serializeRegExp(buffer, key, value, index);\n            }\n            else if (type === 'object' && value['_bsontype'] == null) {\n                index = serializeObject(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined, false, path);\n            }\n            else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n                index = serializeDecimal128(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n                index = serializeLong(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Double') {\n                index = serializeDouble(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Code') {\n                index = serializeCode(buffer, key, value, index, checkKeys, depth, serializeFunctions, ignoreUndefined);\n            }\n            else if (typeof value === 'function' && serializeFunctions) {\n                index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'Binary') {\n                index = serializeBinary(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Symbol') {\n                index = serializeSymbol(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'DBRef') {\n                index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n            }\n            else if (value['_bsontype'] === 'BSONRegExp') {\n                index = serializeBSONRegExp(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'Int32') {\n                index = serializeInt32(buffer, key, value, index);\n            }\n            else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n                index = serializeMinMax(buffer, key, value, index);\n            }\n            else if (typeof value['_bsontype'] !== 'undefined') {\n                throw new TypeError('Unrecognized or invalid _bsontype: ' + value['_bsontype']);\n            }\n        }\n    }\n    // Remove the path\n    path.pop();\n    // Final padding byte for object\n    buffer[index++] = 0x00;\n    // Final size\n    const size = index - startingIndex;\n    // Write the size of the object\n    buffer[startingIndex++] = size & 0xff;\n    buffer[startingIndex++] = (size >> 8) & 0xff;\n    buffer[startingIndex++] = (size >> 16) & 0xff;\n    buffer[startingIndex++] = (size >> 24) & 0xff;\n    return index;\n}\nexports.serializeInto = serializeInto;\n\n});\n\nunwrapExports(serializer);\nvar serializer_1 = serializer.serializeInto;\n\nvar bson = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeStream = exports.calculateObjectSize = exports.deserialize = exports.serializeWithBufferAndIndex = exports.serialize = exports.setInternalBufferSize = exports.ObjectID = exports.Decimal128 = exports.BSONRegExp = exports.MaxKey = exports.MinKey = exports.Int32 = exports.Double = exports.Timestamp = exports.Long = exports.ObjectId = exports.Binary = exports.DBRef = exports.BSONSymbol = exports.Map = exports.Code = exports.LongWithoutOverridesClass = exports.EJSON = exports.BSON_INT64_MIN = exports.BSON_INT64_MAX = exports.BSON_INT32_MIN = exports.BSON_INT32_MAX = exports.BSON_DATA_UNDEFINED = exports.BSON_DATA_TIMESTAMP = exports.BSON_DATA_SYMBOL = exports.BSON_DATA_STRING = exports.BSON_DATA_REGEXP = exports.BSON_DATA_OID = exports.BSON_DATA_OBJECT = exports.BSON_DATA_NUMBER = exports.BSON_DATA_NULL = exports.BSON_DATA_MIN_KEY = exports.BSON_DATA_MAX_KEY = exports.BSON_DATA_LONG = exports.BSON_DATA_INT = exports.BSON_DATA_DECIMAL128 = exports.BSON_DATA_DBPOINTER = exports.BSON_DATA_DATE = exports.BSON_DATA_CODE_W_SCOPE = exports.BSON_DATA_CODE = exports.BSON_DATA_BOOLEAN = exports.BSON_DATA_BINARY = exports.BSON_DATA_ARRAY = exports.BSON_BINARY_SUBTYPE_UUID_NEW = exports.BSON_BINARY_SUBTYPE_UUID = exports.BSON_BINARY_SUBTYPE_USER_DEFINED = exports.BSON_BINARY_SUBTYPE_MD5 = exports.BSON_BINARY_SUBTYPE_FUNCTION = exports.BSON_BINARY_SUBTYPE_DEFAULT = exports.BSON_BINARY_SUBTYPE_BYTE_ARRAY = void 0;\n\n\nObject.defineProperty(exports, \"Binary\", { enumerable: true, get: function () { return binary.Binary; } });\n\nObject.defineProperty(exports, \"Code\", { enumerable: true, get: function () { return code$1.Code; } });\n\nObject.defineProperty(exports, \"DBRef\", { enumerable: true, get: function () { return db_ref.DBRef; } });\n\nObject.defineProperty(exports, \"Decimal128\", { enumerable: true, get: function () { return decimal128.Decimal128; } });\n\nObject.defineProperty(exports, \"Double\", { enumerable: true, get: function () { return double_1.Double; } });\n\n\n\nObject.defineProperty(exports, \"Int32\", { enumerable: true, get: function () { return int_32.Int32; } });\n\nObject.defineProperty(exports, \"Long\", { enumerable: true, get: function () { return long_1.Long; } });\n\nObject.defineProperty(exports, \"Map\", { enumerable: true, get: function () { return map.Map; } });\n\nObject.defineProperty(exports, \"MaxKey\", { enumerable: true, get: function () { return max_key.MaxKey; } });\n\nObject.defineProperty(exports, \"MinKey\", { enumerable: true, get: function () { return min_key.MinKey; } });\n\nObject.defineProperty(exports, \"ObjectId\", { enumerable: true, get: function () { return objectid.ObjectId; } });\nObject.defineProperty(exports, \"ObjectID\", { enumerable: true, get: function () { return objectid.ObjectId; } });\n\n// Parts of the parser\n\n\n\nObject.defineProperty(exports, \"BSONRegExp\", { enumerable: true, get: function () { return regexp.BSONRegExp; } });\n\nObject.defineProperty(exports, \"BSONSymbol\", { enumerable: true, get: function () { return symbol.BSONSymbol; } });\n\nObject.defineProperty(exports, \"Timestamp\", { enumerable: true, get: function () { return timestamp$1.Timestamp; } });\n\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_BYTE_ARRAY\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_BYTE_ARRAY; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_DEFAULT\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_DEFAULT; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_FUNCTION\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_FUNCTION; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_MD5\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_MD5; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_USER_DEFINED\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_USER_DEFINED; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_UUID\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_UUID; } });\nObject.defineProperty(exports, \"BSON_BINARY_SUBTYPE_UUID_NEW\", { enumerable: true, get: function () { return constants.BSON_BINARY_SUBTYPE_UUID_NEW; } });\nObject.defineProperty(exports, \"BSON_DATA_ARRAY\", { enumerable: true, get: function () { return constants.BSON_DATA_ARRAY; } });\nObject.defineProperty(exports, \"BSON_DATA_BINARY\", { enumerable: true, get: function () { return constants.BSON_DATA_BINARY; } });\nObject.defineProperty(exports, \"BSON_DATA_BOOLEAN\", { enumerable: true, get: function () { return constants.BSON_DATA_BOOLEAN; } });\nObject.defineProperty(exports, \"BSON_DATA_CODE\", { enumerable: true, get: function () { return constants.BSON_DATA_CODE; } });\nObject.defineProperty(exports, \"BSON_DATA_CODE_W_SCOPE\", { enumerable: true, get: function () { return constants.BSON_DATA_CODE_W_SCOPE; } });\nObject.defineProperty(exports, \"BSON_DATA_DATE\", { enumerable: true, get: function () { return constants.BSON_DATA_DATE; } });\nObject.defineProperty(exports, \"BSON_DATA_DBPOINTER\", { enumerable: true, get: function () { return constants.BSON_DATA_DBPOINTER; } });\nObject.defineProperty(exports, \"BSON_DATA_DECIMAL128\", { enumerable: true, get: function () { return constants.BSON_DATA_DECIMAL128; } });\nObject.defineProperty(exports, \"BSON_DATA_INT\", { enumerable: true, get: function () { return constants.BSON_DATA_INT; } });\nObject.defineProperty(exports, \"BSON_DATA_LONG\", { enumerable: true, get: function () { return constants.BSON_DATA_LONG; } });\nObject.defineProperty(exports, \"BSON_DATA_MAX_KEY\", { enumerable: true, get: function () { return constants.BSON_DATA_MAX_KEY; } });\nObject.defineProperty(exports, \"BSON_DATA_MIN_KEY\", { enumerable: true, get: function () { return constants.BSON_DATA_MIN_KEY; } });\nObject.defineProperty(exports, \"BSON_DATA_NULL\", { enumerable: true, get: function () { return constants.BSON_DATA_NULL; } });\nObject.defineProperty(exports, \"BSON_DATA_NUMBER\", { enumerable: true, get: function () { return constants.BSON_DATA_NUMBER; } });\nObject.defineProperty(exports, \"BSON_DATA_OBJECT\", { enumerable: true, get: function () { return constants.BSON_DATA_OBJECT; } });\nObject.defineProperty(exports, \"BSON_DATA_OID\", { enumerable: true, get: function () { return constants.BSON_DATA_OID; } });\nObject.defineProperty(exports, \"BSON_DATA_REGEXP\", { enumerable: true, get: function () { return constants.BSON_DATA_REGEXP; } });\nObject.defineProperty(exports, \"BSON_DATA_STRING\", { enumerable: true, get: function () { return constants.BSON_DATA_STRING; } });\nObject.defineProperty(exports, \"BSON_DATA_SYMBOL\", { enumerable: true, get: function () { return constants.BSON_DATA_SYMBOL; } });\nObject.defineProperty(exports, \"BSON_DATA_TIMESTAMP\", { enumerable: true, get: function () { return constants.BSON_DATA_TIMESTAMP; } });\nObject.defineProperty(exports, \"BSON_DATA_UNDEFINED\", { enumerable: true, get: function () { return constants.BSON_DATA_UNDEFINED; } });\nObject.defineProperty(exports, \"BSON_INT32_MAX\", { enumerable: true, get: function () { return constants.BSON_INT32_MAX; } });\nObject.defineProperty(exports, \"BSON_INT32_MIN\", { enumerable: true, get: function () { return constants.BSON_INT32_MIN; } });\nObject.defineProperty(exports, \"BSON_INT64_MAX\", { enumerable: true, get: function () { return constants.BSON_INT64_MAX; } });\nObject.defineProperty(exports, \"BSON_INT64_MIN\", { enumerable: true, get: function () { return constants.BSON_INT64_MIN; } });\nvar extended_json_2 = extended_json;\nObject.defineProperty(exports, \"EJSON\", { enumerable: true, get: function () { return extended_json_2.EJSON; } });\nvar timestamp_2 = timestamp$1;\nObject.defineProperty(exports, \"LongWithoutOverridesClass\", { enumerable: true, get: function () { return timestamp_2.LongWithoutOverridesClass; } });\n/** @internal */\n// Default Max Size\nconst MAXSIZE = 1024 * 1024 * 17;\n// Current Internal Temporary Serialization Buffer\nlet buffer$1 = buffer.Buffer.alloc(MAXSIZE);\n/**\n * Sets the size of the internal serialization buffer.\n *\n * @param size - The desired size for the internal serialization buffer\n * @public\n */\nfunction setInternalBufferSize(size) {\n    // Resize the internal serialization buffer if needed\n    if (buffer$1.length < size) {\n        buffer$1 = buffer.Buffer.alloc(size);\n    }\n}\nexports.setInternalBufferSize = setInternalBufferSize;\n/**\n * Serialize a Javascript object.\n *\n * @param object - the Javascript object to serialize.\n * @returns Buffer object containing the serialized object.\n * @public\n */\nfunction serialize(object, options = {}) {\n    // Unpack the options\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const minInternalBufferSize = typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE;\n    // Resize the internal serialization buffer if needed\n    if (buffer$1.length < minInternalBufferSize) {\n        buffer$1 = buffer.Buffer.alloc(minInternalBufferSize);\n    }\n    // Attempt to serialize\n    const serializationIndex = serializer.serializeInto(buffer$1, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined, []);\n    // Create the final buffer\n    const finishedBuffer = buffer.Buffer.alloc(serializationIndex);\n    // Copy into the finished buffer\n    buffer$1.copy(finishedBuffer, 0, 0, finishedBuffer.length);\n    // Return the buffer\n    return finishedBuffer;\n}\nexports.serialize = serialize;\n/**\n * Serialize a Javascript object using a predefined Buffer and index into the buffer,\n * useful when pre-allocating the space for serialization.\n *\n * @param object - the Javascript object to serialize.\n * @param finalBuffer - the Buffer you pre-allocated to store the serialized BSON object.\n * @returns the index pointing to the last written byte in the buffer.\n * @public\n */\nfunction serializeWithBufferAndIndex(object, finalBuffer, options = {}) {\n    // Unpack the options\n    const checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    const startIndex = typeof options.index === 'number' ? options.index : 0;\n    // Attempt to serialize\n    const serializationIndex = serializer.serializeInto(buffer$1, object, checkKeys, 0, 0, serializeFunctions, ignoreUndefined);\n    buffer$1.copy(finalBuffer, startIndex, 0, serializationIndex);\n    // Return the index\n    return startIndex + serializationIndex - 1;\n}\nexports.serializeWithBufferAndIndex = serializeWithBufferAndIndex;\n/**\n * Deserialize data as BSON.\n *\n * @param buffer - the buffer containing the serialized set of BSON documents.\n * @returns returns the deserialized Javascript Object.\n * @public\n */\nfunction deserialize(buffer, options = {}) {\n    return deserializer.deserialize(ensure_buffer.ensureBuffer(buffer), options);\n}\nexports.deserialize = deserialize;\n/**\n * Calculate the bson size for a passed in Javascript object.\n *\n * @param object - the Javascript object to calculate the BSON byte size for\n * @returns size of BSON object in bytes\n * @public\n */\nfunction calculateObjectSize(object, options = {}) {\n    options = options || {};\n    const serializeFunctions = typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n    const ignoreUndefined = typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n    return calculate_size.calculateObjectSize(object, serializeFunctions, ignoreUndefined);\n}\nexports.calculateObjectSize = calculateObjectSize;\n/**\n * Deserialize stream data as BSON documents.\n *\n * @param data - the buffer containing the serialized set of BSON documents.\n * @param startIndex - the start index in the data Buffer where the deserialization is to start.\n * @param numberOfDocuments - number of documents to deserialize.\n * @param documents - an array where to store the deserialized documents.\n * @param docStartIndex - the index in the documents array from where to start inserting documents.\n * @param options - additional options used for the deserialization.\n * @returns next index in the buffer after deserialization **x** numbers of documents.\n * @public\n */\nfunction deserializeStream(data, startIndex, numberOfDocuments, documents, docStartIndex, options) {\n    const internalOptions = Object.assign({ allowObjectSmallerThanBufferSize: true, index: 0 }, options);\n    const bufferData = ensure_buffer.ensureBuffer(data);\n    let index = startIndex;\n    // Loop over all documents\n    for (let i = 0; i < numberOfDocuments; i++) {\n        // Find size of the document\n        const size = bufferData[index] |\n            (bufferData[index + 1] << 8) |\n            (bufferData[index + 2] << 16) |\n            (bufferData[index + 3] << 24);\n        // Update options with index\n        internalOptions.index = index;\n        // Parse the document at this point\n        documents[docStartIndex + i] = deserializer.deserialize(bufferData, internalOptions);\n        // Adjust index by the document size\n        index = index + size;\n    }\n    // Return object containing end index of parsing and list of documents\n    return index;\n}\nexports.deserializeStream = deserializeStream;\n/**\n * BSON default export\n * @deprecated Please use named exports\n * @privateRemarks\n * We want to someday deprecate the default export,\n * so none of the new TS types are being exported on the default\n * @public\n */\nconst BSON = {\n    Binary: binary.Binary,\n    Code: code$1.Code,\n    DBRef: db_ref.DBRef,\n    Decimal128: decimal128.Decimal128,\n    Double: double_1.Double,\n    Int32: int_32.Int32,\n    Long: long_1.Long,\n    Map: map.Map,\n    MaxKey: max_key.MaxKey,\n    MinKey: min_key.MinKey,\n    ObjectId: objectid.ObjectId,\n    ObjectID: objectid.ObjectId,\n    BSONRegExp: regexp.BSONRegExp,\n    BSONSymbol: symbol.BSONSymbol,\n    Timestamp: timestamp$1.Timestamp,\n    EJSON: extended_json.EJSON,\n    setInternalBufferSize,\n    serialize,\n    serializeWithBufferAndIndex,\n    deserialize,\n    calculateObjectSize,\n    deserializeStream\n};\nexports.default = BSON;\n\n});\n\nvar bson$1 = unwrapExports(bson);\nvar bson_1 = bson.deserializeStream;\nvar bson_2 = bson.calculateObjectSize;\nvar bson_3 = bson.deserialize;\nvar bson_4 = bson.serializeWithBufferAndIndex;\nvar bson_5 = bson.serialize;\nvar bson_6 = bson.setInternalBufferSize;\nvar bson_7 = bson.ObjectID;\nvar bson_8 = bson.Decimal128;\nvar bson_9 = bson.BSONRegExp;\nvar bson_10 = bson.MaxKey;\nvar bson_11 = bson.MinKey;\nvar bson_12 = bson.Int32;\nvar bson_13 = bson.Double;\nvar bson_14 = bson.Timestamp;\nvar bson_15 = bson.Long;\nvar bson_16 = bson.ObjectId;\nvar bson_17 = bson.Binary;\nvar bson_18 = bson.DBRef;\nvar bson_19 = bson.BSONSymbol;\nvar bson_20 = bson.Map;\nvar bson_21 = bson.Code;\nvar bson_22 = bson.LongWithoutOverridesClass;\nvar bson_23 = bson.EJSON;\nvar bson_24 = bson.BSON_INT64_MIN;\nvar bson_25 = bson.BSON_INT64_MAX;\nvar bson_26 = bson.BSON_INT32_MIN;\nvar bson_27 = bson.BSON_INT32_MAX;\nvar bson_28 = bson.BSON_DATA_UNDEFINED;\nvar bson_29 = bson.BSON_DATA_TIMESTAMP;\nvar bson_30 = bson.BSON_DATA_SYMBOL;\nvar bson_31 = bson.BSON_DATA_STRING;\nvar bson_32 = bson.BSON_DATA_REGEXP;\nvar bson_33 = bson.BSON_DATA_OID;\nvar bson_34 = bson.BSON_DATA_OBJECT;\nvar bson_35 = bson.BSON_DATA_NUMBER;\nvar bson_36 = bson.BSON_DATA_NULL;\nvar bson_37 = bson.BSON_DATA_MIN_KEY;\nvar bson_38 = bson.BSON_DATA_MAX_KEY;\nvar bson_39 = bson.BSON_DATA_LONG;\nvar bson_40 = bson.BSON_DATA_INT;\nvar bson_41 = bson.BSON_DATA_DECIMAL128;\nvar bson_42 = bson.BSON_DATA_DBPOINTER;\nvar bson_43 = bson.BSON_DATA_DATE;\nvar bson_44 = bson.BSON_DATA_CODE_W_SCOPE;\nvar bson_45 = bson.BSON_DATA_CODE;\nvar bson_46 = bson.BSON_DATA_BOOLEAN;\nvar bson_47 = bson.BSON_DATA_BINARY;\nvar bson_48 = bson.BSON_DATA_ARRAY;\nvar bson_49 = bson.BSON_BINARY_SUBTYPE_UUID_NEW;\nvar bson_50 = bson.BSON_BINARY_SUBTYPE_UUID;\nvar bson_51 = bson.BSON_BINARY_SUBTYPE_USER_DEFINED;\nvar bson_52 = bson.BSON_BINARY_SUBTYPE_MD5;\nvar bson_53 = bson.BSON_BINARY_SUBTYPE_FUNCTION;\nvar bson_54 = bson.BSON_BINARY_SUBTYPE_DEFAULT;\nvar bson_55 = bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY;\n\nexport default bson$1;\nexport { bson_9 as BSONRegExp, bson_19 as BSONSymbol, bson_55 as BSON_BINARY_SUBTYPE_BYTE_ARRAY, bson_54 as BSON_BINARY_SUBTYPE_DEFAULT, bson_53 as BSON_BINARY_SUBTYPE_FUNCTION, bson_52 as BSON_BINARY_SUBTYPE_MD5, bson_51 as BSON_BINARY_SUBTYPE_USER_DEFINED, bson_50 as BSON_BINARY_SUBTYPE_UUID, bson_49 as BSON_BINARY_SUBTYPE_UUID_NEW, bson_48 as BSON_DATA_ARRAY, bson_47 as BSON_DATA_BINARY, bson_46 as BSON_DATA_BOOLEAN, bson_45 as BSON_DATA_CODE, bson_44 as BSON_DATA_CODE_W_SCOPE, bson_43 as BSON_DATA_DATE, bson_42 as BSON_DATA_DBPOINTER, bson_41 as BSON_DATA_DECIMAL128, bson_40 as BSON_DATA_INT, bson_39 as BSON_DATA_LONG, bson_38 as BSON_DATA_MAX_KEY, bson_37 as BSON_DATA_MIN_KEY, bson_36 as BSON_DATA_NULL, bson_35 as BSON_DATA_NUMBER, bson_34 as BSON_DATA_OBJECT, bson_33 as BSON_DATA_OID, bson_32 as BSON_DATA_REGEXP, bson_31 as BSON_DATA_STRING, bson_30 as BSON_DATA_SYMBOL, bson_29 as BSON_DATA_TIMESTAMP, bson_28 as BSON_DATA_UNDEFINED, bson_27 as BSON_INT32_MAX, bson_26 as BSON_INT32_MIN, bson_25 as BSON_INT64_MAX, bson_24 as BSON_INT64_MIN, bson_17 as Binary, bson_21 as Code, bson_18 as DBRef, bson_8 as Decimal128, bson_13 as Double, bson_23 as EJSON, bson_12 as Int32, bson_15 as Long, bson_22 as LongWithoutOverridesClass, bson_20 as Map, bson_10 as MaxKey, bson_11 as MinKey, bson_7 as ObjectID, bson_16 as ObjectId, bson_14 as Timestamp, bson_2 as calculateObjectSize, bson_3 as deserialize, bson_1 as deserializeStream, bson_5 as serialize, bson_4 as serializeWithBufferAndIndex, bson_6 as setInternalBufferSize };\n//# sourceMappingURL=bson.browser.esm.js.map\n"]}