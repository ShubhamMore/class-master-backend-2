{"version":3,"sources":["webpack:///src/app/employee/branch/lead/lead.component.html","webpack:///src/app/employee/branch/lead/lead-routing.module.ts","webpack:///src/app/employee/branch/lead/lead.component.ts","webpack:///src/app/employee/branch/lead/lead.module.ts"],"names":["routes","path","component","LeadComponent","branchService","courseService","leadService","router","route","this","loading","branchId","getBranchId","getCourses","subscribe","courses","setCoursesData","err","back","navigate","relativeTo","deleteCoursesData","deleteLeadType","children","loadChildren","then","m","AddLeadModule","ManageLeadModule","redirectTo","pathMatch","PageNotFoundModule","LeadRoutingModule","forChild","LeadModule"],"mappings":"+OAAA,4CCIA,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCKG,M,MAAMC,EAIX,YACUC,EACAC,EACAC,EACAC,EACAC,GAJA,KAAAJ,gBACA,KAAAC,gBACA,KAAAC,cACA,KAAAC,SACA,KAAAC,QAGV,WACEC,KAAKC,SAAU,EACfD,KAAKE,SAAWF,KAAKL,cAAcQ,cAC9BH,KAAKE,SAKVF,KAAKJ,cAAcQ,WAAWJ,KAAKE,SAAU,IAAIG,UAC9CC,IACCN,KAAKJ,cAAcW,eAAeD,GAClCN,KAAKC,SAAU,GAEhBO,IACCR,KAAKS,SAVPT,KAAKS,OAgBT,OACET,KAAKF,OAAOY,SAAS,CAAC,OAAQ,CAAEC,WAAYX,KAAKD,QAGnD,cACEC,KAAKJ,cAAcgB,oBACnBZ,KAAKH,YAAYgB,kB,6CAtCRnB,GAAa,gM,mDAAbA,EAAa,wFFZ1B,qD,KAAe,8C,sCEYR,GDJHoB,SAAU,CACR,CACEtB,KAAM,MACNuB,aAAc,IAAM,kCAAqCC,KAAMC,GAAMA,EAAEC,gBAGzE,CACE1B,KAAM,OACNuB,aAAc,IAAM,kCAAqCC,KAAMC,GAAMA,EAAEC,gBAGzE,CACE1B,KAAM,SACNuB,aAAc,IACZ,mCAA2CC,KAAMC,GAAMA,EAAEE,mBAG7D,CACE3B,KAAM,GACN4B,WAAY,qBACZC,UAAW,QAGb,CACE7B,KAAM,iBACNuB,aAAc,IACZ,iCAA+DC,KAC5DC,GAAMA,EAAEK,qBAIf,CACE9B,KAAM,KACN4B,WAAY,iBACZC,UAAW,WAUZ,Y,MAAME,G,yDAAAA,I,+EAAAA,IAAiB,SAHnB,CAAC,IAAaC,SAASjC,IACtB,O,GAEL,GEzCA,Q,MAAMkC,G,yDAAAA,I,+EAAAA,IAAU,SAFZ,CAAC,IAAc,M,GAEnB","file":"x","sourcesContent":["<router-outlet *ngIf=\"!loading\"></router-outlet>\n","import { LeadComponent } from './lead.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeadComponent,\n    children: [\n      {\n        path: 'add',\n        loadChildren: () => import('./add-lead/add-lead.module').then((m) => m.AddLeadModule),\n      },\n\n      {\n        path: 'edit',\n        loadChildren: () => import('./add-lead/add-lead.module').then((m) => m.AddLeadModule),\n      },\n\n      {\n        path: 'manage',\n        loadChildren: () =>\n          import('./manage-lead/manage-lead.module').then((m) => m.ManageLeadModule),\n      },\n\n      {\n        path: '',\n        redirectTo: 'manage?type=active',\n        pathMatch: 'full',\n      },\n\n      {\n        path: 'page-not-found',\n        loadChildren: () =>\n          import('../../../shared/page-not-found/page-not-found.module').then(\n            (m) => m.PageNotFoundModule,\n          ),\n      },\n\n      {\n        path: '**',\n        redirectTo: 'page-not-found',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LeadRoutingModule {}\n","import { LeadService } from './../../../services/lead.service';\r\nimport { CourseModel } from './../../../models/course.model';\r\nimport { CourseService } from './../../../services/course.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { BranchService } from './../../../services/branch.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ngx-lead',\r\n  templateUrl: './lead.component.html',\r\n  styleUrls: ['./lead.component.scss'],\r\n})\r\nexport class LeadComponent implements OnInit, OnDestroy {\r\n  loading: boolean;\r\n  branchId: string;\r\n\r\n  constructor(\r\n    private branchService: BranchService,\r\n    private courseService: CourseService,\r\n    private leadService: LeadService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.branchId = this.branchService.getBranchId();\r\n    if (!this.branchId) {\r\n      this.back();\r\n      return;\r\n    }\r\n\r\n    this.courseService.getCourses(this.branchId, '').subscribe(\r\n      (courses: CourseModel[]) => {\r\n        this.courseService.setCoursesData(courses);\r\n        this.loading = false;\r\n      },\r\n      (err: any) => {\r\n        this.back();\r\n        return;\r\n      },\r\n    );\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['../'], { relativeTo: this.route });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.courseService.deleteCoursesData();\r\n    this.leadService.deleteLeadType();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LeadRoutingModule } from './lead-routing.module';\nimport { LeadComponent } from './lead.component';\nimport { AddLeadComponent } from './add-lead/add-lead.component';\n\n@NgModule({\n  declarations: [LeadComponent],\n  imports: [CommonModule, LeadRoutingModule],\n})\nexport class LeadModule {}\n"]}