{"version":3,"sources":["webpack:///src/app/employee/branch/student/student-course/student-course-installment/collect-student-course-installment/collect-student-course-installment.component.html","webpack:///src/app/employee/branch/student/student-course/student-course-installment/collect-student-course-installment/collect-student-course-installment-routing.module.ts","webpack:///src/app/employee/branch/student/student-course/student-course-installment/collect-student-course-installment/collect-student-course-installment.component.ts","webpack:///src/app/employee/branch/student/student-course/student-course-installment/collect-student-course-installment/collect-student-course-installment.module.ts"],"names":["CollectStudentCourseInstallmentComponent","CollectStudentCourseInstallmentModule","CollectStudentCourseInstallmentRoutingModule","routes","path","component","dateService","branchService","toastrService","studentService","courseService","studentCourseInstallmentService","studentCourseInstallmentReceiptService","router","route","mode","this","loading","submit","branchId","getBranchId","categoryId","getCategoryId","courseId","getCourseId","studentId","getStudentId","courseInstallmentId","getCourseInstallmentId","studentCourseInstallmentId","getStudentCourseInstallmentId","courseInstallmentReceiptForm","generatedBy","validators","required","date","amount","min","lateFee","totalAmount","paymentDate","getDateString","paymentMode","bankDetails","transactionDetails","description","amountDue","queryParams","subscribe","param","showToastr","back","studentCourseInstallmentReceiptId","getStudentCourseInstallmentReceiptId","getStudentCourseInstallmentReceiptForEditing","studentCourseInstallmentReceipt","patchValue","err","getCourseInstallment","courseInstallment","installmentDate","installmentAmount","amountPending","calculateTotalAmount","getRawValue","stepper","previous","markAllAsTouched","invalid","next","receiptDetails","branch","category","course","student","_id","editStudentCourseInstallmentReceipt","res","addStudentCourseInstallmentReceipt","getCourseName","pipe","map","courseName","navigate","relativeTo","replaceUrl","position","status","message","show","deleteStudentCourseInstallmentReceiptId","deleteCourseInstallmentId","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","forChild"],"mappings":"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","file":"x","sourcesContent":["<nb-card *ngIf=\"!loading\">\r\n  <nb-card-header>\r\n    <button\r\n      type=\"button\"\r\n      class=\"float-right\"\r\n      nbButton\r\n      size=\"small\"\r\n      status=\"warning\"\r\n      (click)=\"back()\"\r\n    >\r\n      Back\r\n    </button>\r\n    <h3 class=\"\">Collect Installment</h3>\r\n  </nb-card-header>\r\n  <nb-card-body>\r\n    <nb-stepper #stepper [linear]=\"true\" [disableStepNavigation]=\"true\">\r\n      <nb-step [stepControl]=\"courseInstallmentReceiptForm\" label=\"Receipt Details\">\r\n        <form\r\n          class=\"\"\r\n          (submit)=\"courseInstallmentReceiptFormSubmit()\"\r\n          [formGroup]=\"courseInstallmentReceiptForm\"\r\n        >\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-generatedBy\">Generated By:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  nbInput\r\n                  id=\"input-generatedBy\"\r\n                  name=\"generatedBy\"\r\n                  formControlName=\"generatedBy\"\r\n                  placeholder=\"Generated By\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    courseInstallmentReceiptForm.get('generatedBy').touched\r\n                      ? courseInstallmentReceiptForm.get('generatedBy').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    courseInstallmentReceiptForm.get('generatedBy').invalid &&\r\n                    courseInstallmentReceiptForm.get('generatedBy').touched\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('generatedBy').errors?.required\"\r\n                  >\r\n                    Generated By is required!\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-date\">Installment Date:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  nbInput\r\n                  id=\"input-date\"\r\n                  name=\"date\"\r\n                  formControlName=\"date\"\r\n                  placeholder=\"Date\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    courseInstallmentReceiptForm.get('date').touched\r\n                      ? courseInstallmentReceiptForm.get('date').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                  disabled=\"true\"\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    courseInstallmentReceiptForm.get('date').invalid &&\r\n                    courseInstallmentReceiptForm.get('date').touched\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('date').errors?.required\"\r\n                  >\r\n                    Installment Date is required!\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-amount\">Installment Amount:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  nbInput\r\n                  id=\"input-amount\"\r\n                  name=\"amount\"\r\n                  min=\"0\"\r\n                  formControlName=\"amount\"\r\n                  placeholder=\"amount\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    courseInstallmentReceiptForm.get('amount').touched\r\n                      ? courseInstallmentReceiptForm.get('amount').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                  disabled=\"true\"\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    courseInstallmentReceiptForm.get('amount').invalid &&\r\n                    courseInstallmentReceiptForm.get('amount').touched\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('amount').errors?.required\"\r\n                  >\r\n                    Installment Amount is required!\r\n                  </p>\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('amount').errors?.min\"\r\n                  >\r\n                    Minimum Installment Amount should be 0\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-lateFee\">Late Fee:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  nbInput\r\n                  id=\"input-lateFee\"\r\n                  name=\"lateFee\"\r\n                  min=\"0\"\r\n                  formControlName=\"lateFee\"\r\n                  placeholder=\"lateFee\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    courseInstallmentReceiptForm.get('lateFee').touched\r\n                      ? courseInstallmentReceiptForm.get('lateFee').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                  (input)=\"calculateTotalAmount()\"\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    courseInstallmentReceiptForm.get('lateFee').invalid &&\r\n                    courseInstallmentReceiptForm.get('lateFee').touched\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('lateFee').errors?.min\"\r\n                  >\r\n                    Minimum late fee Amount should be 0.\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-totalAmount\">Total Fee:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  nbInput\r\n                  id=\"input-totalAmount\"\r\n                  name=\"totalAmount\"\r\n                  min=\"0\"\r\n                  formControlName=\"totalAmount\"\r\n                  placeholder=\"totalAmount\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    courseInstallmentReceiptForm.get('totalAmount').touched\r\n                      ? courseInstallmentReceiptForm.get('totalAmount').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                  disabled=\"true\"\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    courseInstallmentReceiptForm.get('totalAmount').invalid &&\r\n                    courseInstallmentReceiptForm.get('totalAmount').touched\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('totalAmount').errors?.required\"\r\n                  >\r\n                    Total Amount is Required!\r\n                  </p>\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('totalAmount').errors?.min\"\r\n                  >\r\n                    Minimum late fee Amount should be 0.\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-amountDue\">Pending Amount:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  nbInput\r\n                  id=\"input-amountDue\"\r\n                  name=\"amountDue\"\r\n                  min=\"0\"\r\n                  formControlName=\"amountDue\"\r\n                  placeholder=\"Amount Due\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    courseInstallmentReceiptForm.get('amountDue').touched\r\n                      ? courseInstallmentReceiptForm.get('amountDue').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                  disabled=\"true\"\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    courseInstallmentReceiptForm.get('amountDue').invalid &&\r\n                    courseInstallmentReceiptForm.get('amountDue').touched\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('amountDue').errors?.required\"\r\n                  >\r\n                    Pending Amount is Required!\r\n                  </p>\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('amountDue').errors?.min\"\r\n                  >\r\n                    Minimum Pending Amount should be 0.\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-paymentDate\">Payment Date:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  nbInput\r\n                  id=\"input-paymentDate\"\r\n                  name=\"paymentDate\"\r\n                  formControlName=\"paymentDate\"\r\n                  placeholder=\"Payment Date\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    courseInstallmentReceiptForm.get('paymentDate').touched\r\n                      ? courseInstallmentReceiptForm.get('paymentDate').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    courseInstallmentReceiptForm.get('paymentDate').touched &&\r\n                    courseInstallmentReceiptForm.get('paymentDate').invalid\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('paymentDate').errors?.required\"\r\n                  >\r\n                    Payment date is required!\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-paymentMode\">Payment Mode:</label>\r\n                <nb-select\r\n                  id=\"input-paymentMode\"\r\n                  name=\"paymentMode\"\r\n                  formControlName=\"paymentMode\"\r\n                  placeholder=\"paymentMode\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    courseInstallmentReceiptForm.get('paymentMode').touched\r\n                      ? courseInstallmentReceiptForm.get('paymentMode').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                >\r\n                  <nb-option value=\"\">Select Payment Mode</nb-option>\r\n                  <nb-option value=\"cash\">Cash</nb-option>\r\n                  <nb-option value=\"card\">Card</nb-option>\r\n                  <nb-option value=\"wallet\">Waller</nb-option>\r\n                  <nb-option value=\"online\">Online</nb-option>\r\n                  <nb-option value=\"other\">Other</nb-option>\r\n                </nb-select>\r\n              </div>\r\n              <ng-container\r\n                *ngIf=\"\r\n                  courseInstallmentReceiptForm.get('paymentMode').touched &&\r\n                  courseInstallmentReceiptForm.get('paymentMode').invalid\r\n                \"\r\n              >\r\n                <p\r\n                  class=\"caption status-danger\"\r\n                  *ngIf=\"courseInstallmentReceiptForm.get('paymentMode').errors?.required\"\r\n                >\r\n                  Payment Mode is required!\r\n                </p>\r\n              </ng-container>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-bankDetails\">Bank Details:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  nbInput\r\n                  id=\"input-bankDetails\"\r\n                  name=\"bankDetails\"\r\n                  formControlName=\"bankDetails\"\r\n                  placeholder=\"Bank Details\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    courseInstallmentReceiptForm.get('bankDetails').touched\r\n                      ? courseInstallmentReceiptForm.get('bankDetails').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    courseInstallmentReceiptForm.get('bankDetails').invalid &&\r\n                    courseInstallmentReceiptForm.get('bankDetails').touched\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('bankDetails').errors?.required\"\r\n                  >\r\n                    Bank Details are required!\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-transactionDetails\">Transaction Details:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  nbInput\r\n                  id=\"input-transactionDetails\"\r\n                  name=\"transactionDetails\"\r\n                  formControlName=\"transactionDetails\"\r\n                  placeholder=\"Transaction Details\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    courseInstallmentReceiptForm.get('transactionDetails').touched\r\n                      ? courseInstallmentReceiptForm.get('transactionDetails').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    courseInstallmentReceiptForm.get('transactionDetails').invalid &&\r\n                    courseInstallmentReceiptForm.get('transactionDetails').touched\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"courseInstallmentReceiptForm.get('transactionDetails').errors?.required\"\r\n                  >\r\n                    Transaction Details are required!\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-12\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-description\">Description:</label>\r\n                <textarea\r\n                  type=\"text\"\r\n                  nbInput\r\n                  rows=\"2\"\r\n                  id=\"input-description\"\r\n                  name=\"description\"\r\n                  formControlName=\"description\"\r\n                  placeholder=\"Description (Optional)\"\r\n                  fullWidth\r\n                ></textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 text-right\">\r\n              <button nbButton size=\"small\" type=\"submit\">\r\n                <span>Next</span>\r\n                <nb-icon icon=\"arrow-ios-forward-outline\"></nb-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </nb-step>\r\n\r\n      <nb-step label=\"Submit\">\r\n        <div class=\"step-container\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-bordered\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>Course</th>\r\n                  <td>{{ getCourseName(courseId) | async }}</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th>Generated By</th>\r\n                  <td>{{ courseInstallmentReceiptForm.value.generatedBy }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Installment Date</th>\r\n                  <td>{{ dateService.formatDate(courseInstallmentReceiptForm.value.date) }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Installment Amount</th>\r\n                  <td>\r\n                    {{ courseInstallmentReceiptForm.value.amount }}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Late Fee</th>\r\n                  <td>{{ courseInstallmentReceiptForm.value.lateFee }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Total Amount</th>\r\n                  <td>{{ courseInstallmentReceiptForm.value.totalAmount }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Payment Date</th>\r\n                  <td>\r\n                    {{ dateService.formatDate(courseInstallmentReceiptForm.value.paymentDate) }}\r\n                  </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <th>Payment Mode</th>\r\n                  <td>{{ courseInstallmentReceiptForm.value.paymentMode | uppercase }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Bank Details</th>\r\n                  <td>{{ courseInstallmentReceiptForm.value.bankDetails }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Transaction Details</th>\r\n                  <td>{{ courseInstallmentReceiptForm.value.transactionDetails }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>description</th>\r\n                  <td>{{ courseInstallmentReceiptForm.value.description }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Pending Amount</th>\r\n                  <td>{{ courseInstallmentReceiptForm.value.amountDue }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-6 text-left\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"\"\r\n                nbButton\r\n                size=\"small\"\r\n                (click)=\"previousStep()\"\r\n                [disabled]=\"submit\"\r\n              >\r\n                <nb-icon icon=\"arrow-ios-back-outline\"></nb-icon>\r\n                <span>prev</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"col-6 text-right\">\r\n              <button\r\n                nbButton\r\n                size=\"small\"\r\n                type=\"button\"\r\n                (click)=\"saveCourseInstallmentReceipt()\"\r\n                [disabled]=\"submit\"\r\n                [nbSpinner]=\"submit\"\r\n                nbSpinnerStatus=\"primary\"\r\n                nbSpinnerSize=\"small\"\r\n              >\r\n                <span>Submit</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nb-step>\r\n    </nb-stepper>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CollectStudentCourseInstallmentComponent } from './collect-student-course-installment.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CollectStudentCourseInstallmentComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CollectStudentCourseInstallmentRoutingModule {}\n","import { StudentCourseInstallmentService } from './../../../../../../services/student-course-installment.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { StudentCourseInstallmentReceiptModel } from './../../../../../../models/student-course-installment-receipt.model';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { CourseService } from './../../../../../../services/course.service';\r\nimport { DateService } from './../../../../../../services/shared-services/date.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { InstallmentModel } from './../../../../../../models/student-course-installment.model';\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { BranchService } from '../../../../../../services/branch.service';\r\nimport { StudentService } from '../../../../../../services/student.service';\r\n\r\nimport { StudentCourseInstallmentReceiptService } from '../../../../../../services/student-course-installment-receipt.service';\r\nimport { NbToastrService, NbStepperComponent } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-collect-student-course-installment',\r\n  templateUrl: './collect-student-course-installment.component.html',\r\n  styleUrls: ['./collect-student-course-installment.component.scss'],\r\n})\r\nexport class CollectStudentCourseInstallmentComponent implements OnInit, OnDestroy {\r\n  @ViewChild('stepper', { static: false }) stepper: NbStepperComponent;\r\n\r\n  loading: boolean;\r\n  submit: boolean;\r\n\r\n  private branchId: string;\r\n  private categoryId: string;\r\n  courseId: string;\r\n  private studentId: string;\r\n\r\n  private courseInstallmentId: string;\r\n\r\n  courseInstallment: InstallmentModel;\r\n  private studentCourseInstallmentId: string;\r\n  private studentCourseInstallmentReceiptId: string;\r\n  private studentCourseInstallmentReceipt: StudentCourseInstallmentReceiptModel;\r\n  courseInstallmentReceiptForm: FormGroup;\r\n\r\n  constructor(\r\n    public dateService: DateService,\r\n    private branchService: BranchService,\r\n    private toastrService: NbToastrService,\r\n    private studentService: StudentService,\r\n    private courseService: CourseService,\r\n    private studentCourseInstallmentService: StudentCourseInstallmentService,\r\n    private studentCourseInstallmentReceiptService: StudentCourseInstallmentReceiptService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.submit = false;\r\n\r\n    this.branchId = this.branchService.getBranchId();\r\n    this.categoryId = this.branchService.getCategoryId();\r\n    this.courseId = this.courseService.getCourseId();\r\n    this.studentId = this.studentService.getStudentId();\r\n    this.courseInstallmentId = this.studentCourseInstallmentService.getCourseInstallmentId();\r\n\r\n    if (!this.branchId || !this.categoryId || !this.courseId || !this.studentId) {\r\n      this.back();\r\n\r\n      return;\r\n    }\r\n\r\n    this.studentCourseInstallmentId = this.studentCourseInstallmentService.getStudentCourseInstallmentId();\r\n\r\n    this.courseInstallmentReceiptForm = new FormGroup({\r\n      generatedBy: new FormControl(null, { validators: [Validators.required] }),\r\n      date: new FormControl(null, { validators: [Validators.required] }),\r\n      amount: new FormControl(null, { validators: [Validators.min(0)] }),\r\n      lateFee: new FormControl(0, { validators: [Validators.min(0)] }),\r\n      totalAmount: new FormControl(null, { validators: [Validators.required, Validators.min(0)] }),\r\n      paymentDate: new FormControl(this.dateService.getDateString(), {\r\n        validators: [Validators.required],\r\n      }),\r\n      paymentMode: new FormControl('', { validators: [Validators.required] }),\r\n      bankDetails: new FormControl(null, { validators: [] }),\r\n      transactionDetails: new FormControl(null, { validators: [] }),\r\n      description: new FormControl(null, { validators: [] }),\r\n      amountDue: new FormControl(null, { validators: [Validators.required, Validators.min(0)] }),\r\n    });\r\n\r\n    let mode: string;\r\n\r\n    this.route.queryParams.subscribe((param: Params) => {\r\n      mode = param.mode;\r\n    });\r\n\r\n    if (mode && mode !== 'edit') {\r\n      this.showToastr('top-right', 'danger', 'Invalid Route');\r\n      this.back();\r\n\r\n      return;\r\n    }\r\n\r\n    // tslint:disable-next-line: max-line-length\r\n    this.studentCourseInstallmentReceiptId = this.studentCourseInstallmentReceiptService.getStudentCourseInstallmentReceiptId();\r\n\r\n    if (mode && !this.studentCourseInstallmentReceiptId) {\r\n      this.showToastr('top-right', 'danger', 'Receipt Id Not Provided');\r\n      this.back();\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.studentCourseInstallmentReceiptId) {\r\n      this.studentCourseInstallmentReceiptService\r\n        .getStudentCourseInstallmentReceiptForEditing(this.studentCourseInstallmentReceiptId)\r\n        .subscribe(\r\n          (studentCourseInstallmentReceipt: StudentCourseInstallmentReceiptModel) => {\r\n            if (!studentCourseInstallmentReceipt) {\r\n              this.showToastr('top-right', 'danger', 'Receipt Not Available');\r\n              this.back();\r\n\r\n              return;\r\n            }\r\n            this.studentCourseInstallmentReceipt = studentCourseInstallmentReceipt;\r\n\r\n            this.courseInstallmentReceiptForm.patchValue({\r\n              generatedBy: this.studentCourseInstallmentReceipt.generatedBy,\r\n              date: this.studentCourseInstallmentReceipt.date,\r\n              amount: this.studentCourseInstallmentReceipt.amount,\r\n              lateFee: this.studentCourseInstallmentReceipt.lateFee,\r\n              totalAmount: this.studentCourseInstallmentReceipt.totalAmount,\r\n              paymentDate: this.studentCourseInstallmentReceipt.paymentDate,\r\n              paymentMode: this.studentCourseInstallmentReceipt.paymentMode,\r\n              bankDetails: this.studentCourseInstallmentReceipt.bankDetails,\r\n              transactionDetails: this.studentCourseInstallmentReceipt.transactionDetails,\r\n              description: this.studentCourseInstallmentReceipt.description,\r\n              amountDue: this.studentCourseInstallmentReceipt.amountDue,\r\n            });\r\n\r\n            this.loading = false;\r\n          },\r\n          (err: any) => {\r\n            this.showToastr('top-right', 'danger', 'Receipt Not Available');\r\n            this.back();\r\n          },\r\n        );\r\n    } else {\r\n      this.studentCourseInstallmentService\r\n        .getCourseInstallment(this.courseInstallmentId)\r\n        .subscribe((courseInstallment: InstallmentModel) => {\r\n          if (!courseInstallment) {\r\n            this.back();\r\n            return;\r\n          }\r\n\r\n          this.courseInstallment = courseInstallment;\r\n\r\n          this.courseInstallmentReceiptForm.patchValue({\r\n            date: courseInstallment.installmentDate,\r\n            amount: courseInstallment.installmentAmount,\r\n            amountDue: courseInstallment.amountPending,\r\n          });\r\n\r\n          this.calculateTotalAmount();\r\n\r\n          this.loading = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  calculateTotalAmount() {\r\n    let lateFee = +this.courseInstallmentReceiptForm.getRawValue().lateFee;\r\n    if (!lateFee || lateFee < 0) {\r\n      lateFee = 0;\r\n    }\r\n    const amount = +this.courseInstallmentReceiptForm.getRawValue().amount;\r\n\r\n    const totalAmount = amount + lateFee;\r\n\r\n    this.courseInstallmentReceiptForm.patchValue({ totalAmount });\r\n  }\r\n\r\n  previousStep() {\r\n    this.stepper.previous();\r\n  }\r\n\r\n  courseInstallmentReceiptFormSubmit() {\r\n    this.courseInstallmentReceiptForm.markAllAsTouched();\r\n    if (this.courseInstallmentReceiptForm.invalid) {\r\n      this.showToastr('top-right', 'danger', 'Receipt Details are Required');\r\n      return;\r\n    }\r\n    this.stepper.next();\r\n  }\r\n\r\n  saveCourseInstallmentReceipt() {\r\n    if (this.courseInstallmentReceiptForm.invalid) {\r\n      this.showToastr('top-right', 'danger', 'Receipt Details are Required');\r\n      return;\r\n    }\r\n    this.submit = true;\r\n\r\n    const receiptDetails: any = this.courseInstallmentReceiptForm.getRawValue();\r\n    receiptDetails.studentCourseInstallmentId = this.studentCourseInstallmentId;\r\n    receiptDetails.courseInstallmentId = this.courseInstallmentId;\r\n    receiptDetails.branch = this.branchId;\r\n    receiptDetails.category = this.categoryId;\r\n    receiptDetails.course = this.courseId;\r\n    receiptDetails.student = this.studentId;\r\n\r\n    if (!this.studentCourseInstallmentReceipt) {\r\n      this.studentCourseInstallmentReceiptService\r\n        .addStudentCourseInstallmentReceipt(receiptDetails)\r\n        .subscribe(\r\n          (res: { receiptId: string }) => {\r\n            this.showToastr('top-right', 'success', 'Installment Receipt Generated Successfully!');\r\n            // this.studentCourseInstallmentService.setCourseInstallmentReceipt(\r\n            //   this.courseInstallmentId,\r\n            //   res.receiptId,\r\n            // );\r\n            this.back();\r\n          },\r\n          (err: any) => {\r\n            this.showToastr('top-right', 'danger', err);\r\n            this.submit = false;\r\n          },\r\n        );\r\n    } else {\r\n      receiptDetails._id = this.studentCourseInstallmentReceipt._id;\r\n      this.studentCourseInstallmentReceiptService\r\n        .editStudentCourseInstallmentReceipt(receiptDetails)\r\n        .subscribe(\r\n          (res: any) => {\r\n            this.showToastr('top-right', 'success', 'Installment Receipt Updated Successfully!');\r\n            this.back();\r\n          },\r\n          (err: any) => {\r\n            this.showToastr('top-right', 'danger', err);\r\n            this.submit = false;\r\n          },\r\n        );\r\n    }\r\n  }\r\n\r\n  getCourseName(courseId: string): Observable<string> {\r\n    return this.courseService.getCourseName(courseId).pipe(\r\n      map((courseName: string) => {\r\n        return courseName;\r\n      }),\r\n    );\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['../'], { relativeTo: this.route, replaceUrl: true });\r\n  }\r\n\r\n  private showToastr(position: any, status: any, message: string) {\r\n    this.toastrService.show(status, message, {\r\n      position,\r\n      status,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.studentCourseInstallmentReceiptService.deleteStudentCourseInstallmentReceiptId();\r\n    this.studentCourseInstallmentService.deleteCourseInstallmentId();\r\n  }\r\n}\r\n","import { ReactiveFormsModule } from '@angular/forms';\nimport {\n  NbCardModule,\n  NbInputModule,\n  NbSelectModule,\n  NbButtonModule,\n  NbIconModule,\n  NbSpinnerModule,\n  NbStepperModule,\n} from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CollectStudentCourseInstallmentRoutingModule } from './collect-student-course-installment-routing.module';\nimport { CollectStudentCourseInstallmentComponent } from './collect-student-course-installment.component';\n\n@NgModule({\n  declarations: [CollectStudentCourseInstallmentComponent],\n  imports: [\n    CommonModule,\n    CollectStudentCourseInstallmentRoutingModule,\n\n    NbCardModule,\n    NbInputModule,\n    NbSelectModule,\n    NbButtonModule,\n    NbIconModule,\n    NbSpinnerModule,\n    NbStepperModule,\n\n    ReactiveFormsModule,\n  ],\n})\nexport class CollectStudentCourseInstallmentModule {}\n"]}