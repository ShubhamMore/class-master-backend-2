{"version":3,"sources":["webpack:///src/app/authentication/forgot-password/forgot-password.component.html","webpack:///src/app/authentication/forgot-password/forgot-password-routing.module.ts","webpack:///src/app/authentication/forgot-password/forgot-password.component.ts","webpack:///src/app/authentication/forgot-password/forgot-password.module.ts"],"names":["routes","path","component","ForgotPasswordComponent","httpService","toastrService","router","this","loading","submit","form","email","validators","required","markAllAsTouched","invalid","showToastr","httpPost","api","data","value","subscribe","res","reset","error","position","status","message","show","forgotPassword","canActivate","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","ForgotPasswordRoutingModule","forChild","ForgotPasswordModule"],"mappings":"0PA+BgB,wCACE,gDACF,+B,sBACA,wCACE,2DACF,+B,yBANF,0CACE,0CAGA,0CAGF,wC,4CANmC,wIAGA,sIC9BjD,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCIG,M,MAAMC,EAKX,YACUC,EACAC,EACAC,GAFA,KAAAF,cACA,KAAAC,gBACA,KAAAC,SAGV,WACEC,KAAKC,SAAU,EACfD,KAAKE,QAAS,EACdF,KAAKG,KAAO,IAAI,IAAU,CACxBC,MAAO,IAAI,IAAY,KAAM,CAC3BC,WAAY,CAAC,IAAWC,SAAU,IAAWF,WAGjDJ,KAAKC,SAAU,EAGjB,iBACED,KAAKG,KAAKI,mBACNP,KAAKG,KAAKK,QACZR,KAAKS,WAAW,YAAa,SAAU,8BAGzCT,KAAKE,QAAS,EAQdF,KAAKH,YAAYa,SAPJ,CACXC,IAAK,iBACLC,KAAM,CACJR,MAAOJ,KAAKG,KAAKU,MAAMT,SAIKU,UAC7BC,IACCf,KAAKG,KAAKa,QACVhB,KAAKS,WACH,YACA,UACA,uDAEFT,KAAKE,QAAS,GAEfe,IACCjB,KAAKS,WAAW,YAAa,SAAUQ,GACvCjB,KAAKE,QAAS,KAKpB,WAAWgB,EAAeC,EAAaC,GACrCpB,KAAKF,cAAcuB,KAAKF,EAAQC,EAAS,CACvCF,WACAC,Y,6CAxDOvB,GAAuB,qH,mDAAvBA,EAAuB,wtBFXpC,yCACE,yCACE,yCACE,2CACE,gDACE,wCAA6B,2CAAe,8BAC5C,uCACE,wGACF,8BAEA,0CAAM,wDAAY,EAAA0B,oBAChB,0CACE,4CAAuC,sDAAyB,8BAChE,uCAiBA,qDAQF,8BAEA,kCAEA,8CACE,+CACF,8BACF,8BAEA,kCAEA,+CACE,sCACE,sCAAQ,yCAAyC,mCAAM,8BAAI,uCAC3D,yCAA4C,qCAAQ,8BACtD,8BACF,8BACF,8BACF,8BACF,8BACF,8BACF,+B,MAjD8C,0EAY9B,mJAQY,uHAY0C,6E,wmBE/B/D,GDHHC,YAAa,IAGf,CACE7B,KAAM,iBACN8B,aAAc,IACZ,iCAA4DC,KAAMC,GAAMA,EAAEC,qBAG9E,CACEjC,KAAM,KACNkC,WAAY,iBACZC,UAAW,SAQR,Y,MAAMC,G,yDAAAA,I,+EAAAA,IAA2B,SAH7B,CAAC,IAAaC,SAAStC,IACtB,O,GAEL,G,gBEUA,Y,MAAMuC,G,yDAAAA,I,+EAAAA,IAAoB,SAjBtB,CACP,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,S,GAGG","file":"x","sourcesContent":["<div class=\"main-container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 col-sm-10 col-12 mx-auto\">\n      <nb-card>\n        <nb-card-body>\n          <h1 id=\"title\" class=\"title\">Forgot Password</h1>\n          <p class=\"sub-title\">\n            Enter your email address and weâ€™ll send a link to reset your password\n          </p>\n\n          <form (ngSubmit)=\"forgotPassword()\" [formGroup]=\"form\">\n            <div class=\"form-control-group\">\n              <label class=\"label\" for=\"input-email\">Enter your email address:</label>\n              <input\n                nbInput\n                type=\"email\"\n                id=\"input-email\"\n                name=\"email\"\n                placeholder=\"Email address\"\n                formControlName=\"email\"\n                autofocus\n                fullWidth\n                [status]=\"\n                  form.get('email').touched\n                    ? form.get('email').invalid\n                      ? 'danger'\n                      : 'success'\n                    : 'basic'\n                \"\n              />\n              <ng-container *ngIf=\"form.get('email').invalid && form.get('email').touched\">\n                <p class=\"caption status-danger\" *ngIf=\"form.get('email').errors?.required\">\n                  Email is required!\n                </p>\n                <p class=\"caption status-danger\" *ngIf=\"form.get('email').errors?.email\">\n                  Email should be the real one!\n                </p>\n              </ng-container>\n            </div>\n\n            <br />\n\n            <button nbButton size=\"medium\" fullWidth status=\"primary\" [disabled]=\"submit\">\n              Request password\n            </button>\n          </form>\n\n          <br />\n\n          <section class=\"sign-in-or-up text-right\">\n            <p>\n              Back to <a class=\"text-link\" routerLink=\"/login\">Log In</a>&nbsp;|&nbsp;\n              <a routerLink=\"/register\" class=\"text-link\">Register</a>\n            </p>\n          </section>\n        </nb-card-body>\n      </nb-card>\n    </div>\n  </div>\n</div>\n","import { ForgotPasswordComponent } from './forgot-password.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ForgotPasswordComponent,\n    canActivate: [],\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../shared/page-not-found/page-not-found.module').then((m) => m.PageNotFoundModule),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ForgotPasswordRoutingModule {}\n","import { NbToastrService } from '@nebular/theme';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/shared-services/http.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'ngx-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss', '../authentication.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  form: FormGroup;\n  loading: boolean;\n  submit: boolean;\n\n  constructor(\n    private httpService: HttpService,\n    private toastrService: NbToastrService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n    this.submit = false;\n    this.form = new FormGroup({\n      email: new FormControl(null, {\n        validators: [Validators.required, Validators.email],\n      }),\n    });\n    this.loading = false;\n  }\n\n  forgotPassword() {\n    this.form.markAllAsTouched();\n    if (this.form.invalid) {\n      this.showToastr('top-right', 'danger', 'Enter Valid Email Address');\n      return;\n    }\n    this.submit = true;\n    const data = {\n      api: 'forgotPassword',\n      data: {\n        email: this.form.value.email,\n      },\n    };\n\n    this.httpService.httpPost(data).subscribe(\n      (res: any) => {\n        this.form.reset();\n        this.showToastr(\n          'top-right',\n          'success',\n          'Reset Password Link Send to your Email Successfully',\n        );\n        this.submit = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.submit = false;\n      },\n    );\n  }\n\n  showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ForgotPasswordRoutingModule } from './forgot-password-routing.module';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ThemeModule } from './../../@theme/theme.module';\nimport {\n  NbCardModule,\n  NbButtonModule,\n  NbIconModule,\n  NbInputModule,\n  NbActionsModule,\n  NbCheckboxModule,\n  NbAlertModule,\n  NbSelectModule,\n} from '@nebular/theme';\nimport { ForgotPasswordComponent } from './forgot-password.component';\n\n@NgModule({\n  declarations: [ForgotPasswordComponent],\n  imports: [\n    CommonModule,\n    ForgotPasswordRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ThemeModule,\n    NbCardModule,\n    NbButtonModule,\n    NbIconModule,\n    NbButtonModule,\n    NbActionsModule,\n    NbInputModule,\n    NbCheckboxModule,\n    NbAlertModule,\n    NbSelectModule,\n  ],\n})\nexport class ForgotPasswordModule {}\n"]}