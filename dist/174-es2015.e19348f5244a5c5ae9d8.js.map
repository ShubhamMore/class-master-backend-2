{"version":3,"sources":["webpack:///src/app/institute/branch/leave/leave-comment/leave-comment.component.ts","webpack:///src/app/institute/branch/leave/leave-comment/leave-comment.component.html","webpack:///src/app/institute/branch/leave/leave.component.html","webpack:///src/app/institute/branch/leave/leave-routing.module.ts","webpack:///src/app/institute/branch/leave/leave.component.ts","webpack:///src/app/institute/branch/leave/leave.module.ts"],"names":["LeaveCommentComponent","ref","comment","this","close","changeComment","submit","routes","path","component","LeaveComponent","branchService","branchEmployeeService","dateService","router","route","employeeLeaveService","toastrService","dialogService","loading","branchId","getBranchId","branchEmployees","employee","approvedLeaves","pendingLeaves","rejectedLeaves","months","getMonths","years","getYears","month","getDate","getMonth","toString","padStart","year","length","getBranchAllEmployeeNameIds","subscribe","error","showToastr","getBranchLeaves","back","getBranchAllEmployeeLeaves","leaves","filter","leave","status","myEmployee","find","curEmployee","name","duration","startDate","endDate","hours","formatDate","navigate","relativeTo","_id","changeEmployeeLeaveStatus","res","toUpperCase","id","open","context","closeOnBackdropClick","closeOnEsc","onClose","position","message","show","onSelectEmployee","onSelectYear","onSelectMonth","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","LeaveRoutingModule","forChild","LeaveModule"],"mappings":"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","file":"x","sourcesContent":["import { NbDialogRef } from '@nebular/theme';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-leave-comment',\n  templateUrl: './leave-comment.component.html',\n  styleUrls: ['./leave-comment.component.scss'],\n})\nexport class LeaveCommentComponent implements OnInit {\n  comment: string;\n\n  constructor(private ref: NbDialogRef<LeaveCommentComponent>) {}\n\n  ngOnInit(): void {}\n\n  changeComment(comment: string) {\n    this.comment = comment;\n  }\n\n  submit() {\n    this.ref.close(this.comment);\n  }\n}\n","<nb-card class=\"comment-box\">\n  <nb-card-header>\n    <h4>Comment</h4>\n  </nb-card-header>\n  <nb-card-body>\n    <textArea\n      nbInput\n      fullWidth\n      rows=\"2\"\n      (input)=\"changeComment($event.target.value)\"\n      placeholder=\"Comment\"\n    >\n    </textArea>\n  </nb-card-body>\n  <nb-card-footer>\n    <div class=\"row\">\n      <div class=\"col-12 text-right\">\n        <button type=\"button\" nbButton size=\"small\" status=\"primary\" (click)=\"submit()\">\n          Submit\n        </button>\n      </div>\n    </div>\n  </nb-card-footer>\n</nb-card>\n","<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <h3>Employee Leaves</h3>\n      </div>\n    </div>\n  </nb-card-header>\n</nb-card>\n\n<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-employee\"\n          name=\"employee\"\n          [selected]=\"employee\"\n          fullWidth\n          placeholder=\"All Employees\"\n          (selectedChange)=\"onSelectEmployee($event)\"\n        >\n          <nb-option value=\"\">All Employees</nb-option>\n          <nb-option *ngFor=\"let employee of branchEmployees\" [value]=\"employee.employee\">{{\n            employee.name\n          }}</nb-option>\n        </nb-select>\n      </div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-year\"\n          name=\"year\"\n          [selected]=\"year\"\n          fullWidth\n          placeholder=\"All Years\"\n          (selectedChange)=\"onSelectYear($event)\"\n        >\n          <nb-option value=\"\">All Years</nb-option>\n          <nb-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</nb-option>\n        </nb-select>\n      </div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-month\"\n          name=\"month\"\n          [selected]=\"month\"\n          fullWidth\n          placeholder=\"All Months\"\n          (selectedChange)=\"onSelectMonth($event)\"\n        >\n          <nb-option value=\"\">All Months</nb-option>\n          <nb-option *ngFor=\"let month of months\" [value]=\"month.monthNo\">{{\n            month.month\n          }}</nb-option>\n        </nb-select>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body class=\"body-container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <nb-tabset fullWidth>\n          <nb-tab tabTitle=\"pending\">\n            <ng-container *ngIf=\"!loading; else loadingData\">\n              <div class=\"table-responsive\" *ngIf=\"pendingLeaves.length > 0; else noPendingLeaves\">\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Employee</th>\n                      <th>Date</th>\n                      <th>Leave Type</th>\n                      <th>Duration</th>\n                      <th>Reason</th>\n                      <th colspan=\"2\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let employeeLeave of pendingLeaves; let i = index\">\n                      <td>{{ i + 1 }}</td>\n                      <td>\n                        {{ getEmployeeName(employeeLeave.employee) }}\n                      </td>\n                      <td>{{ dateService.formatDate(employeeLeave.date) }}</td>\n                      <td>{{ employeeLeave.leaveType }}</td>\n                      <td>\n                        {{\n                          getLeaveDuration(\n                            employeeLeave.duration,\n                            employeeLeave.startDate,\n                            employeeLeave.endDate,\n                            employeeLeave.hours\n                          )\n                        }}\n                      </td>\n                      <td>\n                        {{ employeeLeave.reason }}\n                      </td>\n                      <td>\n                        <button\n                          nbButton\n                          size=\"small\"\n                          status=\"success\"\n                          (click)=\"openCommentDialog(employeeLeave._id, 'approved')\"\n                        >\n                          Approve\n                        </button>\n                      </td>\n\n                      <td>\n                        <button\n                          nbButton\n                          size=\"small\"\n                          status=\"danger\"\n                          (click)=\"openCommentDialog(employeeLeave._id, 'rejected')\"\n                        >\n                          Reject\n                        </button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <ng-template #noPendingLeaves>\n                <p class=\"text-center pt-5 pb-5\">No Pending Leaves</p>\n              </ng-template>\n            </ng-container>\n          </nb-tab>\n          <nb-tab tabTitle=\"approved\">\n            <ng-container *ngIf=\"!loading; else loadingData\">\n              <div\n                class=\"table-responsive\"\n                *ngIf=\"approvedLeaves.length > 0; else noApprovedLeaves\"\n              >\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Employee</th>\n                      <th>Date</th>\n                      <th>Leave Type</th>\n                      <th>Duration</th>\n                      <th>Reason</th>\n                      <th>Approved By</th>\n                      <th>Comment</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let employeeLeave of approvedLeaves; let i = index\">\n                      <td>{{ i + 1 }}</td>\n                      <td>\n                        {{ getEmployeeName(employeeLeave.employee) }}\n                      </td>\n                      <td>{{ dateService.formatDate(employeeLeave.date) }}</td>\n                      <td>{{ employeeLeave.leaveType }}</td>\n                      <td>\n                        {{\n                          getLeaveDuration(\n                            employeeLeave.duration,\n                            employeeLeave.startDate,\n                            employeeLeave.endDate,\n                            employeeLeave.hours\n                          )\n                        }}\n                      </td>\n                      <td>\n                        {{ employeeLeave.reason }}\n                      </td>\n\n                      <td>\n                        {{ employeeLeave.monitoredBy }}\n                        <br />\n                        on {{ dateService.formatDate(employeeLeave.monitoredDate) }}\n                      </td>\n\n                      <td>\n                        {{ employeeLeave.comment ? employeeLeave.comment : '--' }}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <ng-template #noApprovedLeaves>\n                <p class=\"text-center pt-5 pb-5\">No Approved Leaves</p>\n              </ng-template>\n            </ng-container>\n          </nb-tab>\n          <nb-tab tabTitle=\"Rejected\">\n            <ng-container *ngIf=\"!loading; else loadingData\">\n              <div\n                class=\"table-responsive\"\n                *ngIf=\"rejectedLeaves.length > 0; else noRejectedLeaves\"\n              >\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Employee</th>\n                      <th>Date</th>\n                      <th>Leave Type</th>\n                      <th>Duration</th>\n                      <th>Reason</th>\n                      <th>Rejected By</th>\n                      <th>Comment</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor=\"let employeeLeave of rejectedLeaves; let i = index\">\n                      <td>{{ i + 1 }}</td>\n                      <td>\n                        {{ getEmployeeName(employeeLeave.employee) }}\n                      </td>\n                      <td>{{ dateService.formatDate(employeeLeave.date) }}</td>\n                      <td>{{ employeeLeave.leaveType }}</td>\n                      <td>\n                        {{\n                          getLeaveDuration(\n                            employeeLeave.duration,\n                            employeeLeave.startDate,\n                            employeeLeave.endDate,\n                            employeeLeave.hours\n                          )\n                        }}\n                      </td>\n                      <td>\n                        {{ employeeLeave.reason }}\n                      </td>\n                      <td>\n                        {{ employeeLeave.monitoredBy }}\n                        <br />\n                        on {{ dateService.formatDate(employeeLeave.monitoredDate) }}\n                      </td>\n\n                      <td>\n                        {{ employeeLeave.comment ? employeeLeave.comment : '--' }}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <ng-template #noRejectedLeaves>\n                <p class=\"text-center pt-5 pb-5\">No Rejected Leaves</p>\n              </ng-template>\n            </ng-container>\n          </nb-tab>\n        </nb-tabset>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #loadingData>\n  <p class=\"text-center pt-5 pb-5\">Loading...</p>\n</ng-template>\n","import { LeaveComponent } from './leave.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeaveComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LeaveRoutingModule {}\n","import { LeaveCommentComponent } from './leave-comment/leave-comment.component';\nimport { EmployeeNameIdModel } from './../../../models/branch-employee.model';\nimport { BranchEmployeeService } from './../../../services/branch-employee.service';\nimport { NbToastrService, NbDialogService } from '@nebular/theme';\nimport { Month, DateService } from './../../../services/shared-services/date.service';\nimport { EmployeeLeaveService } from './../../../services/employee-leave.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BranchService } from './../../../services/branch.service';\nimport { EmployeeLeaveModel } from './../../../models/employee-leave.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-leave',\n  templateUrl: './leave.component.html',\n  styleUrls: ['./leave.component.scss'],\n})\nexport class LeaveComponent implements OnInit {\n  loading: boolean;\n\n  branchId: string;\n\n  branchEmployees: EmployeeNameIdModel[];\n  employee: string;\n\n  pendingLeaves: EmployeeLeaveModel[];\n  approvedLeaves: EmployeeLeaveModel[];\n  rejectedLeaves: EmployeeLeaveModel[];\n\n  months: Month[];\n  month: string;\n\n  years: string[];\n  year: string;\n\n  constructor(\n    private branchService: BranchService,\n    private branchEmployeeService: BranchEmployeeService,\n    public dateService: DateService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private employeeLeaveService: EmployeeLeaveService,\n    private toastrService: NbToastrService,\n    private dialogService: NbDialogService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.branchId = this.branchService.getBranchId();\n\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.branchEmployees = [];\n    this.employee = '';\n\n    this.approvedLeaves = [];\n    this.pendingLeaves = [];\n    this.rejectedLeaves = [];\n\n    this.months = this.dateService.getMonths();\n    this.years = this.dateService.getYears();\n\n    this.month = (this.dateService.getDate().getMonth() + 1).toString().padStart(2, '0');\n    this.year = this.years[this.years.length - 1];\n\n    this.branchEmployeeService.getBranchAllEmployeeNameIds(this.branchId).subscribe(\n      (branchEmployees: EmployeeNameIdModel[]) => {\n        this.branchEmployees = branchEmployees;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n      },\n    );\n\n    this.getBranchLeaves();\n  }\n\n  onSelectEmployee(employee: string) {\n    this.employee = employee;\n    this.getBranchLeaves();\n  }\n\n  onSelectMonth(month: string) {\n    this.month = month;\n    this.getBranchLeaves();\n  }\n\n  onSelectYear(year: string) {\n    this.year = year;\n    if (year === '') {\n      this.month = '';\n    }\n    this.getBranchLeaves();\n  }\n\n  getBranchLeaves() {\n    this.loading = true;\n    this.employeeLeaveService\n      .getBranchAllEmployeeLeaves(this.branchId, this.employee, this.month, this.year)\n      .subscribe(\n        (leaves: EmployeeLeaveModel[]) => {\n          this.pendingLeaves = leaves.filter(\n            (leave: EmployeeLeaveModel) => leave.status === 'pending',\n          );\n          this.approvedLeaves = leaves.filter(\n            (leave: EmployeeLeaveModel) => leave.status === 'approved',\n          );\n          this.rejectedLeaves = leaves.filter(\n            (leave: EmployeeLeaveModel) => leave.status === 'rejected',\n          );\n          this.loading = false;\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.loading = false;\n        },\n      );\n  }\n\n  getEmployeeName(employee: string) {\n    const myEmployee = this.branchEmployees.find(\n      (curEmployee: EmployeeNameIdModel) => curEmployee.employee === employee,\n    );\n\n    if (myEmployee) {\n      return myEmployee.name;\n    }\n\n    return '--';\n  }\n\n  getLeaveDuration(duration: string, startDate: string, endDate: string, hours: string) {\n    if (duration === 'single') {\n      return `Single Day Leave on ${this.dateService.formatDate(startDate)}`;\n    } else if (duration === 'multiple') {\n      return `Multiple Days Leave from ${this.dateService.formatDate(\n        startDate,\n      )} to ${this.dateService.formatDate(endDate)}`;\n    } else if ('hourly') {\n      return `Hourly Leave on ${this.dateService.formatDate(startDate)} for ${hours} Hours`;\n    } else {\n      return duration + ' leave';\n    }\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  changeEmployeeLeaveStatus(_id: string, status: string, comment: string) {\n    this.loading = true;\n    const employeeLeave = {\n      _id,\n      status,\n      comment,\n    };\n\n    this.employeeLeaveService.changeEmployeeLeaveStatus(employeeLeave).subscribe(\n      (res: any) => {\n        this.showToastr('top-right', 'success', `Leave ${status.toUpperCase()} Successfully!`);\n        this.getBranchLeaves();\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  openCommentDialog(id: string, status: string) {\n    this.dialogService\n      .open(LeaveCommentComponent, {\n        context: {},\n        closeOnBackdropClick: false,\n        closeOnEsc: false,\n      })\n      .onClose.subscribe((comment: string) => this.changeEmployeeLeaveStatus(id, status, comment));\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import {\n  NbCardModule,\n  NbSelectModule,\n  NbInputModule,\n  NbButtonModule,\n  NbTooltipModule,\n  NbIconModule,\n  NbTabsetModule,\n} from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LeaveRoutingModule } from './leave-routing.module';\nimport { LeaveComponent } from './leave.component';\nimport { LeaveCommentComponent } from './leave-comment/leave-comment.component';\n\n@NgModule({\n  declarations: [LeaveComponent, LeaveCommentComponent],\n  imports: [\n    CommonModule,\n    LeaveRoutingModule,\n    NbCardModule,\n    NbSelectModule,\n    NbInputModule,\n    NbButtonModule,\n    NbTooltipModule,\n    NbIconModule,\n    NbTabsetModule,\n  ],\n})\nexport class LeaveModule {}\n"]}