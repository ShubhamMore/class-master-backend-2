{"version":3,"sources":["webpack:///src/app/student/branch/course/assignment/assignment-submission/assignment-submission.component.html","webpack:///src/app/student/branch/course/assignment/assignment-submission/assignment-submission-routing.module.ts","webpack:///src/app/student/branch/course/assignment/assignment-submission/assignment-submission.component.ts","webpack:///src/app/student/branch/course/assignment/assignment-submission/assignment-submission.module.ts"],"names":["routes","path","component","AssignmentSubmissionComponent","branchService","dateService","assignmentSubmissionService","assignmentService","toastrService","router","route","this","loading","submit","invalidFile","fileName","branchId","getBranchId","getAssignmentData","subscribe","assignment","assignmentSubmissionDetailsForm","description","validators","required","getSubmissionOfAssignment","_id","assignmentSubmission","patchValue","error","showToastr","back","event","files","target","ext","name","substring","lastIndexOf","toLowerCase","indexOf","fileInput","nativeElement","value","uploadAssignmentSubmission","markAllAsTouched","invalid","stepper","next","FormData","append","updateAssignmentSubmission","res","submitAssignment","position","status","message","show","navigate","relativeTo","submitAssignmentDetails","onFilePicked","saveAssignment","loadChildren","then","m","PageNotFoundModule","redirectTo","AssignmentSubmissionRoutingModule","forChild","AssignmentSubmissionModule"],"mappings":"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","file":"x","sourcesContent":["<nb-card>\r\n  <nb-card-header>\r\n    <button class=\"float-right\" nbButton size=\"small\" status=\"warning\" (click)=\"back()\">\r\n      Back\r\n    </button>\r\n    <h3 class=\"\">\r\n      {{ !assignmentSubmission ? 'Submission' : 'Edit Submission' }}\r\n    </h3>\r\n  </nb-card-header>\r\n</nb-card>\r\n\r\n<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"table-responsive\">\r\n      <table class=\"table\">\r\n        <tbody>\r\n          <tr>\r\n            <th>Assignment Topic</th>\r\n            <th>:</th>\r\n            <th>{{ assignment.topic }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Assignment Description</th>\r\n            <th>:</th>\r\n            <th>{{ assignment.description }}</th>\r\n          </tr>\r\n          <tr>\r\n            <th>Assignment Submission Date</th>\r\n            <th>:</th>\r\n            <th>{{ dateService.formatDate(assignment.submissionDate) }}</th>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </nb-card-header>\r\n  <nb-card-body>\r\n    <nb-stepper #stepper [linear]=\"true\">\r\n      <nb-step [stepControl]=\"assignmentSubmissionDetailsForm\" label=\"Basic Details\">\r\n        <form\r\n          class=\"\"\r\n          (submit)=\"submitAssignmentDetails()\"\r\n          [formGroup]=\"assignmentSubmissionDetailsForm\"\r\n        >\r\n          <h6>Assignment Details:</h6>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-description\">Description:</label>\r\n                <textarea\r\n                  type=\"text\"\r\n                  nbInput\r\n                  id=\"input-description\"\r\n                  name=\"description\"\r\n                  formControlName=\"description\"\r\n                  placeholder=\"Description\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    assignmentSubmissionDetailsForm.get('description').touched\r\n                      ? assignmentSubmissionDetailsForm.get('description').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                ></textarea>\r\n\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    assignmentSubmissionDetailsForm.get('description').invalid &&\r\n                    assignmentSubmissionDetailsForm.get('description').touched\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"assignmentSubmissionDetailsForm.get('description').errors?.required\"\r\n                  >\r\n                    Assignment Description is required!\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-subject\">Attach File</label>\r\n                <input\r\n                  type=\"file\"\r\n                  nbInput\r\n                  id=\"input-file\"\r\n                  name=\"file\"\r\n                  placeholder=\"Select File\"\r\n                  fullWidth\r\n                  #filePicker\r\n                  (change)=\"onFilePicked($event)\"\r\n                  hidden\r\n                />\r\n\r\n                <nb-form-field>\r\n                  <button\r\n                    type=\"button\"\r\n                    nbPrefix\r\n                    nbButton\r\n                    size=\"small\"\r\n                    ghost\r\n                    (click)=\"filePicker.click()\"\r\n                    nbTooltip=\"Attach File\"\r\n                  >\r\n                    <nb-icon icon=\"attach-outline\" pack=\"eva\"> </nb-icon>\r\n                  </button>\r\n                  <input\r\n                    type=\"text\"\r\n                    nbInput\r\n                    fullWidth\r\n                    [value]=\"fileName\"\r\n                    placeholder=\"Attach File\"\r\n                    (click)=\"filePicker.click()\"\r\n                    disabled\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    nbSuffix\r\n                    nbButton\r\n                    size=\"small\"\r\n                    ghost\r\n                    (click)=\"clearFile()\"\r\n                    nbTooltip=\"Remove File\"\r\n                    *ngIf=\"uploadAssignmentSubmission || (!assignment && fileName)\"\r\n                  >\r\n                    <nb-icon icon=\"close-outline\" status=\"danger\" pack=\"eva\"> </nb-icon>\r\n                  </button>\r\n                </nb-form-field>\r\n\r\n                <ng-container *ngIf=\"invalidFile\">\r\n                  <p class=\"caption status-danger\">\r\n                    *Please Select a Valid File (*.pdf, '*.jpg, *.png, *.jpeg, *.mp4)\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- <div class=\"col-md-6\" *ngIf=\"assignment.submission && assignment.submission.fileName\">\r\n              <p class=\"pt-4\">\r\n                <a\r\n                  [href]=\"assignment.submission.secureUrl\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  >{{ assignment.submission.fileName }}</a\r\n                >\r\n              </p>\r\n            </div> -->\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 text-right\">\r\n              <button nbButton size=\"small\" type=\"submit\">\r\n                <span>Next</span>\r\n                <nb-icon icon=\"arrow-ios-forward-outline\"></nb-icon>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </nb-step>\r\n\r\n      <nb-step label=\"Submit\">\r\n        <div class=\"step-container\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-bordered\">\r\n              <tbody>\r\n                <tr>\r\n                  <th>Description</th>\r\n                  <td>{{ assignmentSubmissionDetailsForm.value.description }}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Attach File</th>\r\n                  <td>{{ uploadAssignmentSubmission ? fileName : '--' }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-6 text-left\">\r\n              <button class=\"\" nbButton size=\"small\" nbStepperPrevious [disabled]=\"submit\">\r\n                <nb-icon icon=\"arrow-ios-back-outline\"></nb-icon>\r\n                <span>prev</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"col-6 text-right\">\r\n              <button\r\n                nbButton\r\n                size=\"small\"\r\n                (click)=\"saveAssignment()\"\r\n                [disabled]=\"submit\"\r\n                [nbSpinner]=\"submit\"\r\n                nbSpinnerStatus=\"primary\"\r\n                nbSpinnerSize=\"small\"\r\n              >\r\n                <span>Submit</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nb-step>\r\n    </nb-stepper>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AssignmentSubmissionComponent } from './assignment-submission.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AssignmentSubmissionComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  { path: '**', redirectTo: 'page-not-found' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AssignmentSubmissionRoutingModule {}\n","import { DateService } from './../../../../../services/shared-services/date.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NbToastrService, NbStepperComponent } from '@nebular/theme';\nimport { BranchService } from './../../../../../services/branch.service';\nimport { AssignmentService } from './../../../../../services/assignment.service';\nimport { AssignmentModel } from './../../../../../models/assignment.model';\nimport { AssignmentSubmissionModel } from './../../../../../models/assignment-submission.model';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { AssignmentSubmissionService } from '../../../../../services/assignment-submission.service';\n\n@Component({\n  selector: 'ngx-assignment-submission',\n  templateUrl: './assignment-submission.component.html',\n  styleUrls: ['./assignment-submission.component.scss'],\n})\nexport class AssignmentSubmissionComponent implements OnInit, OnDestroy {\n  @ViewChild('stepper', { static: false }) stepper: NbStepperComponent;\n  @ViewChild('filePicker') private fileInput: any;\n\n  loading: boolean;\n  submit: boolean;\n\n  branchId: string;\n\n  assignmentSubmission: AssignmentSubmissionModel;\n  assignment: AssignmentModel;\n\n  assignmentSubmissionDetailsForm: FormGroup;\n\n  uploadAssignmentSubmission: File;\n  fileName: string;\n  invalidFile: boolean;\n\n  constructor(\n    private branchService: BranchService,\n    public dateService: DateService,\n    private assignmentSubmissionService: AssignmentSubmissionService,\n    private assignmentService: AssignmentService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.submit = false;\n\n    this.invalidFile = false;\n    this.fileName = null;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.assignmentService.getAssignmentData().subscribe((assignment: AssignmentModel) => {\n      this.assignment = assignment;\n    });\n\n    this.assignmentSubmissionDetailsForm = new FormGroup({\n      description: new FormControl(null, {\n        validators: [Validators.required],\n      }),\n    });\n\n    this.assignmentSubmissionService.getSubmissionOfAssignment(this.assignment._id).subscribe(\n      (assignmentSubmission: AssignmentSubmissionModel) => {\n        if (assignmentSubmission) {\n          this.assignmentSubmission = assignmentSubmission;\n\n          this.assignmentSubmissionDetailsForm.patchValue({\n            description: assignmentSubmission.description,\n          });\n\n          this.fileName = assignmentSubmission.fileName;\n        }\n\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  onFilePicked(event: Event) {\n    this.invalidFile = false;\n    const files = (event.target as HTMLInputElement).files;\n    const fileExt: string[] = ['pdf', 'jpg', 'png', 'jpeg', 'mp4'];\n    let ext: string = null;\n    ext = files[0].name.substring(files[0].name.lastIndexOf('.') + 1).toLowerCase();\n    if (!(fileExt.indexOf(ext) !== -1)) {\n      this.invalidFile = true;\n      this.fileName = files[0].name;\n      this.fileInput.nativeElement.value = '';\n      return;\n    }\n    this.invalidFile = false;\n    this.uploadAssignmentSubmission = files[0];\n    this.fileName = files[0].name;\n    this.fileInput.nativeElement.value = '';\n  }\n\n  clearFile() {\n    this.uploadAssignmentSubmission = null;\n    this.fileName = null;\n    this.fileInput.nativeElement.value = '';\n    this.invalidFile = false;\n  }\n\n  submitAssignmentDetails() {\n    this.assignmentSubmissionDetailsForm.markAllAsTouched();\n    if (this.assignmentSubmissionDetailsForm.invalid) {\n      this.showToastr('top-right', 'danger', 'Assignment details are required');\n      return;\n    } else if (!(this.assignmentSubmission || this.uploadAssignmentSubmission)) {\n      this.showToastr('top-right', 'danger', 'Please select a File');\n      this.invalidFile = true;\n      return;\n    } else if (this.invalidFile) {\n      this.showToastr('top-right', 'danger', 'Select Valid File');\n      return;\n    }\n    this.stepper.next();\n  }\n\n  saveAssignment() {\n    this.assignmentSubmissionDetailsForm.markAllAsTouched();\n\n    if (this.assignmentSubmissionDetailsForm.invalid) {\n      this.showToastr('top-right', 'danger', 'Assignment details are required');\n      return;\n    } else if (!(this.assignmentSubmission || this.uploadAssignmentSubmission)) {\n      this.showToastr('top-right', 'danger', 'Please select a File');\n      this.invalidFile = true;\n      return;\n    } else if (this.invalidFile) {\n      this.showToastr('top-right', 'danger', 'Select Valid File');\n      return;\n    }\n\n    this.submit = true;\n\n    const assignmentSubmission = new FormData();\n\n    assignmentSubmission.append('branch', this.branchId);\n    assignmentSubmission.append('assignment', this.assignment._id);\n    assignmentSubmission.append(\n      'description',\n      this.assignmentSubmissionDetailsForm.value.description,\n    );\n\n    if (this.uploadAssignmentSubmission) {\n      assignmentSubmission.append(\n        'assignmentSubmission',\n        this.uploadAssignmentSubmission,\n        this.uploadAssignmentSubmission.name.substring(\n          0,\n          this.uploadAssignmentSubmission.name.lastIndexOf('.'),\n        ),\n      );\n    }\n\n    if (!this.assignmentSubmission) {\n      this.assignmentSubmissionService.submitAssignment(assignmentSubmission).subscribe(\n        (res: any) => {\n          this.showToastr('top-right', 'success', 'New Assignment Added Successfully!');\n          this.back();\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.submit = false;\n        },\n      );\n    } else {\n      assignmentSubmission.append('_id', this.assignmentSubmission._id);\n\n      this.assignmentSubmissionService.updateAssignmentSubmission(assignmentSubmission).subscribe(\n        (res: any) => {\n          this.showToastr('top-right', 'success', 'Assignment Submission Updated Successfully!');\n          this.back();\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.submit = false;\n        },\n      );\n    }\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  ngOnDestroy() {}\n}\n","import { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AssignmentSubmissionRoutingModule } from './assignment-submission-routing.module';\nimport { AssignmentSubmissionComponent } from './assignment-submission.component';\nimport {\n  NbCardModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbIconModule,\n  NbInputModule,\n  NbTooltipModule,\n  NbFormFieldModule,\n  NbSpinnerModule,\n  NbStepperModule,\n} from '@nebular/theme';\n\n@NgModule({\n  declarations: [AssignmentSubmissionComponent],\n  imports: [\n    CommonModule,\n    AssignmentSubmissionRoutingModule,\n    NbCardModule,\n    NbButtonModule,\n    NbSelectModule,\n    NbIconModule,\n    NbInputModule,\n    NbTooltipModule,\n    NbFormFieldModule,\n    NbSpinnerModule,\n    NbStepperModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class AssignmentSubmissionModule {}\n"]}