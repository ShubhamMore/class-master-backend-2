{"version":3,"sources":["webpack:///src/app/student/branch/course/lecture/manage-lecture/manage-lecture.component.html","webpack:///src/app/student/branch/course/lecture/manage-lecture/manage-lecture-routing.module.ts","webpack:///src/app/student/branch/course/lecture/manage-lecture/manage-lecture.component.ts","webpack:///src/app/student/branch/course/lecture/manage-lecture/manage-lecture.module.ts"],"names":["routes","path","component","ManageLectureComponent","branchService","lectureService","studentBranchService","studentCourseService","dateService","router","route","toastrService","this","loading","branchId","getBranchId","setType","date","getSearchDate","getDateString","lectures","getStudentCourseData","subscribe","studentCourse","getLecture","back","navigate","relativeTo","startTime","endTime","formatTime","lecture","setLectureId","_id","setLectureData","getLecturesForStudent","category","course","batch","error","showToastr","setSearchDate","position","status","message","show","type","getType","queryParams","dateChanged","loadChildren","then","m","PageNotFoundModule","redirectTo","ManageLectureRoutingModule","forChild","ManageLectureModule"],"mappings":"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","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>\n          Lecture of <small>{{ studentCourse.batchName }}</small>\n        </h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <input type=\"date\" nbInput fullWidth [(ngModel)]=\"date\" (change)=\"dateChanged()\" />\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body *ngIf=\"!loading; else loadingTemplate\">\n    <div class=\"table-responsive\" *ngIf=\"lectures.length > 0; else noLecture\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>Time</th>\n            <th>Subject</th>\n            <th>Topic</th>\n            <th>Teacher</th>\n            <th>Study Material</th>\n            <th>Q&A</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let lecture of lectures\">\n            <td>{{ getTime(lecture.startTime, lecture.endTime) }}</td>\n            <td>{{ lecture.subject }}</td>\n            <td>{{ lecture.topic }}</td>\n            <td>By {{ lecture.teacher }}</td>\n            <td>\n              <button status=\"warning\" nbButton size=\"small\" (click)=\"lectureMaterial(lecture)\">\n                Study Material\n              </button>\n            </td>\n            <td>\n              <button status=\"success\" nbButton size=\"small\" (click)=\"questionAnswers(lecture)\">\n                Q&A\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <ng-template #noLecture>\n      <p class=\"text-center pt-5 pb-5\">No Lecture</p>\n    </ng-template>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #loadingTemplate>\n  <p class=\"text-center pt-5 pb-5\">Loading...</p>\n</ng-template>\n","import { ManageLectureComponent } from './manage-lecture.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageLectureComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  { path: '**', redirectTo: 'page-not-found' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageLectureRoutingModule {}\n","import { StudentBranchService } from './../../../student-branch.service';\nimport { StudentCourseService } from './../../../../../services/student-course.service';\nimport { StudentCourseModel } from './../../../../../models/student-course.model';\nimport { NbToastrService } from '@nebular/theme';\nimport { LectureService } from './../../../../../services/lecture.service';\nimport { ScheduleModel as LectureModel } from './../../../../../models/schedule.model';\nimport { DateService } from './../../../../../services/shared-services/date.service';\nimport { Component, OnInit } from '@angular/core';\nimport { BranchService } from './../../../../../services/branch.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'ngx-manage-lecture',\n  templateUrl: './manage-lecture.component.html',\n  styleUrls: ['./manage-lecture.component.scss'],\n})\nexport class ManageLectureComponent implements OnInit {\n  loading: boolean;\n  branchId: string;\n\n  lectures: LectureModel[];\n  studentCourse: StudentCourseModel;\n  date: string;\n\n  constructor(\n    private branchService: BranchService,\n    private lectureService: LectureService,\n    private studentBranchService: StudentBranchService,\n    private studentCourseService: StudentCourseService,\n    public dateService: DateService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: NbToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.router.navigate(['../'], { relativeTo: this.route });\n      return;\n    }\n\n    this.studentBranchService.setType('lecture');\n\n    this.date = this.lectureService.getSearchDate();\n    if (!this.date) {\n      this.date = this.dateService.getDateString();\n    }\n\n    this.lectures = [];\n\n    this.studentCourseService\n      .getStudentCourseData()\n      .subscribe((studentCourse: StudentCourseModel) => {\n        this.studentCourse = studentCourse;\n        if (studentCourse) {\n          this.getLecture();\n        } else {\n          this.back();\n        }\n      });\n  }\n\n  getTime(startTime: string, endTime: string) {\n    startTime = this.dateService.formatTime(startTime);\n    endTime = this.dateService.formatTime(endTime);\n    return startTime + ' - ' + endTime;\n  }\n\n  lectureMaterial(lecture: LectureModel) {\n    this.lectureService.setLectureId(lecture._id);\n    this.lectureService.setLectureData(lecture);\n    this.router.navigate(['../material'], {\n      relativeTo: this.route,\n    });\n  }\n\n  questionAnswers(lecture: LectureModel) {\n    this.lectureService.setLectureId(lecture._id);\n    this.lectureService.setLectureData(lecture);\n    this.router.navigate(['../q&a'], {\n      relativeTo: this.route,\n    });\n  }\n\n  getLecture() {\n    this.loading = true;\n\n    this.lectureService\n      .getLecturesForStudent(\n        this.branchId,\n        this.studentCourse.category,\n        this.studentCourse.course,\n        this.studentCourse.batch,\n        this.date,\n      )\n      .subscribe(\n        (lectures: LectureModel[]) => {\n          this.lectures = lectures;\n          this.loading = false;\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.loading = false;\n        },\n      );\n  }\n\n  dateChanged() {\n    if (this.date) {\n      this.lectureService.setSearchDate(this.date);\n      this.getLecture();\n    }\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  back() {\n    const type = this.studentBranchService.getType();\n    this.router.navigate(['../'], { relativeTo: this.route, queryParams: { type } });\n  }\n}\n","import { FormsModule } from '@angular/forms';\nimport {\n  NbCardModule,\n  NbIconModule,\n  NbButtonModule,\n  NbInputModule,\n  NbTooltipModule,\n  NbAccordionModule,\n  NbFormFieldModule,\n} from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageLectureRoutingModule } from './manage-lecture-routing.module';\nimport { ManageLectureComponent } from './manage-lecture.component';\n\n@NgModule({\n  declarations: [ManageLectureComponent],\n  imports: [\n    CommonModule,\n    ManageLectureRoutingModule,\n    NbCardModule,\n    NbTooltipModule,\n    NbIconModule,\n    NbButtonModule,\n    NbInputModule,\n    NbAccordionModule,\n    NbFormFieldModule,\n    FormsModule,\n  ],\n})\nexport class ManageLectureModule {}\n"]}