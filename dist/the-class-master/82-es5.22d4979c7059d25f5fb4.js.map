{"version":3,"sources":["webpack:///src/app/employee/branch/employee/employee.component.ts","webpack:///src/app/employee/branch/employee/employee.module.ts","webpack:///src/app/employee/branch/employee/employee-routing.module.ts","webpack:///src/app/employee/branch/employee/employee.component.html"],"names":["EmployeeComponent","EmployeeModule","EmployeeRoutingModule","routes","path","component","branchService","employeeService","router","route","this","loading","branchId","getBranchId","navigate","relativeTo","deleteEmployeeType","children","loadChildren","then","m","AddEmployeeModule","ManageEmployeeModule","ManageEmployeeSalaryModule","redirectTo","pathMatch","PageNotFoundModule","forChild"],"mappings":"saAUaA,ECAAC,ECmDAC,E,4DAzDPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WFGSL,EAAN,WAIL,WACUM,EACAC,EACAC,EACAC,aAHA,KAAAH,gBACA,KAAAC,kBACA,KAAAC,SACA,KAAAC,Q,UARL,O,EAAA,G,EAAA,uBAWL,WACEC,KAAKC,WACLD,KAAKE,SAAWF,KAAKJ,cAAcO,cAC9BH,KAAKE,UACRF,KAAKF,OAAOM,SAAS,CAAC,OAAQ,CAAEC,WAAYL,KAAKD,UAfhD,yBAoBL,WACEC,KAAKH,gBAAgBS,0B,2BArBlB,K,sCAAMhB,GAAiB,0J,mDAAjBA,EAAiB,wEGV9B,6C,kCDQIiB,SAAU,CACR,CACEb,KAAM,MACNc,aAAc,kBACZ,8DAA6CC,MAAMC,YAACA,OAAKA,EAAEC,uBAG/D,CACEjB,KAAM,OACNc,aAAc,kBACZ,8DAA6CC,MAAMC,YAACA,OAAKA,EAAEC,uBAG/D,CACEjB,KAAM,SACNc,aAAc,kBACZ,wDAAmDC,MAAMC,YAACA,OAAKA,EAAEE,0BAGrE,CACElB,KAAM,SACNc,aAAc,kBACZ,wDAAiEC,MAC9DC,YAACA,OAAKA,EAAEG,gCAIf,CACEnB,KAAM,GACNoB,WAAY,qBACZC,UAAW,QAGb,CACErB,KAAM,iBACNc,aAAc,kBACZ,iCAA+DC,MAC5DC,YAACA,OAAKA,EAAEM,wBAIf,CACEtB,KAAM,KACNoB,WAAY,iBACZC,UAAW,WASZ,IAAMvB,EAAN,yB,gDAAMA,I,+EAAAA,IAAqB,SAHvB,CAAC,IAAayB,SAASxB,IACtB,O,GDjDL,IAAMF,EAAN,yB,gDAAMA,I,+EAAAA,IAAc,SAFhB,CAAC,IAAc,M","file":"x","sourcesContent":["import { EmployeeService } from './../../../services/employee.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { BranchService } from './../../../services/branch.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'ngx-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.scss'],\n})\nexport class EmployeeComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  branchId: string;\n\n  constructor(\n    private branchService: BranchService,\n    private employeeService: EmployeeService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.router.navigate(['../'], { relativeTo: this.route });\n      return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.employeeService.deleteEmployeeType();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeRoutingModule } from './employee-routing.module';\nimport { EmployeeComponent } from './employee.component';\n\n@NgModule({\n  declarations: [EmployeeComponent],\n  imports: [CommonModule, EmployeeRoutingModule],\n})\nexport class EmployeeModule {}\n","import { EmployeeComponent } from './employee.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmployeeComponent,\n    children: [\n      {\n        path: 'add',\n        loadChildren: () =>\n          import('./add-employee/add-employee.module').then((m) => m.AddEmployeeModule),\n      },\n\n      {\n        path: 'edit',\n        loadChildren: () =>\n          import('./add-employee/add-employee.module').then((m) => m.AddEmployeeModule),\n      },\n\n      {\n        path: 'manage',\n        loadChildren: () =>\n          import('./manage-employee/manage-employee.module').then((m) => m.ManageEmployeeModule),\n      },\n\n      {\n        path: 'salary',\n        loadChildren: () =>\n          import('./manage-employee-salary/manage-employee-salary.module').then(\n            (m) => m.ManageEmployeeSalaryModule,\n          ),\n      },\n\n      {\n        path: '',\n        redirectTo: 'manage?type=active',\n        pathMatch: 'full',\n      },\n\n      {\n        path: 'page-not-found',\n        loadChildren: () =>\n          import('../../../shared/page-not-found/page-not-found.module').then(\n            (m) => m.PageNotFoundModule,\n          ),\n      },\n\n      {\n        path: '**',\n        redirectTo: 'page-not-found',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EmployeeRoutingModule {}\n","<router-outlet></router-outlet>\n"]}