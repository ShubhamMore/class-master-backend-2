{"version":3,"sources":["webpack:///src/app/student/branch/course/course-material/manage-course-material/manage-course-material.component.html","webpack:///src/app/student/branch/course/course-material/manage-course-material/manage-course-material-routing.module.ts","webpack:///src/app/student/branch/course/course-material/manage-course-material/manage-course-material.component.ts","webpack:///src/app/student/branch/course/course-material/manage-course-material/manage-course-material.module.ts"],"names":["ManageCourseMaterialComponent","ManageCourseMaterialModule","ManageCourseMaterialRoutingModule","routes","path","component","dateService","studentBranchService","branchService","batchService","toastrService","studentCourseService","courseMaterialService","router","route","this","loading","branchId","getBranchId","setType","getStudentCourseData","subscribe","studentCourse","showToastr","back","courseMaterials","subjects","subject","getBatchSubjects","course","batch","getStudentCourseMaterial","error","getCourseMaterialsForStudent","category","courseMaterial","setCourseMaterialId","_id","setCourseMaterialData","navigate","relativeTo","subjectId","find","curSubject","type","getType","queryParams","position","status","message","show","onSelectSubject","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","forChild"],"mappings":"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","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button class=\"float-right\" nbButton size=\"small\" status=\"warning\" (click)=\"back()\">\n          Back\n        </button>\n        <h3>Course Material</h3>\n      </div>\n    </div>\n  </nb-card-header>\n</nb-card>\n\n<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-4\"></div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-subject\"\n          name=\"subject\"\n          [selected]=\"subject\"\n          fullWidth\n          placeholder=\"All Subjects\"\n          (selectedChange)=\"onSelectSubject($event)\"\n        >\n          <nb-option value=\"\">All Subjects</nb-option>\n          <nb-option *ngFor=\"let subject of subjects\" [value]=\"subject._id\">{{\n            subject.subject\n          }}</nb-option>\n        </nb-select>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body class=\"body-container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ng-container *ngIf=\"!loading; else loadingData\">\n          <div class=\"table-responsive\" *ngIf=\"courseMaterials.length > 0; else noCourseMaterials\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Title</th>\n                  <th>Subject</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let courseMaterial of courseMaterials; let i = index\">\n                  <td>{{ i + 1 }}</td>\n                  <td>{{ courseMaterial.title }}</td>\n                  <td>{{ getSubject(courseMaterial.subject) }}</td>\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      status=\"info\"\n                      (click)=\"viewCourseMaterial(courseMaterial)\"\n                    >\n                      View\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ng-template #noCourseMaterials>\n            <p class=\"text-center pt-5 pb-5\">No Course Material Available</p>\n          </ng-template>\n        </ng-container>\n        <ng-template #loadingData>\n          <p class=\"text-center pt-5 pb-5\">Loading...</p>\n        </ng-template>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManageCourseMaterialComponent } from './manage-course-material.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageCourseMaterialComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageCourseMaterialRoutingModule {}\n","import { CourseMaterialModel } from './../../../../../models/course-material.model';\nimport { StudentBranchService } from './../../../student-branch.service';\nimport { CourseMaterialService } from './../../../../../services/course-material.service';\nimport { BatchService } from './../../../../../services/batch.service';\nimport { StudentCourseModel } from './../../../../../models/student-course.model';\nimport { SubjectModel } from './../../../../../models/course.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { StudentCourseService } from './../../../../../services/student-course.service';\nimport { NbToastrService } from '@nebular/theme';\nimport { BranchService } from './../../../../../services/branch.service';\nimport { DateService, Month } from './../../../../../services/shared-services/date.service';\nimport { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'ngx-manage-course-material',\n  templateUrl: './manage-course-material.component.html',\n  styleUrls: ['./manage-course-material.component.scss'],\n})\nexport class ManageCourseMaterialComponent implements OnInit {\n  private branchId: string;\n\n  private studentCourse: StudentCourseModel;\n\n  loading: boolean;\n\n  courseMaterials: CourseMaterialModel[];\n\n  subjects: SubjectModel[];\n  subject: string;\n\n  constructor(\n    public dateService: DateService,\n    private studentBranchService: StudentBranchService,\n    private branchService: BranchService,\n    private batchService: BatchService,\n    private toastrService: NbToastrService,\n    private studentCourseService: StudentCourseService,\n    private courseMaterialService: CourseMaterialService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.studentBranchService.setType('course');\n    this.studentCourseService\n      .getStudentCourseData()\n      .subscribe((studentCourse: StudentCourseModel) => {\n        this.studentCourse = studentCourse;\n      });\n\n    if (!this.studentCourse) {\n      this.showToastr('top-right', 'danger', 'Student Course Not Found');\n      this.back();\n      return;\n    }\n\n    this.courseMaterials = [];\n\n    this.subjects = [];\n    this.subject = '';\n\n    this.batchService\n      .getBatchSubjects(this.studentCourse.course, this.studentCourse.batch)\n      .subscribe(\n        (subjects: SubjectModel[]) => {\n          this.subjects = subjects;\n          this.getStudentCourseMaterial();\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.back();\n        },\n      );\n  }\n\n  onSelectSubject(subject: string) {\n    this.subject = subject;\n    this.getStudentCourseMaterial();\n  }\n\n  getStudentCourseMaterial() {\n    this.loading = true;\n    this.courseMaterialService\n      .getCourseMaterialsForStudent(\n        this.branchId,\n        this.studentCourse.category,\n        this.studentCourse.course,\n        this.subject,\n      )\n      .subscribe(\n        (courseMaterials: CourseMaterialModel[]) => {\n          this.courseMaterials = courseMaterials;\n          this.loading = false;\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.back();\n        },\n      );\n  }\n\n  viewCourseMaterial(courseMaterial: CourseMaterialModel) {\n    this.courseMaterialService.setCourseMaterialId(courseMaterial._id);\n    this.courseMaterialService.setCourseMaterialData(courseMaterial);\n    this.router.navigate(['../view'], { relativeTo: this.route });\n  }\n\n  getSubject(subjectId: string) {\n    const subject = this.subjects.find((curSubject: SubjectModel) => curSubject._id === subjectId);\n\n    if (subject) {\n      return subject.subject;\n    }\n\n    return '--';\n  }\n\n  back() {\n    const type = this.studentBranchService.getType();\n    this.router.navigate(['../../'], { relativeTo: this.route, queryParams: { type } });\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import {\n  NbCardModule,\n  NbButtonModule,\n  NbIconModule,\n  NbTooltipModule,\n  NbSelectModule,\n} from '@nebular/theme';\nimport { ManageCourseMaterialComponent } from './manage-course-material.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageCourseMaterialRoutingModule } from './manage-course-material-routing.module';\n\n@NgModule({\n  declarations: [ManageCourseMaterialComponent],\n  imports: [\n    CommonModule,\n    ManageCourseMaterialRoutingModule,\n    NbCardModule,\n    NbButtonModule,\n    NbIconModule,\n    NbTooltipModule,\n    NbSelectModule,\n  ],\n})\nexport class ManageCourseMaterialModule {}\n"]}