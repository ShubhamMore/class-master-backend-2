{"version":3,"sources":["webpack:///src/app/institute/branch/student/student-routing.module.ts","webpack:///src/app/institute/branch/student/student.component.ts","webpack:///src/app/institute/branch/student/student.component.html","webpack:///src/app/institute/branch/student/student.module.ts"],"names":["routes","path","component","StudentComponent","branchService","studentService","router","route","this","loading","branchId","getBranchId","navigate","relativeTo","deleteStudentType","children","loadChildren","then","m","AddStudentModule","ManageStudentModule","StudentCourseModule","redirectTo","pathMatch","PageNotFoundModule","StudentRoutingModule","forChild","StudentModule"],"mappings":"oNAIA,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCGG,M,MAAMC,EAIX,YACUC,EACAC,EACAC,EACAC,GAHA,KAAAH,gBACA,KAAAC,iBACA,KAAAC,SACA,KAAAC,QAGV,WACEC,KAAKC,SAAU,EACfD,KAAKE,SAAWF,KAAKJ,cAAcO,cAC9BH,KAAKE,UACRF,KAAKF,OAAOM,SAAS,CAAC,OAAQ,CAAEC,WAAYL,KAAKD,QAKrD,cACEC,KAAKH,eAAeS,qB,6CArBXX,GAAgB,0J,mDAAhBA,EAAgB,uECV7B,6C,kCDUO,GDFHY,SAAU,CACR,CACEd,KAAM,MACNe,aAAc,IACZ,+DAA2CC,KAAMC,GAAMA,EAAEC,mBAG7D,CACElB,KAAM,OACNe,aAAc,IACZ,+DAA2CC,KAAMC,GAAMA,EAAEC,mBAG7D,CACElB,KAAM,SACNe,aAAc,IACZ,yDAAiDC,KAAMC,GAAMA,EAAEE,sBAGnE,CACEnB,KAAM,SACNe,aAAc,IACZ,yDAAiDC,KAAMC,GAAMA,EAAEG,sBAGnE,CACEpB,KAAM,GACNqB,WAAY,qBACZC,UAAW,QAGb,CACEtB,KAAM,iBACNe,aAAc,IACZ,iCAA+DC,KAC5DC,GAAMA,EAAEM,qBAIf,CACEvB,KAAM,KACNqB,WAAY,iBACZC,UAAW,WASZ,Y,MAAME,G,yDAAAA,I,+EAAAA,IAAoB,SAHtB,CAAC,IAAaC,SAAS1B,IACtB,O,GAEL,GGjDA,Q,MAAM2B,G,yDAAAA,I,+EAAAA,IAAa,SAFf,CAAC,IAAc,M,GAEnB","file":"x","sourcesContent":["import { StudentComponent } from './student.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StudentComponent,\n    children: [\n      {\n        path: 'add',\n        loadChildren: () =>\n          import('./add-student/add-student.module').then((m) => m.AddStudentModule),\n      },\n\n      {\n        path: 'edit',\n        loadChildren: () =>\n          import('./add-student/add-student.module').then((m) => m.AddStudentModule),\n      },\n\n      {\n        path: 'manage',\n        loadChildren: () =>\n          import('./manage-student/manage-student.module').then((m) => m.ManageStudentModule),\n      },\n\n      {\n        path: 'course',\n        loadChildren: () =>\n          import('./student-course/student-course.module').then((m) => m.StudentCourseModule),\n      },\n\n      {\n        path: '',\n        redirectTo: 'manage?type=active',\n        pathMatch: 'full',\n      },\n\n      {\n        path: 'page-not-found',\n        loadChildren: () =>\n          import('../../../shared/page-not-found/page-not-found.module').then(\n            (m) => m.PageNotFoundModule,\n          ),\n      },\n\n      {\n        path: '**',\n        redirectTo: 'page-not-found',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StudentRoutingModule {}\n","import { StudentService } from './../../../services/student.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { BranchService } from './../../../services/branch.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'ngx-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.scss'],\n})\nexport class StudentComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  branchId: string;\n\n  constructor(\n    private branchService: BranchService,\n    private studentService: StudentService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.router.navigate(['../'], { relativeTo: this.route });\n      return;\n    }\n  }\n\n  ngOnDestroy() {\n    this.studentService.deleteStudentType();\n  }\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StudentRoutingModule } from './student-routing.module';\nimport { StudentComponent } from './student.component';\n\n@NgModule({\n  declarations: [StudentComponent],\n  imports: [CommonModule, StudentRoutingModule],\n})\nexport class StudentModule {}\n"]}