{"version":3,"sources":["webpack:///src/app/institute/branch/manage-branch/course/course-material/manage-course-material/manage-course-material.component.html","webpack:///src/app/institute/branch/manage-branch/course/course-material/manage-course-material/manage-course-material-routing.module.ts","webpack:///src/app/institute/branch/manage-branch/course/course-material/manage-course-material/manage-course-material.component.ts","webpack:///src/app/institute/branch/manage-branch/course/course-material/manage-course-material/manage-course-material.module.ts"],"names":["routes","path","component","ManageCourseMaterialComponent","branchService","courseService","courseMaterialService","storageService","toastrService","router","route","this","loading","branchId","getBranchId","subject","courseMaterials","getCourseData","subscribe","course","getCourseMaterials","back","fileSize","size","convertByteToUnit","value","toFixed","unit","basicDetails","category","_id","err","navigate","relativeTo","id","i","deleteCourseMaterial","res","splice","showToastr","courseMaterial","setCourseMaterialId","setCourseMaterialData","subjectId","subjects","find","curSubject","status","changeCourseMaterialStatus","position","message","show","addCourseMaterial","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","ManageCourseMaterialRoutingModule","forChild","ManageCourseMaterialModule"],"mappings":"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","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>\n          Course Material <small *ngIf=\"course\">of {{ course.basicDetails.courseName }}</small>\n        </h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button nbButton size=\"small\" status=\"primary\" fullWidth (click)=\"addCourseMaterial()\">\n          Add Course Material <nb-icon icon=\"plus-circle-outline\"></nb-icon>\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n</nb-card>\n\n<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9\">\n        <h5>Select Subject</h5>\n      </div>\n      <div class=\"col-md-3\">\n        <nb-select\n          id=\"select-subject\"\n          name=\"subject\"\n          [selected]=\"subject\"\n          fullWidth\n          placeholder=\"Select Subject\"\n          (selectedChange)=\"getCourseMaterials($event)\"\n          *ngIf=\"course\"\n        >\n          <nb-option value=\"\">All</nb-option>\n          <nb-option *ngFor=\"let subject of course.subjects\" [value]=\"subject._id\">{{\n            subject.subject\n          }}</nb-option>\n        </nb-select>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body class=\"body-container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ng-container *ngIf=\"!loading; else loadingData\">\n          <div class=\"table-responsive\" *ngIf=\"courseMaterials.length > 0; else CourseMaterials\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Title</th>\n                  <th>Subject</th>\n                  <th>File Size</th>\n                  <th colspan=\"3\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let courseMaterial of courseMaterials; let i = index\">\n                  <td>{{ i + 1 }}</td>\n                  <td>{{ courseMaterial.title }}</td>\n                  <td>{{ getSubject(courseMaterial.subject) }}</td>\n                  <td>{{ getFileSize(courseMaterial.fileSize) }}</td>\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      status=\"info\"\n                      (click)=\"viewCourseMaterial(courseMaterial)\"\n                    >\n                      View\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      [status]=\"!courseMaterial.status ? 'warning' : 'danger'\"\n                      (click)=\"\n                        changeCourseMaterialStatus(courseMaterial._id, !courseMaterial.status, i)\n                      \"\n                    >\n                      {{ !courseMaterial.status ? 'Activate' : 'Deactivate' }}\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      status=\"danger\"\n                      (click)=\"deleteCourseMaterial(courseMaterial._id)\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ng-template #CourseMaterials>\n            <p class=\"text-center pt-5 pb-5\">No Course Material Available</p>\n          </ng-template>\n        </ng-container>\n        <ng-template #loadingData>\n          <p class=\"text-center pt-5 pb-5\">Loading...</p>\n        </ng-template>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n","import { ManageCourseMaterialComponent } from './manage-course-material.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: ManageCourseMaterialComponent },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageCourseMaterialRoutingModule {}\n","import { StorageService } from './../../../../../../services/shared-services/storage.service';\nimport { CourseMaterialModel } from './../../../../../../models/course-material.model';\nimport { Component, OnInit } from '@angular/core';\nimport { CourseModel, SubjectModel } from './../../../../../../models/course.model';\nimport { CourseService } from './../../../../../../services/course.service';\nimport { CourseMaterialService } from './../../../../../../services/course-material.service';\nimport { BranchService } from './../../../../../../services/branch.service';\nimport { NbToastrService } from '@nebular/theme';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'ngx-manage-course-material',\n  templateUrl: './manage-course-material.component.html',\n  styleUrls: ['./manage-course-material.component.scss'],\n})\nexport class ManageCourseMaterialComponent implements OnInit {\n  loading: boolean;\n  branchId: string;\n  course: CourseModel;\n  subject: string;\n  courseMaterials: CourseMaterialModel[];\n\n  constructor(\n    private branchService: BranchService,\n    private courseService: CourseService,\n    private courseMaterialService: CourseMaterialService,\n    private storageService: StorageService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n\n      return;\n    }\n    this.subject = '';\n    this.courseMaterials = [];\n    this.courseService.getCourseData().subscribe((course: CourseModel) => {\n      this.course = course;\n      if (!this.course) {\n        this.back();\n        return;\n      }\n      this.getCourseMaterials(this.subject);\n    });\n  }\n\n  getFileSize(fileSize: number) {\n    const size = this.storageService.convertByteToUnit(fileSize);\n    return size.value.toFixed(1) + ' ' + size.unit;\n  }\n\n  getCourseMaterials(subject: string) {\n    this.loading = true;\n    this.subject = subject;\n    this.courseMaterialService\n      .getCourseMaterials(\n        this.branchId,\n        this.course.basicDetails.category,\n        this.course._id,\n        subject,\n      )\n      .subscribe(\n        (courseMaterials: CourseMaterialModel[]) => {\n          this.courseMaterials = courseMaterials;\n          this.loading = false;\n        },\n        (err: any) => {\n          this.loading = false;\n        },\n      );\n  }\n\n  addCourseMaterial() {\n    this.router.navigate(['../add'], { relativeTo: this.route });\n  }\n\n  deleteCourseMaterial(id: string, i: number) {\n    this.loading = true;\n    this.courseMaterialService.deleteCourseMaterial(id).subscribe(\n      (res: any) => {\n        this.courseMaterials.splice(i, 1);\n        this.showToastr('top-right', 'success', `CourseMaterial Deleted Successfully!`);\n        this.loading = false;\n      },\n      (err: any) => {\n        this.showToastr('top-right', 'danger', err);\n        this.loading = false;\n      },\n    );\n  }\n\n  viewCourseMaterial(courseMaterial: CourseMaterialModel) {\n    this.courseMaterialService.setCourseMaterialId(courseMaterial._id);\n    this.courseMaterialService.setCourseMaterialData(courseMaterial);\n    this.router.navigate(['../view'], { relativeTo: this.route });\n  }\n\n  getSubject(subjectId: string) {\n    const subject = this.course.subjects.find(\n      (curSubject: SubjectModel) => curSubject._id === subjectId,\n    );\n\n    if (subject) {\n      return subject.subject;\n    }\n\n    return '--';\n  }\n\n  changeCourseMaterialStatus(id: string, status: boolean, i: number) {\n    this.loading = true;\n    this.courseMaterialService.changeCourseMaterialStatus(id, status).subscribe(\n      (res: any) => {\n        this.courseMaterials[i].status = status;\n        this.showToastr(\n          'top-right',\n          'success',\n          `CourseMaterial ${status ? 'Activated' : 'Deactivated'} Successfully!`,\n        );\n        this.loading = false;\n      },\n      (err: any) => {\n        this.showToastr('top-right', 'danger', err);\n        this.loading = false;\n      },\n    );\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import {\n  NbCardModule,\n  NbButtonModule,\n  NbIconModule,\n  NbTooltipModule,\n  NbSelectModule,\n} from '@nebular/theme';\nimport { ManageCourseMaterialComponent } from './manage-course-material.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageCourseMaterialRoutingModule } from './manage-course-material-routing.module';\n\n@NgModule({\n  declarations: [ManageCourseMaterialComponent],\n  imports: [\n    CommonModule,\n    ManageCourseMaterialRoutingModule,\n    NbCardModule,\n    NbButtonModule,\n    NbIconModule,\n    NbTooltipModule,\n    NbSelectModule,\n  ],\n})\nexport class ManageCourseMaterialModule {}\n"]}