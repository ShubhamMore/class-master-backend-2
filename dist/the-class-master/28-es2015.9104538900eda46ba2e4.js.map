{"version":3,"sources":["webpack:///src/app/institute/branch/lecture/study-material/add-study-material/add-study-material.component.html","webpack:///src/app/institute/branch/lecture/study-material/add-study-material/add-study-material-routing.module.ts","webpack:///src/app/institute/branch/lecture/study-material/add-study-material/add-study-material.component.ts","webpack:///src/app/institute/branch/lecture/study-material/add-study-material/add-study-material.module.ts"],"names":["routes","path","component","AddStudyMaterialComponent","branchService","lectureService","lectureMaterialService","toastrService","router","location","route","this","loading","submit","invalidFile","branchId","getBranchId","showToastr","cancel","uploadLectureMaterials","getLectureData","subscribe","lecture","event","files","target","fileExt","ext","n","length","i","name","substring","lastIndexOf","toLowerCase","indexOf","fileInput","nativeElement","value","push","lectureMaterials","FormData","append","category","course","batch","_id","newLectureMaterials","res","totalFiles","overStorageFiles","error","index","splice","position","status","message","show","navigate","relativeTo","loadChildren","then","m","PageNotFoundModule","redirectTo","AddStudyMaterialRoutingModule","forChild","AddStudyMaterialModule"],"mappings":"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","file":"x","sourcesContent":["<nb-card *ngIf=\"!loading\">\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>Add Material</h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button\n          nbButton\n          size=\"small\"\n          type=\"button\"\n          fullWidth\n          status=\"primary\"\n          [disabled]=\"submit\"\n          [nbSpinner]=\"submit\"\n          nbSpinnerStatus=\"primary\"\n          nbSpinnerSize=\"small\"\n          (click)=\"saveLectureMaterial()\"\n        >\n          Upload&nbsp;\n          <nb-icon icon=\"arrow-circle-up-outline\"></nb-icon>\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"form-control-group\">\n          <label class=\"label\" for=\"input-subject\"\n            >Click on Following Button to Select Lecture Material Files</label\n          >\n          <input\n            type=\"file\"\n            nbInput\n            id=\"input-file\"\n            name=\"file\"\n            placeholder=\"Select File\"\n            fullWidth\n            #filePicker\n            (change)=\"onFilePicked($event)\"\n            multiple\n            hidden\n          />\n          <button\n            nbButton\n            size=\"small\"\n            type=\"button\"\n            fullWidth\n            status=\"warning\"\n            id=\"files\"\n            (click)=\"filePicker.click()\"\n          >\n            Click Here to Pick Files\n          </button>\n\n          <ng-container *ngIf=\"invalidFile\">\n            <p class=\"caption status-danger\">\n              *Please Select a Valid File (*.pdf, '*.jpg, *.png, *.jpeg, *.mp4)\n            </p>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n\n    <hr />\n\n    <h4 class=\"text-center\">File/s To Upload</h4>\n\n    <div class=\"row\">\n      <div class=\"col-md-10 mx-auto\">\n        <div class=\"table-responsive\" *ngIf=\"uploadLectureMaterials.length > 0; else noFiles\">\n          <table class=\"table table-sm table-hover\">\n            <thead class=\"table-heading\">\n              <tr class=\"table-row\">\n                <th class=\"table-heading-data\">ID</th>\n                <th class=\"table-heading-data\">Content File</th>\n                <th class=\"table-heading-data text-center\">Remove</th>\n              </tr>\n            </thead>\n            <tbody class=\"table-body\">\n              <tr class=\"table-row\" *ngFor=\"let file of uploadLectureMaterials; let i = index\">\n                <td class=\"table-data\">{{ i + 1 }}</td>\n                <td class=\"table-data\">\n                  <span class=\"mr-2\">\n                    {{ file.name }}\n                  </span>\n                </td>\n                <td class=\"table-data text-center\">\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"tiny\"\n                    shape=\"round\"\n                    (click)=\"removeFile(i)\"\n                    status=\"danger\"\n                    nbTooltip=\"Remove {{ file.name }}\"\n                  >\n                    <nb-icon icon=\"close-outline\"></nb-icon>\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <ng-template #noFiles> No Files Selected, Please Select Files to Upload </ng-template>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n","import { AddStudyMaterialComponent } from './add-study-material.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddStudyMaterialComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  { path: '**', redirectTo: 'page-not-found' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddStudyMaterialRoutingModule {}\n","import { LectureMaterialService } from '../../../../../services/lecture-material.service';\nimport { ScheduleModel as LectureModel } from '../../../../../models/schedule.model';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { LectureService } from '../../../../../services/lecture.service';\nimport { NbToastrService } from '@nebular/theme';\nimport { BranchService } from '../../../../../services/branch.service';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'ngx-add-study-material',\n  templateUrl: './add-study-material.component.html',\n  styleUrls: ['./add-study-material.component.scss'],\n})\nexport class AddStudyMaterialComponent implements OnInit {\n  @ViewChild('filePicker') private fileInput: any;\n  uploadLectureMaterials: File[];\n\n  loading: boolean;\n  submit: boolean;\n  invalidFile: boolean;\n\n  private branchId: string;\n  lecture: LectureModel;\n\n  constructor(\n    private branchService: BranchService,\n    private lectureService: LectureService,\n    private lectureMaterialService: LectureMaterialService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private location: Location,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n    this.submit = false;\n    this.invalidFile = false;\n\n    this.branchId = this.branchService.getBranchId();\n\n    if (!this.branchId) {\n      this.showToastr('top-right', 'danger', 'Invalid Lecture');\n      this.cancel();\n      return;\n    }\n\n    this.uploadLectureMaterials = [];\n\n    this.lectureService.getLectureData().subscribe((lecture: LectureModel) => {\n      if (!lecture) {\n        // this.showToastr('top-right', 'danger', 'Lecture Not Available');\n        this.cancel();\n        return;\n      }\n      this.lecture = lecture;\n      this.loading = false;\n    });\n  }\n\n  onFilePicked(event: Event) {\n    this.invalidFile = false;\n    const files = (event.target as HTMLInputElement).files;\n    const fileExt: string[] = ['pdf', 'jpg', 'png', 'jpeg', 'mp4'];\n    let ext: string = null;\n    const n: number = files.length;\n    for (let i = 0; i < n; i++) {\n      ext = files[i].name.substring(files[i].name.lastIndexOf('.') + 1).toLowerCase();\n      if (!(fileExt.indexOf(ext) !== -1)) {\n        this.invalidFile = true;\n        this.fileInput.nativeElement.value = '';\n        return;\n      }\n    }\n    this.invalidFile = false;\n    for (let i = 0; i < n; i++) {\n      this.uploadLectureMaterials.push(files[i]);\n    }\n    this.fileInput.nativeElement.value = '';\n  }\n\n  saveLectureMaterial() {\n    if (this.uploadLectureMaterials.length < 1) {\n      this.showToastr('top-right', 'danger', 'Select at least 1 Lecture material File');\n      this.invalidFile = true;\n      return;\n    }\n\n    this.submit = true;\n    this.invalidFile = false;\n\n    const lectureMaterials = new FormData();\n    lectureMaterials.append('branch', this.branchId);\n    lectureMaterials.append('category', this.lecture.category);\n    lectureMaterials.append('course', this.lecture.course);\n    lectureMaterials.append('batch', this.lecture.batch);\n    lectureMaterials.append('lecture', this.lecture._id);\n    for (let i = 0; i < this.uploadLectureMaterials.length; i++) {\n      lectureMaterials.append(\n        'material',\n        this.uploadLectureMaterials[i],\n        this.uploadLectureMaterials[i].name.substring(\n          0,\n          this.uploadLectureMaterials[i].name.lastIndexOf('.'),\n        ),\n      );\n    }\n\n    this.lectureMaterialService.newLectureMaterials(lectureMaterials).subscribe(\n      (res: any) => {\n        const totalFiles = this.uploadLectureMaterials.length;\n        const overStorageFiles = res.overStorageFiles;\n        if (overStorageFiles < totalFiles) {\n          this.showToastr(\n            'top-right',\n            'success',\n            `${totalFiles - overStorageFiles} file${\n              totalFiles - overStorageFiles === 1 ? ' is' : 's are'\n            } Uploaded Successfully!`,\n          );\n        }\n\n        if (overStorageFiles > 0) {\n          this.showToastr(\n            'top-right',\n            'danger',\n            `Storage is full, ${overStorageFiles} file${\n              overStorageFiles === 1 ? ' is' : 's are'\n            } not Uploaded`,\n          );\n        }\n        this.uploadLectureMaterials = [];\n        this.submit = false;\n        this.cancel();\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.submit = false;\n      },\n    );\n  }\n\n  removeFile(index: number) {\n    this.uploadLectureMaterials.splice(index, 1);\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  cancel() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n}\n","import {\n  NbCardModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbSpinnerModule,\n  NbIconModule,\n  NbTooltipModule,\n} from '@nebular/theme';\nimport { AddStudyMaterialComponent } from './add-study-material.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AddStudyMaterialRoutingModule } from './add-study-material-routing.module';\n\n@NgModule({\n  declarations: [AddStudyMaterialComponent],\n  imports: [\n    CommonModule,\n    AddStudyMaterialRoutingModule,\n    NbCardModule,\n    NbButtonModule,\n    NbSpinnerModule,\n    NbSelectModule,\n    NbIconModule,\n    NbTooltipModule,\n  ],\n})\nexport class AddStudyMaterialModule {}\n"]}