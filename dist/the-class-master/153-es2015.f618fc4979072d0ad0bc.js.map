{"version":3,"sources":["webpack:///src/app/institute/branch/assignment/manage-assignment/manage-assignment.component.html","webpack:///src/app/institute/branch/assignment/manage-assignment/manage-assignment-routing.module.ts","webpack:///src/app/institute/branch/assignment/manage-assignment/manage-assignment.component.ts","webpack:///src/app/institute/branch/assignment/manage-assignment/manage-assignment.module.ts"],"names":["routes","path","component","ManageAssignmentComponent","branchService","courseService","batchService","subjectService","assignmentService","dateService","router","route","toastrService","this","loading","branchId","getBranchId","subjects","subject","getCategoryData","subscribe","category","getCourseData","course","getBatchData","batch","getBatchSubjects","_id","setSubjectsData","error","showToastr","months","getMonths","years","getYears","month","getDate","getMonth","toString","padStart","year","length","getAssignments","back","assignments","navigate","relativeTo","assignment","setAssignmentId","setAssignmentData","queryParams","mode","id","deleteAssignment","res","index","findIndex","splice","find","curSubject","publicId","i","deleteAssignmentAttachment","fileName","fileSize","fileType","secureUrl","position","status","message","show","addAssignment","onSelectSubject","onSelectYear","onSelectMonth","loadChildren","then","m","PageNotFoundModule","redirectTo","ManageAssignmentRoutingModule","forChild","ManageAssignmentModule"],"mappings":"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","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>Assignments</h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button\n          class=\"float-right\"\n          nbButton\n          size=\"small\"\n          status=\"primary\"\n          fullWidth\n          (click)=\"addAssignment()\"\n        >\n          Add Assignment\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n</nb-card>\n\n<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-3 col-sm-4\"></div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-subject\"\n          name=\"subject\"\n          [selected]=\"subject\"\n          fullWidth\n          placeholder=\"All Subjects\"\n          (selectedChange)=\"onSelectSubject($event)\"\n        >\n          <nb-option value=\"\">All Subjects</nb-option>\n          <nb-option *ngFor=\"let subject of subjects\" [value]=\"subject._id\">{{\n            subject.subject\n          }}</nb-option>\n        </nb-select>\n      </div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-year\"\n          name=\"year\"\n          [selected]=\"year\"\n          fullWidth\n          placeholder=\"All Years\"\n          (selectedChange)=\"onSelectYear($event)\"\n        >\n          <nb-option value=\"\">All Years</nb-option>\n          <nb-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</nb-option>\n        </nb-select>\n      </div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-month\"\n          name=\"month\"\n          [selected]=\"month\"\n          fullWidth\n          placeholder=\"All Months\"\n          (selectedChange)=\"onSelectMonth($event)\"\n        >\n          <nb-option value=\"\">All Months</nb-option>\n          <nb-option *ngFor=\"let month of months\" [value]=\"month.monthNo\">{{\n            month.month\n          }}</nb-option>\n        </nb-select>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body class=\"body-container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ng-container *ngIf=\"!loading; else loadingData\">\n          <div class=\"table-responsive\" *ngIf=\"assignments.length > 0; else noAssignments\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Date</th>\n                  <th>Subject</th>\n                  <th>Submission Date</th>\n                  <th>Total Grades</th>\n                  <th>Generated By</th>\n                  <th>Attachment</th>\n                  <th colspan=\"3\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let assignment of assignments; let i = index\">\n                  <td>{{ i + 1 }}</td>\n                  <td>{{ dateService.formatDate(assignment.date) }}</td>\n                  <td>{{ getSubjectName(assignment.subject) }}</td>\n                  <td>{{ dateService.formatDate(assignment.submissionDate) }}</td>\n                  <td>{{ assignment.totalGrades }}</td>\n                  <td>{{ assignment.generatedByName }}</td>\n                  <td>\n                    <ng-container *ngIf=\"assignment.fileName; else noAttachment\">\n                      <a\n                        [href]=\"assignment.secureUrl\"\n                        target=\"_blank\"\n                        [download]=\"assignment.fileName\"\n                        >{{ assignment.fileName }}</a\n                      >\n                      <nb-icon\n                        class=\"float-right pointer\"\n                        icon=\"close-outline\"\n                        status=\"danger\"\n                        nbToolTip=\"Delete Attachment\"\n                        (click)=\"deleteAssignmentAttachment(assignment._id, assignment.publicId, i)\"\n                      ></nb-icon>\n                    </ng-container>\n                  </td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      nbButton\n                      size=\"small\"\n                      status=\"primary\"\n                      (click)=\"assignmentSubmissions(assignment)\"\n                    >\n                      Submissions\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      nbButton\n                      size=\"small\"\n                      status=\"basic\"\n                      (click)=\"editAssignment(assignment)\"\n                    >\n                      Edit\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      nbButton\n                      size=\"small\"\n                      status=\"danger\"\n                      (click)=\"deleteAssignment(assignment._id)\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ng-template #noAssignments>\n            <p class=\"text-center pt-5 pb-5\">No Assignment Available</p>\n          </ng-template>\n        </ng-container>\n        <ng-template #loadingData>\n          <p class=\"text-center pt-5 pb-5\">Loading...</p>\n        </ng-template>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #noAttachment>\n  <span>--</span>\n</ng-template>\n","import { ManageAssignmentComponent } from './manage-assignment.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageAssignmentComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  { path: '**', redirectTo: 'page-not-found' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageAssignmentRoutingModule {}\n","import { SubjectService } from './../../../../services/subject.service';\nimport { NbToastrService } from '@nebular/theme';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DateService, Month } from './../../../../services/shared-services/date.service';\nimport { AssignmentService } from './../../../../services/assignment.service';\nimport { BatchService } from './../../../../services/batch.service';\nimport { CourseService } from './../../../../services/course.service';\nimport { BranchService } from './../../../../services/branch.service';\nimport { AssignmentModel } from './../../../../models/assignment.model';\nimport { CategoryModel } from './../../../../models/branch.model';\nimport { CourseModel, SubjectModel } from './../../../../models/course.model';\nimport { BatchModel } from './../../../../models/batch.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-manage-assignment',\n  templateUrl: './manage-assignment.component.html',\n  styleUrls: ['./manage-assignment.component.scss'],\n})\nexport class ManageAssignmentComponent implements OnInit {\n  loading: boolean;\n\n  branchId: string;\n\n  batch: BatchModel;\n  course: CourseModel;\n  category: CategoryModel;\n\n  months: Month[];\n  month: string;\n\n  years: string[];\n  year: string;\n\n  subjects: SubjectModel[];\n  subject: string;\n\n  assignments: AssignmentModel[];\n\n  constructor(\n    private branchService: BranchService,\n    private courseService: CourseService,\n    private batchService: BatchService,\n    private subjectService: SubjectService,\n    private assignmentService: AssignmentService,\n    public dateService: DateService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: NbToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.subjects = [];\n    this.subject = '';\n\n    this.branchService.getCategoryData().subscribe((category: CategoryModel) => {\n      this.category = category;\n    });\n\n    this.courseService.getCourseData().subscribe((course: CourseModel) => {\n      if (course) {\n        this.course = course;\n        this.batchService.getBatchData().subscribe((batch: BatchModel) => {\n          if (batch) {\n            this.batch = batch;\n            this.batchService.getBatchSubjects(this.course._id, this.batch._id).subscribe(\n              (subjects: SubjectModel[]) => {\n                this.subjects = subjects;\n                this.subjectService.setSubjectsData(subjects);\n              },\n              (error: any) => {\n                this.showToastr('top-right', 'danger', error);\n              },\n            );\n          }\n        });\n      }\n    });\n\n    this.months = this.dateService.getMonths();\n    this.years = this.dateService.getYears();\n\n    this.month = (this.dateService.getDate().getMonth() + 1).toString().padStart(2, '0');\n    this.year = this.years[this.years.length - 1];\n\n    this.getAssignments();\n  }\n\n  onSelectSubject(subject: string) {\n    this.subject = subject;\n    this.getAssignments();\n  }\n\n  onSelectMonth(month: string) {\n    this.month = month;\n    this.getAssignments();\n  }\n\n  onSelectYear(year: string) {\n    this.year = year;\n    if (year === '') {\n      this.month = '';\n    }\n    this.getAssignments();\n  }\n\n  getAssignments() {\n    this.loading = true;\n    this.assignmentService\n      .getAssignments(\n        this.branchId,\n        this.category._id,\n        this.course._id,\n        this.batch._id,\n        this.subject,\n        this.month,\n        this.year,\n      )\n      .subscribe(\n        (assignments: AssignmentModel[]) => {\n          this.assignments = assignments;\n          this.loading = false;\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.loading = false;\n        },\n      );\n  }\n\n  addAssignment() {\n    this.router.navigate(['../add'], { relativeTo: this.route });\n  }\n\n  editAssignment(assignment: AssignmentModel) {\n    this.assignmentService.setAssignmentId(assignment._id);\n    this.assignmentService.setAssignmentData(assignment);\n    this.router.navigate(['../edit'], { relativeTo: this.route, queryParams: { mode: 'edit' } });\n  }\n\n  assignmentSubmissions(assignment: AssignmentModel) {\n    this.assignmentService.setAssignmentId(assignment._id);\n    this.assignmentService.setAssignmentData(assignment);\n    this.router.navigate(['../submission'], { relativeTo: this.route });\n  }\n\n  deleteAssignment(id: string) {\n    this.loading = true;\n    this.assignmentService.deleteAssignment(id).subscribe(\n      (res: any) => {\n        const index = this.assignments.findIndex(\n          (assignment: AssignmentModel) => assignment._id === id,\n        );\n        if (index >= 0) {\n          this.assignments.splice(index, 1);\n        }\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  getSubjectName(id: string) {\n    const subject = this.subjects.find((curSubject: SubjectModel) => curSubject._id === id);\n    if (subject) {\n      return subject.subject;\n    }\n\n    return '--';\n  }\n\n  deleteAssignmentAttachment(id: string, publicId: string, i: number) {\n    this.assignmentService.deleteAssignmentAttachment(id, publicId).subscribe(\n      (res: any) => {\n        this.assignments[i].fileName = null;\n        this.assignments[i].fileSize = null;\n        this.assignments[i].fileType = null;\n        this.assignments[i].secureUrl = null;\n        this.assignments[i].publicId = null;\n        this.showToastr('top-right', 'success', 'Attachment Deleted Successfully!');\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n      },\n    );\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n}\n","import {\n  NbCardModule,\n  NbSelectModule,\n  NbButtonModule,\n  NbIconModule,\n  NbTooltipModule,\n} from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageAssignmentRoutingModule } from './manage-assignment-routing.module';\nimport { ManageAssignmentComponent } from './manage-assignment.component';\n\n@NgModule({\n  declarations: [ManageAssignmentComponent],\n  imports: [\n    CommonModule,\n    ManageAssignmentRoutingModule,\n    NbCardModule,\n    NbSelectModule,\n    NbButtonModule,\n    NbIconModule,\n    NbTooltipModule,\n  ],\n})\nexport class ManageAssignmentModule {}\n"]}