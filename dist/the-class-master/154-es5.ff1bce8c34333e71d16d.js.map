{"version":3,"sources":["webpack:///src/app/institute/branch/branch-header/branch-header.component.ts","webpack:///src/app/institute/branch/branch.component.html","webpack:///src/app/institute/branch/branch-routing.module.ts","webpack:///src/app/institute/branch/branch.component.ts","webpack:///src/app/institute/branch/branch.module.ts"],"names":["BranchHeaderComponent","branchService","router","route","this","loading","branchId","getBranchId","getBranch","subscribe","branch","setBranchData","err","navigate","relativeTo","BranchComponent","BranchModule","BranchRoutingModule","routes","path","component","toastrService","checkBranchStatus","branchStatus","activated","showToastr","error","position","status","message","show","deleteBranchId","deleteBranchData","children","loadChildren","then","m","DashboardModule","ManageBranchModule","ScheduleModule","LectureModule","AssignmentModule","LeadModule","ExamModule","BudgetModule","StorageModule","SmsModule","StudentModule","StudentsReportModule","EmployeeModule","LeaveModule","redirectTo","pathMatch","PageNotFoundModule","forChild"],"mappings":"8dAUaA,E,4DAAN,IAAMA,EAAN,WAIL,WACUC,EACAC,EACAC,aAFA,KAAAF,gBACA,KAAAC,SACA,KAAAC,QAPL,kCAUL,WAAU,WACRC,KAAKC,WACLD,KAAKE,SAAWF,KAAKH,cAAcM,cAC9BH,KAAKE,SAKVF,KAAKH,cAAcO,UAAUJ,KAAKE,UAAUG,WACzCC,YACCN,EAAKM,OAASA,EACdN,EAAKH,cAAcU,cAAcD,GACjCN,EAAKC,cAENO,gBAVDR,KAAKF,OAAOW,SAAS,CAAC,qBAAsB,CAAEC,WAAYV,KAAKD,YAd9D,M,oCAAMH,GAAqB,oH,mDAArBA,EAAqB,wF,wBCTlC,4CCGA,ICOae,ECCAC,EFiGAC,EAzGPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WCISL,EAAN,WAIL,WACUd,EACAoB,EACAnB,EACAC,aAHA,KAAAF,gBACA,KAAAoB,gBACA,KAAAnB,SACA,KAAAC,QARL,kCAWL,WAAU,WACRC,KAAKC,WAELD,KAAKE,SAAWF,KAAKH,cAAcM,cAC9BH,KAAKE,SAKVF,KAAKH,cAAcqB,kBAAkBlB,KAAKE,UAAUG,WACjDc,YACKA,EAAaC,UACfpB,EAAKC,YAELD,EAAKqB,WAAW,YAAa,SAAU,0BACvCrB,EAAKF,OAAOW,SAAS,CAAC,qBAAsB,CAAEC,WAAYV,EAAKD,YAGlEuB,YACCtB,EAAKqB,WAAW,YAAa,SAAUC,GACvCtB,EAAKF,OAAOW,SAAS,CAAC,qBAAsB,CAAEC,WAAYV,EAAKD,WAfjEC,KAAKF,OAAOW,SAAS,CAAC,qBAAsB,CAAEC,WAAYV,KAAKD,UAhB9D,wBAoCG,SAAWwB,EAAeC,EAAaC,GAC7CzB,KAAKiB,cAAcS,KAAKF,EAAQC,EAAS,CACvCF,WACAC,aAvCC,yBA2CL,WACExB,KAAKH,cAAc8B,iBACnB3B,KAAKH,cAAc+B,uBA7ChB,K,sCAAMjB,GAAe,2J,mDAAfA,EAAe,2FFX5B,gDACA,sD,MAAe,2E,wCCOXkB,SAAU,CACR,CACEd,KAAM,YACNe,aAAc,kBAAM,gEAAuCC,MAAMC,YAACA,OAAKA,EAAEC,qBAG3E,CACElB,KAAM,gBACNe,aAAc,kBACZ,mCAA+CC,MAAMC,YAACA,OAAKA,EAAEE,wBAGjE,CACEnB,KAAM,WACNe,aAAc,kBAAM,yDAAqCC,MAAMC,YAACA,OAAKA,EAAEG,oBAGzE,CACEpB,KAAM,UACNe,aAAc,kBAAM,yDAAmCC,MAAMC,YAACA,OAAKA,EAAEI,mBAGvE,CACErB,KAAM,aACNe,aAAc,kBACZ,yDAAyCC,MAAMC,YAACA,OAAKA,EAAEK,sBAG3D,CACEtB,KAAM,OACNe,aAAc,kBAAM,yDAA6BC,MAAMC,YAACA,OAAKA,EAAEM,gBAGjE,CACEvB,KAAM,OACNe,aAAc,kBAAM,mCAA6BC,MAAMC,YAACA,OAAKA,EAAEO,gBAGjE,CACExB,KAAM,SACNe,aAAc,kBAAM,mCAAiCC,MAAMC,YAACA,OAAKA,EAAEQ,kBAGrE,CACEzB,KAAM,UACNe,aAAc,kBAAM,yDAAmCC,MAAMC,YAACA,OAAKA,EAAES,mBAGvE,CACE1B,KAAM,MACNe,aAAc,kBAAM,yDAA2BC,MAAMC,YAACA,OAAKA,EAAEU,eAG/D,CACE3B,KAAM,UACNe,aAAc,kBAAM,yDAAmCC,MAAMC,YAACA,OAAKA,EAAEW,mBAGvE,CACE5B,KAAM,kBACNe,aAAc,kBACZ,mCAAmDC,MAAMC,YAACA,OAAKA,EAAEY,0BAGrE,CACE7B,KAAM,WACNe,aAAc,kBAAM,yDAAqCC,MAAMC,YAACA,OAAKA,EAAEa,oBAGzE,CACE9B,KAAM,QACNe,aAAc,kBAAM,yDAA+BC,MAAMC,YAACA,OAAKA,EAAEc,iBAGnE,CACE/B,KAAM,GACNgC,WAAY,YACZC,UAAW,QAGb,CACEjC,KAAM,iBACNe,aAAc,kBACZ,iCAA4DC,MACzDC,YAACA,OAAKA,EAAEiB,wBAIf,CACElC,KAAM,KACNgC,WAAY,iBACZC,UAAW,WAUZ,IAAMnC,EAAN,yB,gDAAMA,I,+EAAAA,IAAmB,SAHrB,CAAC,IAAaqC,SAASpC,IACtB,O,GE/FL,IAAMF,EAAN,yB,gDAAMA,I,+EAAAA,IAAY,SAFd,CAAC,IAAc,EAAqB,IAAc,S","file":"x","sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\nimport { BranchModel } from './../../../models/branch.model';\nimport { Component, OnInit } from '@angular/core';\nimport { BranchService } from './../../../services/branch.service';\n\n@Component({\n  selector: 'ngx-branch-header',\n  templateUrl: './branch-header.component.html',\n  styleUrls: ['./branch-header.component.scss'],\n})\nexport class BranchHeaderComponent implements OnInit {\n  loading: boolean;\n  branchId: string;\n  branch: BranchModel;\n  constructor(\n    private branchService: BranchService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.router.navigate(['../page-not-found'], { relativeTo: this.route });\n      return;\n    }\n\n    this.branchService.getBranch(this.branchId).subscribe(\n      (branch: BranchModel) => {\n        this.branch = branch;\n        this.branchService.setBranchData(branch);\n        this.loading = false;\n      },\n      (err: any) => {\n        // this.router.navigate(['../page-not-found'], { relativeTo: this.route });\n      },\n    );\n  }\n}\n","<ngx-branch-header></ngx-branch-header>\n<router-outlet *ngIf=\"!loading\"></router-outlet>\n","import { BranchComponent } from './branch.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BranchComponent,\n    children: [\n      {\n        path: 'dashboard',\n        loadChildren: () => import('./dashboard/dashboard.module').then((m) => m.DashboardModule),\n      },\n\n      {\n        path: 'manage-branch',\n        loadChildren: () =>\n          import('./manage-branch/manage-branch.module').then((m) => m.ManageBranchModule),\n      },\n\n      {\n        path: 'schedule',\n        loadChildren: () => import('./schedule/schedule.module').then((m) => m.ScheduleModule),\n      },\n\n      {\n        path: 'lecture',\n        loadChildren: () => import('./lecture/lecture.module').then((m) => m.LectureModule),\n      },\n\n      {\n        path: 'assignment',\n        loadChildren: () =>\n          import('./assignment/assignment.module').then((m) => m.AssignmentModule),\n      },\n\n      {\n        path: 'lead',\n        loadChildren: () => import('./lead/lead.module').then((m) => m.LeadModule),\n      },\n\n      {\n        path: 'exam',\n        loadChildren: () => import('./exam/exam.module').then((m) => m.ExamModule),\n      },\n\n      {\n        path: 'budget',\n        loadChildren: () => import('./budget/budget.module').then((m) => m.BudgetModule),\n      },\n\n      {\n        path: 'storage',\n        loadChildren: () => import('./storage/storage.module').then((m) => m.StorageModule),\n      },\n\n      {\n        path: 'sms',\n        loadChildren: () => import('./sms/sms.module').then((m) => m.SmsModule),\n      },\n\n      {\n        path: 'student',\n        loadChildren: () => import('./student/student.module').then((m) => m.StudentModule),\n      },\n\n      {\n        path: 'students-report',\n        loadChildren: () =>\n          import('./students-report/students-report.module').then((m) => m.StudentsReportModule),\n      },\n\n      {\n        path: 'employee',\n        loadChildren: () => import('./employee/employee.module').then((m) => m.EmployeeModule),\n      },\n\n      {\n        path: 'leave',\n        loadChildren: () => import('./leave/leave.module').then((m) => m.LeaveModule),\n      },\n\n      {\n        path: '',\n        redirectTo: 'dashboard',\n        pathMatch: 'full',\n      },\n\n      {\n        path: 'page-not-found',\n        loadChildren: () =>\n          import('../../shared/page-not-found/page-not-found.module').then(\n            (m) => m.PageNotFoundModule,\n          ),\n      },\n\n      {\n        path: '**',\n        redirectTo: 'page-not-found',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BranchRoutingModule {}\n","import { NbToastrService } from '@nebular/theme';\nimport { BranchModel } from './../../models/branch.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BranchService } from './../../services/branch.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'ngx-branch',\n  templateUrl: './branch.component.html',\n  styleUrls: ['./branch.component.scss'],\n})\nexport class BranchComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  branchId: string;\n\n  constructor(\n    private branchService: BranchService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.router.navigate(['../page-not-found'], { relativeTo: this.route });\n      return;\n    }\n\n    this.branchService.checkBranchStatus(this.branchId).subscribe(\n      (branchStatus: { activated: boolean }) => {\n        if (branchStatus.activated) {\n          this.loading = false;\n        } else {\n          this.showToastr('top-right', 'danger', 'Please Activate Branch');\n          this.router.navigate(['../page-not-found'], { relativeTo: this.route });\n        }\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.router.navigate(['../page-not-found'], { relativeTo: this.route });\n      },\n    );\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  ngOnDestroy() {\n    this.branchService.deleteBranchId();\n    this.branchService.deleteBranchData();\n  }\n}\n","import { NbCardModule, NbUserModule } from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BranchRoutingModule } from './branch-routing.module';\nimport { BranchComponent } from './branch.component';\nimport { BranchHeaderComponent } from './branch-header/branch-header.component';\n\n@NgModule({\n  declarations: [BranchComponent, BranchHeaderComponent],\n  imports: [CommonModule, BranchRoutingModule, NbCardModule, NbUserModule],\n})\nexport class BranchModule {}\n"]}