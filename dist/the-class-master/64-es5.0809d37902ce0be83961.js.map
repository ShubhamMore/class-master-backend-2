{"version":3,"sources":["webpack:///src/app/admin/users/users.component.html","webpack:///src/app/admin/users/users.component.ts","webpack:///src/app/admin/users/users.module.ts","webpack:///src/app/admin/users/users-routing.module.ts"],"names":["UsersComponent","UsersModule","UsersRoutingModule","userService","toastrService","this","loading","institutes","employees","students","filteredInstitutes","filteredEmployees","filteredStudents","curTab","getUsers","subscribe","users","error","showToastr","tab","institute","trim","toLowerCase","filter","curInstitute","name","includes","employee","curEmployee","student","curStudent","userRole","user","status","changeUserStatus","res","index","findIndex","imsMasterId","searchInstitute","position","message","show","changeTab","routes","path","component","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","forChild"],"mappings":"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","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <h3>USERS</h3>\n  </nb-card-header>\n  <nb-card-body>\n    <nb-tabset fullWidth [routeParam]=\"curTab\" (changeTab)=\"changeTab($event.tabTitle)\">\n      <nb-tab tabTitle=\"institutes\">\n        <div class=\"row\" *ngIf=\"!loading; else loadingData\">\n          <div class=\"col-md-6 col-12\">\n            <nb-form-field>\n              <nb-icon nbPrefix icon=\"search-outline\" pack=\"eva\"></nb-icon>\n              <input\n                type=\"text\"\n                nbInput\n                shape=\"round\"\n                placeholder=\"Search Institute\"\n                fullWidth\n                (input)=\"searchInstitute($event.target.value)\"\n              />\n            </nb-form-field>\n          </div>\n        </div>\n\n        <br />\n\n        <div class=\"table-responsive\" *ngIf=\"filteredInstitutes.length > 0; else noInstitutes\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Phone</th>\n                <th>IMS Master ID</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let user of institutes; let i = index\">\n                <td>{{ i + 1 }}</td>\n                <td>{{ user.name }}</td>\n                <td>{{ user.email }}</td>\n                <td>{{ user.phone }}</td>\n                <td>{{ user.imsMasterId }}</td>\n                <td>{{ user.status ? 'Active' : 'Inactive' }}</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    [status]=\"!user.status ? 'success' : 'danger'\"\n                    (click)=\"changeUserStatus('institute', user.imsMasterId, !user.status)\"\n                  >\n                    {{ !user.status ? 'Activate' : 'Deactivate' }}\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </nb-tab>\n\n      <nb-tab tabTitle=\"employees\">\n        <div class=\"row\" *ngIf=\"!loading; else loadingData\">\n          <div class=\"col-md-6 col-12\">\n            <nb-form-field>\n              <nb-icon nbPrefix icon=\"search-outline\" pack=\"eva\"></nb-icon>\n              <input\n                type=\"text\"\n                nbInput\n                shape=\"round\"\n                placeholder=\"Search Employee\"\n                fullWidth\n                (input)=\"searchEmployee($event.target.value)\"\n              />\n            </nb-form-field>\n          </div>\n        </div>\n\n        <br />\n\n        <div class=\"table-responsive\" *ngIf=\"filteredEmployees.length > 0; else noEmployees\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Phone</th>\n                <th>IMS Master ID</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let user of employees; let i = index\">\n                <td>{{ i + 1 }}</td>\n                <td>{{ user.name }}</td>\n                <td>{{ user.email }}</td>\n                <td>{{ user.phone }}</td>\n                <td>{{ user.imsMasterId }}</td>\n                <td>{{ user.status ? 'Active' : 'Inactive' }}</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    [status]=\"!user.status ? 'success' : 'danger'\"\n                    (click)=\"changeUserStatus('employee', user.imsMasterId, !user.status)\"\n                  >\n                    {{ !user.status ? 'Activate' : 'Deactivate' }}\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </nb-tab>\n\n      <nb-tab tabTitle=\"students\">\n        <div class=\"row\" *ngIf=\"!loading; else loadingData\">\n          <div class=\"col-md-6 col-12\">\n            <nb-form-field>\n              <nb-icon nbPrefix icon=\"search-outline\" pack=\"eva\"></nb-icon>\n              <input\n                type=\"text\"\n                nbInput\n                shape=\"round\"\n                placeholder=\"Search Student\"\n                fullWidth\n                (input)=\"searchStudent($event.target.value)\"\n              />\n            </nb-form-field>\n          </div>\n        </div>\n\n        <br />\n\n        <div class=\"table-responsive\" *ngIf=\"filteredStudents.length > 0; else noStudents\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Phone</th>\n                <th>IMS Master ID</th>\n                <th>Status</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let user of students; let i = index\">\n                <td>{{ i + 1 }}</td>\n                <td>{{ user.name }}</td>\n                <td>{{ user.email }}</td>\n                <td>{{ user.phone }}</td>\n                <td>{{ user.imsMasterId }}</td>\n                <td>{{ user.status ? 'Active' : 'Inactive' }}</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    [status]=\"!user.status ? 'success' : 'danger'\"\n                    (click)=\"changeUserStatus('student', user.imsMasterId, !user.status)\"\n                  >\n                    {{ !user.status ? 'Activate' : 'Deactivate' }}\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </nb-tab>\n    </nb-tabset>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #noInstitutes>\n  <p class=\"pt-5 pb-5 text-center\">No Institutes</p>\n</ng-template>\n<ng-template #noEmployees>\n  <p class=\"pt-5 pb-5 text-center\">No Employees</p>\n</ng-template>\n<ng-template #noStudents>\n  <p class=\"pt-5 pb-5 text-center\">No Students</p>\n</ng-template>\n<ng-template #loadingData>\n  <p class=\"pt-5 pb-5 text-center\">Loading...</p>\n</ng-template>\n","import { NbToastrService } from '@nebular/theme';\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\ninterface User {\n  name: string;\n  email: string;\n  phone: string;\n  imsMasterId: string;\n  status: boolean;\n}\n@Component({\n  selector: 'ngx-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent implements OnInit {\n  loading: boolean;\n\n  institutes: User[];\n  employees: User[];\n  students: User[];\n\n  institute: string;\n  employee: string;\n  student: string;\n\n  curTab: string;\n\n  filteredInstitutes: User[];\n  filteredEmployees: User[];\n  filteredStudents: User[];\n\n  constructor(private userService: UserService, private toastrService: NbToastrService) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.institutes = [];\n    this.employees = [];\n    this.students = [];\n\n    this.filteredInstitutes = [];\n    this.filteredEmployees = [];\n    this.filteredStudents = [];\n\n    this.curTab = 'institutes';\n\n    this.userService.getUsers().subscribe(\n      (users: any) => {\n        this.institutes = users.institutes;\n        this.employees = users.employees;\n        this.students = users.students;\n\n        this.filteredInstitutes = [...this.institutes];\n        this.filteredEmployees = [...this.employees];\n        this.filteredStudents = [...this.students];\n\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  changeTab(tab: string) {\n    this.curTab = tab;\n  }\n\n  searchInstitute(institute: string) {\n    this.institute = institute ? institute.trim().toLowerCase() : null;\n    if (this.institute) {\n      this.filteredInstitutes = this.institutes.filter((curInstitute: User) =>\n        curInstitute.name.toLowerCase().includes(this.institute),\n      );\n    } else {\n      this.filteredInstitutes = [...this.institutes];\n    }\n  }\n\n  searchEmployee(employee: string) {\n    this.employee = employee ? employee.trim().toLowerCase() : null;\n    if (this.employee) {\n      this.filteredEmployees = this.employees.filter((curEmployee: User) =>\n        curEmployee.name.toLowerCase().includes(this.employee),\n      );\n    } else {\n      this.filteredEmployees = [...this.employees];\n    }\n  }\n\n  searchStudent(student: string) {\n    this.student = student ? student.trim().toLowerCase() : null;\n    if (this.student) {\n      this.filteredStudents = this.students.filter((curStudent: User) =>\n        curStudent.name.toLowerCase().includes(this.student),\n      );\n    } else {\n      this.filteredStudents = [...this.students];\n    }\n  }\n\n  changeUserStatus(userRole: string, user: string, status: boolean) {\n    this.loading = true;\n\n    this.userService.changeUserStatus(user, status).subscribe(\n      (res: any) => {\n        if (userRole === 'institute') {\n          const index = this.institutes.findIndex(\n            (institute: User) => institute.imsMasterId === user,\n          );\n          if (index >= 0) {\n            this.institutes[index].status = status;\n          }\n          this.searchInstitute(this.institute);\n        } else if (userRole === 'employee') {\n          const index = this.employees.findIndex((employee: User) => employee.imsMasterId === user);\n          if (index >= 0) {\n            this.employees[index].status = status;\n          }\n          this.searchInstitute(this.employee);\n        } else if (userRole === 'student') {\n          const index = this.students.findIndex((student: User) => student.imsMasterId === user);\n          if (index >= 0) {\n            this.students[index].status = status;\n          }\n          this.searchInstitute(this.student);\n        } else {\n          this.showToastr('top-right', 'danger', 'Invalid User Role');\n        }\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import {\n  NbCardModule,\n  NbUserModule,\n  NbIconModule,\n  NbInputModule,\n  NbButtonModule,\n  NbTooltipModule,\n  NbTabsetModule,\n  NbFormFieldModule,\n} from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { UsersComponent } from './users.component';\n\n@NgModule({\n  declarations: [UsersComponent],\n  imports: [\n    CommonModule,\n    UsersRoutingModule,\n    NbCardModule,\n    NbUserModule,\n    NbIconModule,\n    NbInputModule,\n    NbButtonModule,\n    NbTooltipModule,\n    NbTabsetModule,\n    NbFormFieldModule,\n  ],\n})\nexport class UsersModule {}\n","import { UsersComponent } from './users.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../shared/page-not-found/page-not-found.module').then((m) => m.PageNotFoundModule),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersRoutingModule {}\n"]}