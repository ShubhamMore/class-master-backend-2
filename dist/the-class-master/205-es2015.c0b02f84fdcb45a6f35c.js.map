{"version":3,"sources":["webpack:///src/app/services/branch-sms.service.ts","webpack:///src/app/institute/branch/sms/sms.component.html","webpack:///src/app/institute/branch/sms/sms-routing.module.ts","webpack:///src/app/institute/branch/sms/sms.component.ts","webpack:///src/app/institute/branch/sms/sms.module.ts"],"names":["BranchSMSService","httpService","branchSMS","BehaviorSubject","this","next","branch","httpPost","api","data","pipe","map","response","catchError","err","throwError","smsPackage","order","receipt","routes","path","component","SmsComponent","branchService","dialogService","paymentService","smsPackageService","branchSMSService","toastrService","router","route","dateService","loading","branchId","getBranchId","getBranchSMS","subscribe","BranchSMS","getSMSPackages","smsPackages","error","showToastr","navigate","relativeTo","status","updateSms","updateBranchSMS","paymentDetails","packageType","res","ngOnInit","checkout","open","context","closeOnBackdropClick","closeOnEsc","onClose","onClosePayment","SMSPackage","amount","price","toString","setPaymentDetails","packageName","getPaymentDetails","onCheckout","parseFloat","toFixed","position","message","show","back","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","SmsRoutingModule","forChild","SmsModule"],"mappings":"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","file":"x","sourcesContent":["import { BranchSMSModel } from './../models/branch-sms.model';\nimport { Injectable } from '@angular/core';\nimport { HttpService } from './shared-services/http.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { throwError, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BranchSMSService {\n  branchSMS = new BehaviorSubject<BranchSMSModel>(null);\n\n  setBranchSMSDetails(branchSMS: BranchSMSModel) {\n    this.branchSMS.next(branchSMS);\n  }\n\n  getBranchSMSDetails() {\n    return this.branchSMS;\n  }\n\n  deleteBranchSMSDetails() {\n    this.branchSMS.next(null);\n  }\n\n  constructor(private httpService: HttpService) {}\n\n  getBranchSMS(branch: any) {\n    const data = { api: 'getBranchSMS', data: { branch } };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n\n  updateBranchSMS(branch: string, smsPackage: string, order: string, receipt: string) {\n    const data = { api: 'updateBranchSMS', data: { branch, smsPackage, order, receipt } };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <button class=\"float-right\" nbButton size=\"small\" status=\"warning\" (click)=\"back()\">\n      Back\n    </button>\n    <h4>SMS</h4>\n  </nb-card-header>\n  <nb-card-body>\n    <div class=\"row\" *ngIf=\"!loading; else loadingData\">\n      <div class=\"col-md-6 col-12\">\n        <h5>SMS Balance {{ BranchSMS.smsCount }}</h5>\n      </div>\n\n      <div class=\"col-md-6 col-12\"></div>\n    </div>\n  </nb-card-body>\n</nb-card>\n\n<nb-card>\n  <nb-card-header>\n    <h6>Want to increase SMS Balance?</h6>\n    <h4>SMS Packages</h4>\n  </nb-card-header>\n  <nb-card-body>\n    <ng-container *ngIf=\"!loading; else loadingData\">\n      <div class=\"row\" *ngIf=\"smsPackages.length > 0; else noPackages\">\n        <div\n          class=\"col-md-3 col-sm-6 col-12 mx-auto\"\n          *ngFor=\"let package of smsPackages; let i = index\"\n        >\n          <nb-card class=\"card\">\n            <nb-card-header>\n              <h4 class=\"text-center\">{{ package.packageName }}</h4>\n            </nb-card-header>\n            <nb-card-body>\n              <div>\n                <nb-icon icon=\"hard-drive-outline\"></nb-icon>\n                &nbsp;\n                <span>{{ package.smsCount }}</span>\n              </div>\n              <div>\n                <nb-icon icon=\"pricetags-outline\"></nb-icon>\n                &nbsp;\n                <span>{{ getAmount(package.price) }}/-</span>\n              </div>\n            </nb-card-body>\n            <nb-card-footer>\n              <button\n                class=\"float-right\"\n                nbButton\n                outline\n                size=\"small\"\n                [status]=\"'success'\"\n                (click)=\"activate(package)\"\n              >\n                {{ 'Activate' }}\n              </button>\n            </nb-card-footer>\n          </nb-card>\n        </div>\n      </div>\n    </ng-container>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #loadingData>\n  <p class=\"pt-5 pb-5 text-center\">Loading...</p>\n</ng-template>\n\n<ng-template #noPackages>\n  <p class=\"pt-5 pb-5 text-center\">No SMS Packages</p>\n</ng-template>\n","import { SmsComponent } from './sms.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: SmsComponent },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SmsRoutingModule {}\n","import { CheckoutComponent } from './../../checkout/checkout.component';\nimport { PaymentComponent } from './../../payment/payment.component';\nimport { PaymentService } from './../../../services/payment.service';\nimport { NbToastrService, NbDialogService } from '@nebular/theme';\nimport { DateService } from './../../../services/shared-services/date.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BranchSMSService } from './../../../services/branch-sms.service';\nimport { BranchService } from './../../../services/branch.service';\nimport { SMSPackageService } from './../../../services/sms-package.service';\nimport { SMSPackageModel } from './../../../models/sms-package.model';\nimport { BranchSMSModel } from './../../../models/branch-sms.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-sms',\n  templateUrl: './sms.component.html',\n  styleUrls: ['./sms.component.scss'],\n})\nexport class SmsComponent implements OnInit {\n  loading: boolean;\n  branchId: string;\n\n  BranchSMS: BranchSMSModel;\n  smsPackages: SMSPackageModel[];\n\n  totalSms: string;\n  usedSms: string;\n  availableSms: string;\n  usedSmsInPercentage: number;\n\n  paymentDetails: { planType: string; packageType: string; amount: string };\n\n  constructor(\n    private branchService: BranchService,\n    private dialogService: NbDialogService,\n    private paymentService: PaymentService,\n    private smsPackageService: SMSPackageService,\n    private branchSMSService: BranchSMSService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public dateService: DateService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.router.navigate(['../page-not-found'], { relativeTo: this.route });\n      return;\n    }\n\n    this.branchSMSService.getBranchSMS(this.branchId).subscribe(\n      (BranchSMS: BranchSMSModel) => {\n        this.BranchSMS = BranchSMS;\n\n        this.smsPackageService.getSMSPackages().subscribe(\n          (smsPackages: SMSPackageModel[]) => {\n            this.smsPackages = smsPackages;\n            this.loading = false;\n          },\n          (error: any) => {\n            this.showToastr('top-right', 'danger', error);\n            this.loading = false;\n          },\n        );\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  onClosePayment(order: any) {\n    if (order.status) {\n      this.updateSms(order.order, order.receipt);\n    }\n  }\n\n  private updateSms(order: string, receipt: string) {\n    this.branchSMSService\n      .updateBranchSMS(this.branchId, this.paymentDetails.packageType, order, receipt)\n      .subscribe(\n        (res: any) => {\n          this.ngOnInit();\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n        },\n      );\n  }\n\n  onCheckout(checkout: any) {\n    if (checkout.status) {\n      this.dialogService\n        .open(PaymentComponent, {\n          context: {},\n          closeOnBackdropClick: false,\n          closeOnEsc: false,\n        })\n        .onClose.subscribe((order: any) => order && this.onClosePayment(order));\n    }\n  }\n\n  activate(SMSPackage: SMSPackageModel) {\n    const amount: string = SMSPackage.price.toString();\n\n    this.paymentService.setPaymentDetails('sms', SMSPackage.packageName, amount);\n\n    this.paymentDetails = this.paymentService.getPaymentDetails();\n    this.dialogService\n      .open(CheckoutComponent, {\n        context: {},\n        closeOnBackdropClick: false,\n        closeOnEsc: false,\n      })\n      .onClose.subscribe((checkout: any) => checkout && this.onCheckout(checkout));\n  }\n\n  getAmount(amount: any) {\n    amount = parseFloat(amount.toString());\n    return amount.toFixed(2).toString();\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import { NbCardModule, NbButtonModule, NbIconModule, NbTooltipModule } from '@nebular/theme';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SmsRoutingModule } from './sms-routing.module';\nimport { SmsComponent } from './sms.component';\n\n@NgModule({\n  declarations: [SmsComponent],\n  imports: [\n    CommonModule,\n    SmsRoutingModule,\n    NbCardModule,\n    NbButtonModule,\n    NbIconModule,\n    NbTooltipModule,\n  ],\n})\nexport class SmsModule {}\n"]}