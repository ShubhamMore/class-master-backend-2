{"version":3,"sources":["webpack:///src/app/employee/branch/lead/lead.component.html","webpack:///src/app/employee/branch/lead/lead-routing.module.ts","webpack:///src/app/employee/branch/lead/lead.component.ts","webpack:///src/app/employee/branch/lead/lead.module.ts"],"names":["LeadComponent","LeadModule","LeadRoutingModule","routes","path","component","branchService","courseService","leadService","router","route","this","loading","branchId","getBranchId","getCourses","subscribe","courses","setCoursesData","err","back","navigate","relativeTo","deleteCoursesData","deleteLeadType","children","loadChildren","then","m","AddLeadModule","ManageLeadModule","redirectTo","pathMatch","PageNotFoundModule","forChild"],"mappings":"+fAAA,4CCIA,ICQaA,ECDAC,EFyCAC,EAhDPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WCKSL,EAAN,WAIL,WACUM,EACAC,EACAC,EACAC,EACAC,aAJA,KAAAJ,gBACA,KAAAC,gBACA,KAAAC,cACA,KAAAC,SACA,KAAAC,Q,UATL,O,EAAA,G,EAAA,uBAYL,WAAU,WACRC,KAAKC,WACLD,KAAKE,SAAWF,KAAKL,cAAcQ,cAC9BH,KAAKE,SAKVF,KAAKJ,cAAcQ,WAAWJ,KAAKE,SAAU,IAAIG,WAC9CC,YACCN,EAAKJ,cAAcW,eAAeD,GAClCN,EAAKC,cAENO,YACCR,EAAKS,UAVPT,KAAKS,SAhBJ,kBAgCL,WACET,KAAKF,OAAOY,SAAS,CAAC,OAAQ,CAAEC,WAAYX,KAAKD,UAjC9C,yBAoCL,WACEC,KAAKJ,cAAcgB,oBACnBZ,KAAKH,YAAYgB,sB,2BAtCd,K,sCAAMxB,GAAa,gM,mDAAbA,EAAa,wFFZ1B,qD,KAAe,8C,sCCQXyB,SAAU,CACR,CACErB,KAAM,MACNsB,aAAc,kBAAM,kCAAqCC,MAAMC,YAACA,OAAKA,EAAEC,mBAGzE,CACEzB,KAAM,OACNsB,aAAc,kBAAM,kCAAqCC,MAAMC,YAACA,OAAKA,EAAEC,mBAGzE,CACEzB,KAAM,SACNsB,aAAc,kBACZ,mCAA2CC,MAAMC,YAACA,OAAKA,EAAEE,sBAG7D,CACE1B,KAAM,GACN2B,WAAY,qBACZC,UAAW,QAGb,CACE5B,KAAM,iBACNsB,aAAc,kBACZ,iCAA+DC,MAC5DC,YAACA,OAAKA,EAAEK,wBAIf,CACE7B,KAAM,KACN2B,WAAY,iBACZC,UAAW,WAUZ,IAAM9B,EAAN,yB,gDAAMA,I,+EAAAA,IAAiB,SAHnB,CAAC,IAAagC,SAAS/B,IACtB,O,GEvCL,IAAMF,EAAN,yB,gDAAMA,I,+EAAAA,IAAU,SAFZ,CAAC,IAAc,M","file":"x","sourcesContent":["<router-outlet *ngIf=\"!loading\"></router-outlet>\n","import { LeadComponent } from './lead.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LeadComponent,\n    children: [\n      {\n        path: 'add',\n        loadChildren: () => import('./add-lead/add-lead.module').then((m) => m.AddLeadModule),\n      },\n\n      {\n        path: 'edit',\n        loadChildren: () => import('./add-lead/add-lead.module').then((m) => m.AddLeadModule),\n      },\n\n      {\n        path: 'manage',\n        loadChildren: () =>\n          import('./manage-lead/manage-lead.module').then((m) => m.ManageLeadModule),\n      },\n\n      {\n        path: '',\n        redirectTo: 'manage?type=active',\n        pathMatch: 'full',\n      },\n\n      {\n        path: 'page-not-found',\n        loadChildren: () =>\n          import('../../../shared/page-not-found/page-not-found.module').then(\n            (m) => m.PageNotFoundModule,\n          ),\n      },\n\n      {\n        path: '**',\n        redirectTo: 'page-not-found',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LeadRoutingModule {}\n","import { LeadService } from './../../../services/lead.service';\nimport { CourseModel } from './../../../models/course.model';\nimport { CourseService } from './../../../services/course.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { BranchService } from './../../../services/branch.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'ngx-lead',\n  templateUrl: './lead.component.html',\n  styleUrls: ['./lead.component.scss'],\n})\nexport class LeadComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  branchId: string;\n\n  constructor(\n    private branchService: BranchService,\n    private courseService: CourseService,\n    private leadService: LeadService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.courseService.getCourses(this.branchId, '').subscribe(\n      (courses: CourseModel[]) => {\n        this.courseService.setCoursesData(courses);\n        this.loading = false;\n      },\n      (err: any) => {\n        this.back();\n        return;\n      },\n    );\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  ngOnDestroy() {\n    this.courseService.deleteCoursesData();\n    this.leadService.deleteLeadType();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LeadRoutingModule } from './lead-routing.module';\nimport { LeadComponent } from './lead.component';\nimport { AddLeadComponent } from './add-lead/add-lead.component';\n\n@NgModule({\n  declarations: [LeadComponent],\n  imports: [CommonModule, LeadRoutingModule],\n})\nexport class LeadModule {}\n"]}