{"version":3,"sources":["webpack:///src/app/institute/manage-institute/manage-institute.component.html","webpack:///src/app/institute/manage-institute/manage-institute-routing.module.ts","webpack:///src/app/institute/manage-institute/manage-institute.component.ts","webpack:///src/app/institute/manage-institute/manage-institute.module.ts"],"names":["routes","path","component","ManageInstituteComponent","menuService","membershipService","branchService","router","route","this","loading","branches","hideMenu","setBranchId","getBranches","subscribe","err","address","address1","address2","city","pinCode","state","id","navigate","relativeTo","setMembershipType","queryParams","mode","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","ManageInstituteRoutingModule","forChild","ManageInstituteModule"],"mappings":"0QAAA,yCACE,yCACE,2CACE,gDACE,sCAAI,kCAAmD,8BACvD,sCAAI,8CAAkB,8BACtB,iCACA,4CACE,4CACF,8BACF,8BACF,8BACF,8BACF,+B,kEAsDkB,6CAME,6LAEA,oCACF,+B,kEAEA,6CAME,+LAEA,0CACF,+B,kEA9DJ,sCACE,sCACE,wC,qCAKF,8BACA,yCACE,yBACF,8BACA,sCACE,2CAAe,yBAAmC,8BACpD,8BACA,sCACE,4CACE,2CAAQ,0BAA2C,8BACrD,8BACF,8BACA,uCACE,8CAKE,8JAEA,mCACF,8BACF,8BACA,uCACE,8CAKE,8JAEA,mCACF,8BACF,8BACA,uCACE,gDAWA,gDAUF,8BACF,8B,8DA7DM,wHAAmD,wBAMrD,+FAGe,8FAGT,8FACI,2FA2BR,uEAWA,yE,yBAhEpB,yCACE,yCACE,2CACE,kDACE,sCAAI,yCAAa,8BACnB,8BACA,gDACE,yCACE,2CACE,yCACE,6CAiEF,8BACF,8BACF,8BACF,8BACF,8BACF,8BACF,+B,4CAvEkB,8ECrBlB,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCMG,M,MAAMC,EAIX,YACUC,EACAC,EACAC,EACAC,EACAC,GAJA,KAAAJ,cACA,KAAAC,oBACA,KAAAC,gBACA,KAAAC,SACA,KAAAC,QAGV,WACEC,KAAKC,SAAU,EACfD,KAAKE,SAAW,GAChBF,KAAKL,YAAYQ,WACjBH,KAAKH,cAAcO,YAAY,IAE/BJ,KAAKH,cAAcQ,cAAcC,UAC9BJ,IACCF,KAAKE,SAAWA,EAChBF,KAAKC,SAAU,GAEhBM,IACCP,KAAKC,SAAU,IAKrB,WAAWO,GAGT,OACEA,EAAQC,SACR,MAJeD,EAAQE,SAAWF,EAAQE,SAAW,KAAO,IAM5DF,EAAQG,KACR,MACAH,EAAQI,QACR,KACAJ,EAAQK,MAIZ,aAAaC,GACXd,KAAKH,cAAcO,YAAYU,GAC/Bd,KAAKF,OAAOiB,SAAS,CAAC,uBAAwB,CAAEC,WAAYhB,KAAKD,QAGnE,eAAee,GACbd,KAAKH,cAAcO,YAAYU,GAC/Bd,KAAKJ,kBAAkBqB,kBAAkB,SACzCjB,KAAKF,OAAOiB,SAAS,CAAC,uBAAwB,CAAEC,WAAYhB,KAAKD,QAGnE,WAAWe,GACTd,KAAKH,cAAcO,YAAYU,GAC/Bd,KAAKF,OAAOiB,SAAS,CAAC,WAAY,CAAEC,WAAYhB,KAAKD,QAGvD,WAAWe,GACTd,KAAKH,cAAcO,YAAYU,GAC/Bd,KAAKF,OAAOiB,SAAS,CAAC,WAAY,CAChCC,WAAYhB,KAAKD,MACjBmB,YAAa,CAAEC,KAAM,W,6CAhEdzB,GAAwB,gM,mDAAxBA,EAAwB,+1BFbrC,4CAeA,6C,MAfiB,wDAeA,oF,mKEFV,IDHL,CACEF,KAAM,iBACN4B,aAAc,IACZ,iCAA4DC,KAAMC,GAAMA,EAAEC,qBAG9E,CACE/B,KAAM,KACNgC,WAAY,iBACZC,UAAW,SAQR,Y,MAAMC,G,yDAAAA,I,+EAAAA,IAA4B,SAH9B,CAAC,IAAaC,SAASpC,IACtB,O,GAEL,G,gBECA,Y,MAAMqC,G,yDAAAA,I,+EAAAA,IAAqB,SAXvB,CACP,IACA,EACA,IACA,IACA,IACA,IACA,KACA,S,GAGG","file":"x","sourcesContent":["<div class=\"row\" *ngIf=\"branches.length === 0\">\n  <div class=\"col-md-10 col-12 mx-auto text-center\">\n    <nb-card>\n      <nb-card-body>\n        <h1><i class=\"fa fa-university\" aria-hidden=\"true\"></i></h1>\n        <h2>No Institute Added</h2>\n        <br />\n        <button nbButton size=\"small\" status=\"primary\" routerLink=\"/institute/membership-plans\">\n          Add Institute\n        </button>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n\n<div class=\"row\" *ngIf=\"branches.length > 0\">\n  <div class=\"col-md-12\">\n    <nb-card>\n      <nb-card-header>\n        <h3>My Institutes</h3>\n      </nb-card-header>\n      <nb-card-body>\n        <div class=\"table-responsive\">\n          <table class=\"table\">\n            <tbody>\n              <tr *ngFor=\"let branch of branches\">\n                <td>\n                  <nb-user\n                    [name]=\"branch.basicDetails.branchName | uppercase\"\n                    [title]=\"branch.address.city\"\n                  >\n                  </nb-user>\n                </td>\n                <td class=\"sm-device\">\n                  {{ getAddress(branch.address) }}\n                </td>\n                <td>\n                  <span class=\"\">+91 {{ branch.basicDetails.phone }}</span>\n                </td>\n                <td>\n                  <span [ngClass]=\"branch.status ? 'active' : 'inactive'\">\n                    <strong>{{ branch.status ? 'Active' : 'Inactive' }}</strong>\n                  </span>\n                </td>\n                <td>\n                  <button\n                    class=\"mr-2\"\n                    nbButton\n                    size=\"small\"\n                    status=\"info\"\n                    (click)=\"viewBranch(branch._id)\"\n                  >\n                    View\n                  </button>\n                </td>\n                <td>\n                  <button\n                    class=\"mr-2\"\n                    nbButton\n                    size=\"small\"\n                    status=\"basic\"\n                    (click)=\"editBranch(branch._id)\"\n                  >\n                    Edit\n                  </button>\n                </td>\n                <td>\n                  <button\n                    *ngIf=\"branch.status\"\n                    class=\"\"\n                    nbButton\n                    size=\"small\"\n                    status=\"warning\"\n                    (click)=\"manageBranch(branch._id)\"\n                  >\n                    Manage\n                  </button>\n\n                  <button\n                    *ngIf=\"!branch.status\"\n                    class=\"\"\n                    nbButton\n                    size=\"small\"\n                    status=\"danger\"\n                    (click)=\"activateBranch(branch._id)\"\n                  >\n                    Activate Now\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { ManageInstituteComponent } from './manage-institute.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageInstituteComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../shared/page-not-found/page-not-found.module').then((m) => m.PageNotFoundModule),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageInstituteRoutingModule {}\n","import { MembershipService } from './../../services/membership.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from './../../authentication/auth/auth-service/auth.service';\nimport { BranchModel, BranchAddressModel } from './../../models/branch.model';\nimport { BranchService } from './../../services/branch.service';\nimport { MenuService } from './../menu.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-manage-institute',\n  templateUrl: './manage-institute.component.html',\n  styleUrls: ['./manage-institute.component.scss'],\n})\nexport class ManageInstituteComponent implements OnInit {\n  loading: boolean;\n  branches: BranchModel[];\n\n  constructor(\n    private menuService: MenuService,\n    private membershipService: MembershipService,\n    private branchService: BranchService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branches = [];\n    this.menuService.hideMenu();\n    this.branchService.setBranchId('');\n\n    this.branchService.getBranches().subscribe(\n      (branches: BranchModel[]) => {\n        this.branches = branches;\n        this.loading = false;\n      },\n      (err: any) => {\n        this.loading = false;\n      },\n    );\n  }\n\n  getAddress(address: BranchAddressModel) {\n    const address2 = address.address2 ? address.address2 + ', ' : '';\n\n    return (\n      address.address1 +\n      ', ' +\n      address2 +\n      address.city +\n      ' - ' +\n      address.pinCode +\n      ', ' +\n      address.state\n    );\n  }\n\n  manageBranch(id: string) {\n    this.branchService.setBranchId(id);\n    this.router.navigate(['../branch/dashboard'], { relativeTo: this.route });\n  }\n\n  activateBranch(id: string) {\n    this.branchService.setBranchId(id);\n    this.membershipService.setMembershipType('renew');\n    this.router.navigate(['../membership-plans'], { relativeTo: this.route });\n  }\n\n  viewBranch(id: string) {\n    this.branchService.setBranchId(id);\n    this.router.navigate(['../view'], { relativeTo: this.route });\n  }\n\n  editBranch(id: string) {\n    this.branchService.setBranchId(id);\n    this.router.navigate(['../edit'], {\n      relativeTo: this.route,\n      queryParams: { mode: 'edit' },\n    });\n  }\n}\n","import { ManageInstituteComponent } from './manage-institute.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageInstituteRoutingModule } from './manage-institute-routing.module';\n\nimport { ThemeModule } from './../../@theme/theme.module';\nimport {\n  NbCardModule,\n  NbButtonModule,\n  NbIconModule,\n  NbTooltipModule,\n  NbUserModule,\n} from '@nebular/theme';\n\n@NgModule({\n  declarations: [ManageInstituteComponent],\n  imports: [\n    CommonModule,\n    ManageInstituteRoutingModule,\n    ThemeModule,\n    NbCardModule,\n    NbIconModule,\n    NbButtonModule,\n    NbTooltipModule,\n    NbUserModule,\n  ],\n})\nexport class ManageInstituteModule {}\n"]}