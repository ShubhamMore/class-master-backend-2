{"version":3,"sources":["webpack:///src/app/services/budget.service.ts","webpack:///src/app/institute/branch/budget/view-budget-summery/view-budget-summery.component.html","webpack:///src/app/institute/branch/budget/view-budget-summery/view-budget-summery-routing.module.ts","webpack:///src/app/institute/branch/budget/view-budget-summery/view-budget-summery.component.ts","webpack:///src/app/institute/branch/budget/view-budget-summery/view-budget-summery.module.ts"],"names":["BudgetService","httpService","month","this","searchMonth","year","searchYear","branch","httpPost","api","data","pipe","response","err","budget","id","routes","path","component","ViewBudgetSummeryComponent","budgetService","branchService","dateService","router","route","loading","budgetSummery","branchId","getBranchId","getMonth","getYear","searchBudget","back","amount","toFixed","toString","getBudgetSummery","subscribe","error","totalIncome","forEach","curBudgetSummery","type","totalExpense","getTotalIncome","getTotalExpense","budgetSummeryLength","length","formatDate","date","window","print","navigate","relativeTo","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","ViewBudgetSummeryRoutingModule","forChild","ViewBudgetSummeryModule"],"mappings":"4FAEA,kGAMO,Y,MAAMA,EAmBX,YAAoBC,GAAA,KAAAA,cAfpB,SAASC,GACPC,KAAKC,YAAcF,EAErB,WACE,OAAOC,KAAKC,YAGd,QAAQC,GACNF,KAAKG,WAAaD,EAGpB,UACE,OAAOF,KAAKG,WAKd,mBAAmBC,EAAgBL,EAAeG,GAEhD,OAAOF,KAAKF,YAAYO,SADX,CAAEC,IAAK,qBAAsBC,KAAM,CAAEH,SAAQL,QAAOG,UAC1BM,KACrC,YAAKC,GACIA,GAET,YAAYC,GACH,YAAWA,KAKxB,4BAA4BN,EAAgBF,GAE1C,OAAOF,KAAKF,YAAYO,SADX,CAAEC,IAAK,8BAA+BC,KAAM,CAAEH,SAAQF,UAC5BM,KACrC,YAAKC,GACIA,GAET,YAAYC,GACH,YAAWA,KAKxB,iBAAiBN,EAAgBL,EAAeG,GAE9C,OAAOF,KAAKF,YAAYO,SADX,CAAEC,IAAK,mBAAoBC,KAAM,CAAEH,SAAQL,QAAOG,UACxBM,KACrC,YAAKC,GACIA,GAET,YAAYC,GACH,YAAWA,KAKxB,WAAWC,GAET,OAAOX,KAAKF,YAAYO,SADX,CAAEC,IAAK,aAAcC,KAAMI,IACDH,KACrC,YAAKC,GACIA,GAET,YAAYC,GACH,YAAWA,KAKxB,aAAaE,GAEX,OAAOZ,KAAKF,YAAYO,SADX,CAAEC,IAAK,eAAgBC,KAAM,CAAEK,QACLJ,KACrC,YAAKC,GACIA,GAET,YAAYC,GACH,YAAWA,M,6CA5Ebb,GAAa,+B,sDAAbA,EAAa,QAAbA,EAAa,qBAFZ,S,GAEP,I,kNCcG,sCACE,sCAAI,yBAAW,8BACf,sCAAI,yBAAmD,8BACvD,sCAAI,yBAA4B,8BAChC,sCACE,yBACF,8BACA,sCACE,0BACF,8BACF,+B,qEATM,kEACA,+FACA,sEAEF,kHAGA,oH,yBApBV,yCACE,2CACE,2CACE,sCACE,sCAAI,6BAAC,8BACL,sCAAI,gCAAI,8BACR,sCAAI,iCAAK,8BACT,uCAAI,mCAAM,8BACV,uCAAI,oCAAO,8BACb,8BACF,8BACA,0CACE,4CAWA,uCACE,yCAAgB,2CAAQ,kCAAK,8BAAS,8BACtC,uCACE,2CAAQ,0BAAiC,8BAC3C,8BACA,uCACE,2CAAQ,0BAAkC,8BAC5C,8BACF,8BACF,8BACF,8BACF,+B,4CAtBU,kFAcQ,8FAGA,gG,sBAQhB,uCAA4B,uDAA2B,+BC3C7D,MAAMgB,EAAiB,CACrB,CAAEC,KAAM,GAAIC,UCOP,M,MAAMC,EAQX,YACUC,EACAC,EACDC,EACCC,EACAC,GAJA,KAAAJ,gBACA,KAAAC,gBACD,KAAAC,cACC,KAAAC,SACA,KAAAC,QAGV,WACErB,KAAKsB,SAAU,EAEftB,KAAKuB,cAAgB,GAErBvB,KAAKwB,SAAWxB,KAAKkB,cAAcO,cAC9BzB,KAAKwB,UAKVxB,KAAKD,MAAQC,KAAKiB,cAAcS,WAChC1B,KAAKE,KAAOF,KAAKiB,cAAcU,UAE/B3B,KAAK4B,gBAPH5B,KAAK6B,OAUT,UAAUC,GAER,OADAA,GAAUA,GACIC,QAAQ,GAAGC,WAAa,KAGxC,eACEhC,KAAKiB,cAAcgB,iBAAiBjC,KAAKwB,SAAUxB,KAAKD,MAAOC,KAAKE,MAAMgC,UACvEvB,IACCX,KAAKuB,cAAgBZ,EACrBX,KAAKsB,SAAU,GAEhBa,IACCnC,KAAKsB,SAAU,IAKrB,iBACE,IAAIc,EAAc,EAMlB,OALApC,KAAKuB,cAAcc,QAASC,IACI,WAA1BA,EAAiBC,OACnBH,GAAeE,EAAiBR,UAG7BM,EAGT,kBACE,IAAII,EAAe,EAMnB,OALAxC,KAAKuB,cAAcc,QAASC,IACI,YAA1BA,EAAiBC,OACnBC,GAAgBF,EAAiBR,UAG9BU,EAGT,kBAGE,OAFqBxC,KAAKyC,iBACJzC,KAAK0C,kBAI7B,cACE,MAAMC,EAAsB3C,KAAKuB,cAAcqB,OAC/C,OAAID,EAAsB,EAGjB,SAFU3C,KAAKmB,YAAY0B,WAAW7C,KAAKuB,cAAc,GAAGuB,MAEtC,OADd9C,KAAKmB,YAAY0B,WAAW7C,KAAKuB,cAAcoB,EAAsB,GAAGG,MAGlF,GAGT,QACEC,OAAOC,QAGT,OACEhD,KAAKoB,OAAO6B,SAAS,CAAC,OAAQ,CAAEC,WAAYlD,KAAKqB,S,6CA3FxCL,GAA0B,gM,mDAA1BA,EAA0B,6W,GAAA,MFZvC,2CACE,kDACE,4CAAmE,qDAAS,EAAAa,UAC1E,kCACF,8BACA,sCACE,4CAAe,yCAAO,yBAAmB,8BAC3C,8BACF,8BACA,gDACE,4CAoCA,+FAGF,8BACF,+B,4CA5C4B,8EAIM,uFAAsD,gB,sDEEjF,IDLL,CACEf,KAAM,iBACNqC,aAAc,IACZ,iCAAkEC,KAC/DC,GAAMA,EAAEC,qBAIf,CACExC,KAAM,KACNyC,WAAY,iBACZC,UAAW,SAQR,Y,MAAMC,G,yDAAAA,I,+EAAAA,IAA8B,SAHhC,CAAC,IAAaC,SAAS7C,IACtB,O,GAEL,GETA,Q,MAAM8C,G,yDAAAA,I,+EAAAA,IAAuB,SARzB,CACP,IACA,EACA,IACA,IACA,Q,GAGG","file":"x","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpService } from './shared-services/http.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetService {\n  private searchMonth: string;\n  private searchYear: string;\n\n  setMonth(month: string) {\n    this.searchMonth = month;\n  }\n  getMonth() {\n    return this.searchMonth;\n  }\n\n  setYear(year: string) {\n    this.searchYear = year;\n  }\n\n  getYear() {\n    return this.searchYear;\n  }\n\n  constructor(private httpService: HttpService) {}\n\n  getBudgetForBranch(branch: string, month: string, year: string) {\n    const data = { api: 'getBudgetForBranch', data: { branch, month, year } };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n\n  getBudgetForBranchDashboard(branch: string, year: string) {\n    const data = { api: 'getBudgetForBranchDashboard', data: { branch, year } };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n\n  getBudgetSummery(branch: string, month: string, year: string) {\n    const data = { api: 'getBudgetSummery', data: { branch, month, year } };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n\n  saveBudget(budget: any) {\n    const data = { api: 'saveBudget', data: budget };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n\n  deleteBudget(id: string) {\n    const data = { api: 'deleteBudget', data: { id } };\n    return this.httpService.httpPost(data).pipe(\n      map((response: any) => {\n        return response;\n      }),\n      catchError((err: any) => {\n        return throwError(err);\n      }),\n    );\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <button class=\"float-right\" nbButton size=\"small\" status=\"warning\" (click)=\"back()\">\n      Back\n    </button>\n    <h4>\n      BUDGET SUMMERY <small>{{ getDuration() }}</small>\n    </h4>\n  </nb-card-header>\n  <nb-card-body>\n    <div class=\"table-responsive\" *ngIf=\"budgetSummery.length > 0; else noBudgetSummery\">\n      <table class=\"table table-sm\">\n        <thead class=\"table-heading\">\n          <tr>\n            <th>#</th>\n            <th>Date</th>\n            <th>Title</th>\n            <th>Income</th>\n            <th>Expense</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let curBudgetSummery of budgetSummery; let i = index\">\n            <td>{{ i + 1 }}</td>\n            <td>{{ dateService.formatDate(curBudgetSummery.date) }}</td>\n            <td>{{ curBudgetSummery.title }}</td>\n            <td>\n              {{ curBudgetSummery.type === 'income' ? getAmount(curBudgetSummery.amount) : '' }}\n            </td>\n            <td>\n              {{ curBudgetSummery.type === 'expense' ? getAmount(curBudgetSummery.amount) : '' }}\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"3\"><strong>Total</strong></td>\n            <td>\n              <strong>{{ getAmount(getTotalIncome()) }}</strong>\n            </td>\n            <td>\n              <strong>{{ getAmount(getTotalExpense()) }}</strong>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <ng-template #noBudgetSummery>\n      <p class=\"text-center pt-2\">No Budget Summery Available</p>\n    </ng-template>\n  </nb-card-body>\n</nb-card>\n","import { ViewBudgetSummeryComponent } from './view-budget-summery.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: ViewBudgetSummeryComponent },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ViewBudgetSummeryRoutingModule {}\n","import { DateService } from './../../../../services/shared-services/date.service';\r\nimport { BranchService } from './../../../../services/branch.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { BudgetService } from '../../../../services/budget.service';\r\nimport { BudgetModel } from '../../../../models/budget.model';\r\n\r\n@Component({\r\n  selector: 'ngx-view-budget-summery',\r\n  templateUrl: './view-budget-summery.component.html',\r\n  styleUrls: ['./view-budget-summery.component.scss'],\r\n})\r\nexport class ViewBudgetSummeryComponent implements OnInit {\r\n  loading: boolean;\r\n  budgetSummery: BudgetModel[];\r\n\r\n  month: string;\r\n  year: string;\r\n  branchId: string;\r\n\r\n  constructor(\r\n    private budgetService: BudgetService,\r\n    private branchService: BranchService,\r\n    public dateService: DateService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n\r\n    this.budgetSummery = [];\r\n\r\n    this.branchId = this.branchService.getBranchId();\r\n    if (!this.branchId) {\r\n      this.back();\r\n      return;\r\n    }\r\n\r\n    this.month = this.budgetService.getMonth();\r\n    this.year = this.budgetService.getYear();\r\n\r\n    this.searchBudget();\r\n  }\r\n\r\n  getAmount(amount: any) {\r\n    amount = +amount;\r\n    return amount.toFixed(2).toString() + '/-';\r\n  }\r\n\r\n  searchBudget() {\r\n    this.budgetService.getBudgetSummery(this.branchId, this.month, this.year).subscribe(\r\n      (budget: BudgetModel[]) => {\r\n        this.budgetSummery = budget;\r\n        this.loading = false;\r\n      },\r\n      (error: any) => {\r\n        this.loading = false;\r\n      },\r\n    );\r\n  }\r\n\r\n  getTotalIncome() {\r\n    let totalIncome = 0;\r\n    this.budgetSummery.forEach((curBudgetSummery: BudgetModel) => {\r\n      if (curBudgetSummery.type === 'income') {\r\n        totalIncome += curBudgetSummery.amount;\r\n      }\r\n    });\r\n    return totalIncome;\r\n  }\r\n\r\n  getTotalExpense() {\r\n    let totalExpense = 0;\r\n    this.budgetSummery.forEach((curBudgetSummery: BudgetModel) => {\r\n      if (curBudgetSummery.type === 'expense') {\r\n        totalExpense += curBudgetSummery.amount;\r\n      }\r\n    });\r\n    return totalExpense;\r\n  }\r\n\r\n  getTotalBalance() {\r\n    const totalIncomes = this.getTotalIncome();\r\n    const totalExpenses = this.getTotalExpense();\r\n    return totalIncomes - totalExpenses;\r\n  }\r\n\r\n  getDuration() {\r\n    const budgetSummeryLength = this.budgetSummery.length;\r\n    if (budgetSummeryLength > 0) {\r\n      const fromDate = this.dateService.formatDate(this.budgetSummery[0].date);\r\n      const toDate = this.dateService.formatDate(this.budgetSummery[budgetSummeryLength - 1].date);\r\n      return ' From ' + fromDate + ' To ' + toDate;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  print() {\r\n    window.print();\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['../'], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { NbCardModule, NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ViewBudgetSummeryRoutingModule } from './view-budget-summery-routing.module';\nimport { ViewBudgetSummeryComponent } from './view-budget-summery.component';\n\n@NgModule({\n  declarations: [ViewBudgetSummeryComponent],\n  imports: [\n    CommonModule,\n    ViewBudgetSummeryRoutingModule,\n    NbCardModule,\n    NbButtonModule,\n    NbIconModule,\n  ],\n})\nexport class ViewBudgetSummeryModule {}\n"]}