{"version":3,"sources":["webpack:///src/app/employee/branch/assignment/assignment.component.ts","webpack:///src/app/employee/branch/assignment/assignment.module.ts","webpack:///src/app/employee/branch/assignment/assignment-routing.module.ts","webpack:///src/app/employee/branch/assignment/assignment.component.html"],"names":["AssignmentComponent","AssignmentModule","AssignmentRoutingModule","routes","path","component","branchService","branchEmployeeService","lectureService","courseService","batchService","subjectService","router","route","this","loading","branchId","getBranchId","getCourses","subscribe","courses","setCoursesData","error","getBatches","batches","setBatchesData","getBranchEmployeesForBatch","employees","setBranchEmployeesData","back","navigate","relativeTo","deleteCourseData","deleteBatchData","deleteSubjectsData","setSearchDate","children","loadChildren","then","m","BatchAssignmentModule","ManageAssignmentModule","AssignmentSubmissionModule","SaveAssignmentModule","redirectTo","pathMatch","PageNotFoundModule","forChild"],"mappings":"waAiBaA,ECPAC,EC4DAC,E,4GAlEPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WFUSL,EAAN,WAIL,WACUM,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,aAPA,KAAAP,gBACA,KAAAC,wBACA,KAAAC,iBACA,KAAAC,gBACA,KAAAC,eACA,KAAAC,iBACA,KAAAC,SACA,KAAAC,Q,UAZL,O,EAAA,G,EAAA,uBAeL,WAAU,WACRC,KAAKC,WACLD,KAAKE,SAAWF,KAAKR,cAAcW,cAC9BH,KAAKE,UAKVF,KAAKL,cAAcS,WAAWJ,KAAKE,SAAU,IAAIG,WAC9CC,YACCN,EAAKL,cAAcY,eAAeD,GAClCN,EAAKC,cAENO,gBAGHR,KAAKJ,aAAaa,WAAWT,KAAKE,SAAU,GAAI,IAAIG,WACjDK,YACCV,EAAKJ,aAAae,eAAeD,MAElCF,gBAGHR,KAAKP,sBAAsBmB,2BAA2BZ,KAAKE,SAAU,WAAWG,WAC7EQ,YACCb,EAAKP,sBAAsBqB,uBAAuBD,GAClDb,EAAKC,cAENO,YACCR,EAAKe,WAzBPf,KAAKe,SAnBJ,kBAiDL,WACEf,KAAKF,OAAOkB,SAAS,CAAC,OAAQ,CAAEC,WAAYjB,KAAKD,UAlD9C,yBAqDL,WACEC,KAAKL,cAAcuB,mBACnBlB,KAAKJ,aAAauB,kBAClBnB,KAAKH,eAAeuB,qBACpBpB,KAAKN,eAAe2B,cAAc,W,2BAzD/B,K,sCAAMnC,GAAmB,kT,mDAAnBA,EAAmB,0EGjBhC,6C,kCDQIoC,SAAU,CACR,CACEhC,KAAM,QACNiC,aAAc,kBACZ,kCAAqDC,MAAMC,YAACA,OAAKA,EAAEC,2BAGvE,CACEpC,KAAM,SACNiC,aAAc,kBACZ,wDAAuDC,MACpDC,YAACA,OAAKA,EAAEE,4BAIf,CACErC,KAAM,aACNiC,aAAc,kBACZ,wDAA+DC,MAC5DC,YAACA,OAAKA,EAAEG,gCAIf,CACEtC,KAAM,MACNiC,aAAc,kBACZ,uDAAmDC,MAAMC,YAACA,OAAKA,EAAEI,0BAGrE,CACEvC,KAAM,OACNiC,aAAc,kBACZ,uDAAmDC,MAAMC,YAACA,OAAKA,EAAEI,0BAGrE,CACEvC,KAAM,GACNwC,WAAY,QACZC,UAAW,QAGb,CACEzC,KAAM,iBACNiC,aAAc,kBACZ,iCAA+DC,MAC5DC,YAACA,OAAKA,EAAEO,wBAIf,CACE1C,KAAM,KACNwC,WAAY,iBACZC,UAAW,WAUZ,IAAM3C,EAAN,yB,gDAAMA,I,+EAAAA,IAAuB,SAHzB,CAAC,IAAa6C,SAAS5C,IACtB,O,GD1DL,IAAMF,EAAN,yB,gDAAMA,I,+EAAAA,IAAgB,SAFlB,CAAC,IAAc,M","file":"x","sourcesContent":["import { SubjectService } from './../../../services/subject.service';\nimport { LectureService } from './../../../services/lecture.service';\nimport { BranchEmployeeService } from './../../../services/branch-employee.service';\nimport { BranchEmployeeModel } from './../../../models/branch-employee.model';\nimport { BatchModel } from './../../../models/batch.model';\nimport { CourseModel } from './../../../models/course.model';\nimport { CourseService } from './../../../services/course.service';\nimport { BatchService } from './../../../services/batch.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { BranchService } from './../../../services/branch.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'ngx-assignment',\n  templateUrl: './assignment.component.html',\n  styleUrls: ['./assignment.component.scss'],\n})\nexport class AssignmentComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  private branchId: string;\n\n  constructor(\n    private branchService: BranchService,\n    private branchEmployeeService: BranchEmployeeService,\n    private lectureService: LectureService,\n    private courseService: CourseService,\n    private batchService: BatchService,\n    private subjectService: SubjectService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.courseService.getCourses(this.branchId, '').subscribe(\n      (courses: CourseModel[]) => {\n        this.courseService.setCoursesData(courses);\n        this.loading = false;\n      },\n      (error: any) => {},\n    );\n\n    this.batchService.getBatches(this.branchId, '', '').subscribe(\n      (batches: BatchModel[]) => {\n        this.batchService.setBatchesData(batches);\n      },\n      (error: any) => {},\n    );\n\n    this.branchEmployeeService.getBranchEmployeesForBatch(this.branchId, 'teacher').subscribe(\n      (employees: BranchEmployeeModel[]) => {\n        this.branchEmployeeService.setBranchEmployeesData(employees);\n        this.loading = false;\n      },\n      (error: any) => {\n        this.back();\n      },\n    );\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  ngOnDestroy() {\n    this.courseService.deleteCourseData();\n    this.batchService.deleteBatchData();\n    this.subjectService.deleteSubjectsData();\n    this.lectureService.setSearchDate(null);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AssignmentRoutingModule } from './assignment-routing.module';\nimport { AssignmentComponent } from './assignment.component';\n\n@NgModule({\n  declarations: [AssignmentComponent],\n  imports: [CommonModule, AssignmentRoutingModule],\n})\nexport class AssignmentModule {}\n","import { AssignmentComponent } from './assignment.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AssignmentComponent,\n    children: [\n      {\n        path: 'batch',\n        loadChildren: () =>\n          import('./batch-assignment/batch-assignment.module').then((m) => m.BatchAssignmentModule),\n      },\n\n      {\n        path: 'manage',\n        loadChildren: () =>\n          import('./manage-assignment/manage-assignment.module').then(\n            (m) => m.ManageAssignmentModule,\n          ),\n      },\n\n      {\n        path: 'submission',\n        loadChildren: () =>\n          import('./assignment-submission/assignment-submission.module').then(\n            (m) => m.AssignmentSubmissionModule,\n          ),\n      },\n\n      {\n        path: 'add',\n        loadChildren: () =>\n          import('./save-assignment/save-assignment.module').then((m) => m.SaveAssignmentModule),\n      },\n\n      {\n        path: 'edit',\n        loadChildren: () =>\n          import('./save-assignment/save-assignment.module').then((m) => m.SaveAssignmentModule),\n      },\n\n      {\n        path: '',\n        redirectTo: 'batch',\n        pathMatch: 'full',\n      },\n\n      {\n        path: 'page-not-found',\n        loadChildren: () =>\n          import('../../../shared/page-not-found/page-not-found.module').then(\n            (m) => m.PageNotFoundModule,\n          ),\n      },\n\n      {\n        path: '**',\n        redirectTo: 'page-not-found',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AssignmentRoutingModule {}\n","<router-outlet></router-outlet>\n"]}