{"version":3,"sources":["webpack:///src/app/employee/branch/exam/online-test/online-test-question/manage-online-test-questions/manage-online-test-questions.component.html","webpack:///src/app/employee/branch/exam/online-test/online-test-question/manage-online-test-questions/manage-online-test-questions-routing.module.ts","webpack:///src/app/employee/branch/exam/online-test/online-test-question/manage-online-test-questions/manage-online-test-questions.component.ts","webpack:///src/app/employee/branch/exam/online-test/online-test-question/manage-online-test-questions/manage-online-test-questions.module.ts"],"names":["ManageOnlineTestQuestionsComponent","ManageOnlineTestQuestionsModule","ManageOnlineTestQuestionsRoutingModule","routes","path","component","branchService","toastrService","onlineExamService","onlineExamQuestionService","router","route","this","loading","branchId","getBranchId","onlineExamQuestions","getOnlineExamData","subscribe","onlineExam","getOnlineExamQuestions","_id","error","showToastr","back","navigate","relativeTo","onlineExamQuestion","setOnlineExamQuestionId","setOnlineExamQuestionData","queryParams","mode","id","status","i","changeOnlineExamQuestionStatus","res","deleteOnlineExamQuestion","splice","position","message","show","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","forChild"],"mappings":"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","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <button class=\"float-right\" nbButton size=\"small\" status=\"warning\" (click)=\"back()\">\n          Back\n        </button>\n        <h3>Online Exam Questions</h3>\n      </div>\n    </div>\n  </nb-card-header>\n</nb-card>\n\n<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h5>\n          Add {{ onlineExam.totalQuestions - onlineExamQuestions.length }} more Questions\n          <small>of {{ onlineExam.totalQuestions }}</small>\n        </h5>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button\n          nbButton\n          size=\"small\"\n          fullWidth\n          status=\"primary\"\n          (click)=\"addOnlineExamQuestion()\"\n          *ngIf=\"onlineExamQuestions.length <= onlineExam.totalQuestions\"\n        >\n          Add Question <nb-icon icon=\"plus-circle-outline\"></nb-icon>\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body class=\"body-container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ng-container *ngIf=\"!loading; else loadingData\">\n          <div class=\"table-responsive\" *ngIf=\"onlineExamQuestions.length > 0; else noBatches\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Question</th>\n                  <th colspan=\"2\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let question of onlineExamQuestions; let i = index\">\n                  <td>{{ i + 1 }}</td>\n                  <td>\n                    <span>{{\n                      question.question.substring(0, 15) +\n                        (question.question.length > 15 ? '..' : '')\n                    }}</span>\n                  </td>\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      status=\"primary\"\n                      (click)=\"editOnlineExamQuestion(question)\"\n                    >\n                      Edit\n                    </button>\n                  </td>\n                  <!-- <td>\n                    <button\n                      nbButton size=\"small\"  \n                      [status]=\"question.status ? 'success' : 'danger'\"\n                      \n                      (click)=\"changeOnlineExamQuestionStatus(question._id, !question.status, i)\"\n                    >\n                      {{ question.status ? 'Inactive' : 'Active' }}\n                    </button>\n                  </td> -->\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      status=\"danger\"\n                      (click)=\"deleteOnlineExamQuestion(question._id, i)\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ng-template #noBatches>\n            <p class=\"text-center pt-5 pb-5\">No Online Exams Available</p>\n          </ng-template>\n        </ng-container>\n        <ng-template #loadingData>\n          <p class=\"text-center pt-5 pb-5\">Loading...</p>\n        </ng-template>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n","import { ManageOnlineTestQuestionsComponent } from './manage-online-test-questions.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: ManageOnlineTestQuestionsComponent },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageOnlineTestQuestionsRoutingModule {}\n","import { OnlineExamQuestionService } from './../../../../../../services/online-exam-question.service';\nimport { NbToastrService } from '@nebular/theme';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { OnlineExamService } from './../../../../../../services/online-exam.service';\nimport { OnlineExamQuestionModel } from './../../../../../../models/online-exam-question.model';\nimport { OnlineExamModel } from './../../../../../../models/online-exam.model';\nimport { BranchService } from './../../../../../../services/branch.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'ngx-manage-online-test-questions',\n  templateUrl: './manage-online-test-questions.component.html',\n  styleUrls: ['./manage-online-test-questions.component.scss'],\n})\nexport class ManageOnlineTestQuestionsComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  branchId: string;\n\n  onlineExam: OnlineExamModel;\n  onlineExamQuestions: OnlineExamQuestionModel[];\n\n  constructor(\n    private branchService: BranchService,\n    private toastrService: NbToastrService,\n    private onlineExamService: OnlineExamService,\n    private onlineExamQuestionService: OnlineExamQuestionService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.router.navigate(['../'], { relativeTo: this.route });\n      return;\n    }\n\n    this.onlineExamQuestions = [];\n\n    this.onlineExamService.getOnlineExamData().subscribe((onlineExam: OnlineExamModel) => {\n      this.onlineExam = onlineExam;\n\n      if (!onlineExam) {\n        this.back();\n        return;\n      }\n\n      this.onlineExamQuestionService.getOnlineExamQuestions(onlineExam._id).subscribe(\n        (onlineExamQuestions: OnlineExamQuestionModel[]) => {\n          this.onlineExamQuestions = onlineExamQuestions;\n          this.loading = false;\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n\n          this.loading = false;\n        },\n      );\n    });\n  }\n\n  addOnlineExamQuestion() {\n    this.router.navigate(['../add'], { relativeTo: this.route });\n  }\n\n  editOnlineExamQuestion(onlineExamQuestion: OnlineExamQuestionModel) {\n    this.onlineExamQuestionService.setOnlineExamQuestionId(onlineExamQuestion._id);\n    this.onlineExamQuestionService.setOnlineExamQuestionData(onlineExamQuestion);\n    this.router.navigate(['../edit'], { relativeTo: this.route, queryParams: { mode: 'edit' } });\n  }\n\n  changeOnlineExamQuestionStatus(id: string, status: boolean, i: number) {\n    this.loading = true;\n    this.onlineExamQuestionService.changeOnlineExamQuestionStatus(id, status).subscribe(\n      (res: any) => {\n        this.onlineExamQuestions[i].status = status;\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  deleteOnlineExamQuestion(id: string, i: number) {\n    this.loading = true;\n    this.onlineExamQuestionService.deleteOnlineExamQuestion(id).subscribe(\n      (res: any) => {\n        this.onlineExamQuestions.splice(i, 1);\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  back() {\n    this.router.navigate(['../../manage'], { relativeTo: this.route });\n  }\n\n  ngOnDestroy() {}\n}\n","import { NbCardModule, NbSelectModule, NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { ManageOnlineTestQuestionsComponent } from './manage-online-test-questions.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageOnlineTestQuestionsRoutingModule } from './manage-online-test-questions-routing.module';\n\n@NgModule({\n  declarations: [ManageOnlineTestQuestionsComponent],\n  imports: [\n    CommonModule,\n    ManageOnlineTestQuestionsRoutingModule,\n    NbCardModule,\n    NbSelectModule,\n    NbButtonModule,\n    NbIconModule,\n  ],\n})\nexport class ManageOnlineTestQuestionsModule {}\n"]}