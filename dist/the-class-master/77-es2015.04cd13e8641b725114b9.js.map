{"version":3,"sources":["webpack:///src/app/employee/branch/branch-header/branch-header.component.ts","webpack:///src/app/employee/branch/branch.component.html","webpack:///src/app/employee/branch/branch-routing.module.ts","webpack:///src/app/employee/branch/branch.component.ts","webpack:///src/app/employee/branch/branch.module.ts"],"names":["BranchHeaderComponent","branchService","router","route","this","loading","branchId","getBranchId","getBranch","subscribe","branch","setBranchData","err","navigate","relativeTo","routes","path","component","BranchComponent","toastrService","checkBranchStatus","branchStatus","activated","showToastr","error","position","status","message","show","deleteBranchId","deleteBranchData","children","loadChildren","then","m","DashboardModule","ManageBranchModule","SalaryModule","MyLeaveModule","ScheduleModule","LectureModule","AssignmentModule","LeadModule","ExamModule","BudgetModule","StudentModule","StudentsReportModule","EmployeeModule","LeaveModule","redirectTo","pathMatch","PageNotFoundModule","BranchRoutingModule","forChild","BranchModule"],"mappings":"kNAUO,Y,MAAMA,EAIX,YACUC,EACAC,EACAC,GAFA,KAAAF,gBACA,KAAAC,SACA,KAAAC,QAGV,WACEC,KAAKC,SAAU,EACfD,KAAKE,SAAWF,KAAKH,cAAcM,cAC9BH,KAAKE,SAKVF,KAAKH,cAAcO,UAAUJ,KAAKE,UAAUG,UACzCC,IACCN,KAAKM,OAASA,EACdN,KAAKH,cAAcU,cAAcD,GACjCN,KAAKC,SAAU,GAEhBO,OAVDR,KAAKF,OAAOW,SAAS,CAAC,qBAAsB,CAAEC,WAAYV,KAAKD,S,6CAdxDH,GAAqB,oH,mDAArBA,EAAqB,wF,GAA3B,G,qBCTP,4CCGA,MAAMe,EAAiB,CACrB,CACEC,KAAM,GACNC,UCGG,M,MAAMC,EAIX,YACUjB,EACAkB,EACAjB,EACAC,GAHA,KAAAF,gBACA,KAAAkB,gBACA,KAAAjB,SACA,KAAAC,QAGV,WACEC,KAAKC,SAAU,EAEfD,KAAKE,SAAWF,KAAKH,cAAcM,cAC9BH,KAAKE,SAKVF,KAAKH,cAAcmB,kBAAkBhB,KAAKE,UAAUG,UACjDY,IACKA,EAAaC,UACflB,KAAKC,SAAU,GAEfD,KAAKmB,WAAW,YAAa,SAAU,0BACvCnB,KAAKF,OAAOW,SAAS,CAAC,qBAAsB,CAAEC,WAAYV,KAAKD,UAGlEqB,IACCpB,KAAKmB,WAAW,YAAa,SAAUC,GACvCpB,KAAKF,OAAOW,SAAS,CAAC,qBAAsB,CAAEC,WAAYV,KAAKD,UAfjEC,KAAKF,OAAOW,SAAS,CAAC,qBAAsB,CAAEC,WAAYV,KAAKD,QAoB3D,WAAWsB,EAAeC,EAAaC,GAC7CvB,KAAKe,cAAcS,KAAKF,EAAQC,EAAS,CACvCF,WACAC,WAIJ,cACEtB,KAAKH,cAAc4B,iBACnBzB,KAAKH,cAAc6B,oB,6CA7CVZ,GAAe,2J,mDAAfA,EAAe,2FFV5B,gDACA,sD,MAAe,2E,wCESR,GDFHa,SAAU,CACR,CACEf,KAAM,YACNgB,aAAc,IAAM,+DAAuCC,KAAMC,GAAMA,EAAEC,kBAG3E,CACEnB,KAAM,gBACNgB,aAAc,IACZ,mCAA+CC,KAAMC,GAAMA,EAAEE,qBAGjE,CACEpB,KAAM,YACNgB,aAAc,IAAM,mCAAiCC,KAAMC,GAAMA,EAAEG,eAGrE,CACErB,KAAM,WACNgB,aAAc,IAAM,yDAAqCC,KAAMC,GAAMA,EAAEI,gBAGzE,CACEtB,KAAM,WACNgB,aAAc,IAAM,yDAAqCC,KAAMC,GAAMA,EAAEK,iBAGzE,CACEvB,KAAM,UACNgB,aAAc,IAAM,yDAAmCC,KAAMC,GAAMA,EAAEM,gBAGvE,CACExB,KAAM,aACNgB,aAAc,IACZ,wDAAyCC,KAAMC,GAAMA,EAAEO,mBAG3D,CACEzB,KAAM,OACNgB,aAAc,IAAM,wDAA6BC,KAAMC,GAAMA,EAAEQ,aAGjE,CACE1B,KAAM,OACNgB,aAAc,IAAM,kCAA6BC,KAAMC,GAAMA,EAAES,aAGjE,CACE3B,KAAM,SACNgB,aAAc,IAAM,kCAAiCC,KAAMC,GAAMA,EAAEU,eAGrE,CACE5B,KAAM,UACNgB,aAAc,IAAM,yDAAmCC,KAAMC,GAAMA,EAAEW,gBAGvE,CACE7B,KAAM,kBACNgB,aAAc,IACZ,mCAAmDC,KAAMC,GAAMA,EAAEY,uBAGrE,CACE9B,KAAM,WACNgB,aAAc,IAAM,wDAAqCC,KAAMC,GAAMA,EAAEa,iBAGzE,CACE/B,KAAM,QACNgB,aAAc,IAAM,yDAA+BC,KAAMC,GAAMA,EAAEc,cAGnE,CACEhC,KAAM,GACNiC,WAAY,YACZC,UAAW,QAGb,CACElC,KAAM,iBACNgB,aAAc,IACZ,iCAA4DC,KACzDC,GAAMA,EAAEiB,qBAIf,CACEnC,KAAM,KACNiC,WAAY,iBACZC,UAAW,WAUZ,Y,MAAME,G,yDAAAA,I,+EAAAA,IAAmB,SAHrB,CAAC,IAAaC,SAAStC,IACtB,O,GAEL,GEjGA,Q,MAAMuC,G,yDAAAA,I,+EAAAA,IAAY,SAFd,CAAC,IAAc,EAAqB,IAAc,S,GAEtD","file":"x","sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\nimport { BranchModel } from './../../../models/branch.model';\nimport { Component, OnInit } from '@angular/core';\nimport { BranchService } from './../../../services/branch.service';\n\n@Component({\n  selector: 'ngx-branch-header',\n  templateUrl: './branch-header.component.html',\n  styleUrls: ['./branch-header.component.scss'],\n})\nexport class BranchHeaderComponent implements OnInit {\n  loading: boolean;\n  branchId: string;\n  branch: BranchModel;\n  constructor(\n    private branchService: BranchService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.router.navigate(['../page-not-found'], { relativeTo: this.route });\n      return;\n    }\n\n    this.branchService.getBranch(this.branchId).subscribe(\n      (branch: BranchModel) => {\n        this.branch = branch;\n        this.branchService.setBranchData(branch);\n        this.loading = false;\n      },\n      (err: any) => {\n        // this.router.navigate(['../page-not-found'], { relativeTo: this.route });\n      },\n    );\n  }\n}\n","<ngx-branch-header></ngx-branch-header>\n<router-outlet *ngIf=\"!loading\"></router-outlet>\n","import { BranchComponent } from './branch.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BranchComponent,\n    children: [\n      {\n        path: 'dashboard',\n        loadChildren: () => import('./dashboard/dashboard.module').then((m) => m.DashboardModule),\n      },\n\n      {\n        path: 'manage-branch',\n        loadChildren: () =>\n          import('./manage-branch/manage-branch.module').then((m) => m.ManageBranchModule),\n      },\n\n      {\n        path: 'my-salary',\n        loadChildren: () => import('./salary/salary.module').then((m) => m.SalaryModule),\n      },\n\n      {\n        path: 'my-leave',\n        loadChildren: () => import('./my-leave/my-leave.module').then((m) => m.MyLeaveModule),\n      },\n\n      {\n        path: 'schedule',\n        loadChildren: () => import('./schedule/schedule.module').then((m) => m.ScheduleModule),\n      },\n\n      {\n        path: 'lecture',\n        loadChildren: () => import('./lecture/lecture.module').then((m) => m.LectureModule),\n      },\n\n      {\n        path: 'assignment',\n        loadChildren: () =>\n          import('./assignment/assignment.module').then((m) => m.AssignmentModule),\n      },\n\n      {\n        path: 'lead',\n        loadChildren: () => import('./lead/lead.module').then((m) => m.LeadModule),\n      },\n\n      {\n        path: 'exam',\n        loadChildren: () => import('./exam/exam.module').then((m) => m.ExamModule),\n      },\n\n      {\n        path: 'budget',\n        loadChildren: () => import('./budget/budget.module').then((m) => m.BudgetModule),\n      },\n\n      {\n        path: 'student',\n        loadChildren: () => import('./student/student.module').then((m) => m.StudentModule),\n      },\n\n      {\n        path: 'students-report',\n        loadChildren: () =>\n          import('./students-report/students-report.module').then((m) => m.StudentsReportModule),\n      },\n\n      {\n        path: 'employee',\n        loadChildren: () => import('./employee/employee.module').then((m) => m.EmployeeModule),\n      },\n\n      {\n        path: 'leave',\n        loadChildren: () => import('./leave/leave.module').then((m) => m.LeaveModule),\n      },\n\n      {\n        path: '',\n        redirectTo: 'dashboard',\n        pathMatch: 'full',\n      },\n\n      {\n        path: 'page-not-found',\n        loadChildren: () =>\n          import('../../shared/page-not-found/page-not-found.module').then(\n            (m) => m.PageNotFoundModule,\n          ),\n      },\n\n      {\n        path: '**',\n        redirectTo: 'page-not-found',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BranchRoutingModule {}\n","import { NbToastrService } from '@nebular/theme';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BranchService } from './../../services/branch.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'ngx-branch',\n  templateUrl: './branch.component.html',\n  styleUrls: ['./branch.component.scss'],\n})\nexport class BranchComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  branchId: string;\n\n  constructor(\n    private branchService: BranchService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.router.navigate(['../page-not-found'], { relativeTo: this.route });\n      return;\n    }\n\n    this.branchService.checkBranchStatus(this.branchId).subscribe(\n      (branchStatus: { activated: boolean }) => {\n        if (branchStatus.activated) {\n          this.loading = false;\n        } else {\n          this.showToastr('top-right', 'danger', 'Please Activate Branch');\n          this.router.navigate(['../page-not-found'], { relativeTo: this.route });\n        }\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.router.navigate(['../page-not-found'], { relativeTo: this.route });\n      },\n    );\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  ngOnDestroy() {\n    this.branchService.deleteBranchId();\n    this.branchService.deleteBranchData();\n  }\n}\n","import { NbCardModule, NbUserModule } from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BranchRoutingModule } from './branch-routing.module';\nimport { BranchComponent } from './branch.component';\nimport { BranchHeaderComponent } from './branch-header/branch-header.component';\n\n@NgModule({\n  declarations: [BranchComponent, BranchHeaderComponent],\n  imports: [CommonModule, BranchRoutingModule, NbCardModule, NbUserModule],\n})\nexport class BranchModule {}\n"]}