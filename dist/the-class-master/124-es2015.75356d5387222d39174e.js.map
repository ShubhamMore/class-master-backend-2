{"version":3,"sources":["webpack:///src/app/employee/branch/salary/manage-salary/manage-salary.component.html","webpack:///src/app/employee/branch/salary/manage-salary/manage-salary-routing.module.ts","webpack:///src/app/employee/branch/salary/manage-salary/manage-salary.component.ts","webpack:///src/app/employee/branch/salary/manage-salary/manage-salary.module.ts"],"names":["routes","path","component","ManageSalaryComponent","toastrService","dateService","employeeSalaryService","branchService","router","route","this","loading","branchId","getBranchId","months","getMonths","years","getYears","month","getDate","getMonth","toString","padStart","year","length","getEmployeeSalary","back","getMyBranchSalaries","subscribe","employeeSalaries","error","showToastr","employeeSalary","setEmployeeSalaryId","_id","setEmployeeSalaryData","navigate","relativeTo","position","status","message","show","onSelectYear","onSelectMonth","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","ManageSalaryRoutingModule","forChild","ManageSalaryModule"],"mappings":"0QAiBU,gDAAqD,yBAAU,+B,yBAAzB,qCAAe,iE,yBAcrD,gDAAgE,yBAE9D,+B,yBAFsC,6CAAwB,uE,kEAuB1D,sCACE,sCAAI,yBAAW,8BACf,sCAAI,yBAAiD,8BACrD,sCACE,yBACA,wCAAM,gCAAM,8BACZ,yBACF,8BACA,uCAAI,0BAA8B,8BAElC,uCACE,8CAIE,kKAEA,mCACF,8BACF,8BACF,8B,wEAnBM,kEACA,+FAEF,oHAEA,8EAEE,2E,yBApBZ,0CACE,4CACE,yCACE,sCACE,sCAAI,6BAAC,8BACL,sCAAI,gCAAI,8BACR,sCAAI,sCAAU,8BACd,uCAAI,uCAAU,8BACd,uCAAI,mCAAM,8BACZ,8BACF,8BACA,0CACE,6CAqBF,8BACF,8BACF,+B,6CAvBU,sF,sBAyBR,wCAAiC,iDAAqB,+B,yBAtC1D,0CACE,6CAoCA,+FAGF,wC,4EAvCgC,0FAAmD,e,sBAyCjF,wCAAiC,sCAAU,+BC/ErD,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCMG,M,MAAMC,EAYX,YACUC,EACDC,EACCC,EACAC,EACAC,EACAC,GALA,KAAAL,gBACD,KAAAC,cACC,KAAAC,wBACA,KAAAC,gBACA,KAAAC,SACA,KAAAC,QAGV,WACEC,KAAKC,SAAU,EACfD,KAAKE,SAAWF,KAAKH,cAAcM,cAC9BH,KAAKE,UAKVF,KAAKI,OAASJ,KAAKL,YAAYU,YAC/BL,KAAKM,MAAQN,KAAKL,YAAYY,WAE9BP,KAAKQ,OAASR,KAAKL,YAAYc,UAAUC,WAAa,GAAGC,WAAWC,SAAS,EAAG,KAChFZ,KAAKa,KAAOb,KAAKM,MAAMN,KAAKM,MAAMQ,OAAS,GAE3Cd,KAAKe,qBAVHf,KAAKgB,OAaT,cAAcR,GACZR,KAAKQ,MAAQA,EACbR,KAAKe,oBAGP,aAAaF,GACXb,KAAKa,KAAOA,EACC,KAATA,IACFb,KAAKQ,MAAQ,IAEfR,KAAKe,oBAGP,oBACEf,KAAKC,SAAU,EAEfD,KAAKJ,sBAAsBqB,oBAAoBjB,KAAKE,SAAUF,KAAKQ,MAAOR,KAAKa,MAAMK,UAClFC,IACCnB,KAAKmB,iBAAmBA,EACxBnB,KAAKC,SAAU,GAEhBmB,IACCpB,KAAKqB,WAAW,YAAa,SAAUD,GACvCpB,KAAKC,SAAU,IAKrB,mBAAmBqB,GACjBtB,KAAKJ,sBAAsB2B,oBAAoBD,EAAeE,KAC9DxB,KAAKJ,sBAAsB6B,sBAAsBH,GACjDtB,KAAKF,OAAO4B,SAAS,CAAC,WAAY,CAAEC,WAAY3B,KAAKD,QAG/C,WAAW6B,EAAeC,EAAaC,GAC7C9B,KAAKN,cAAcqC,KAAKF,EAAQC,EAAS,CACvCF,WACAC,WAIJ,OACE7B,KAAKF,OAAO4B,SAAS,CAAC,OAAQ,CAAEC,WAAY3B,KAAKD,QAGnD,gB,6CAnFWN,GAAqB,uO,mDAArBA,EAAqB,qsB,GAAA,MFblC,2CACE,kDACE,yCACE,yCACE,sCAAI,uCAAW,8BACjB,8BAEA,yCACE,+CAME,+DAAkB,EAAAuC,aAAA,MAElB,+CAAoB,qCAAS,8BAC7B,kDACF,8BACF,8BAEA,0CACE,gDAME,+DAAkB,EAAAC,cAAA,MAElB,gDAAoB,uCAAU,8BAC9B,kDAGF,8BACF,8BACF,8BACF,8BACA,mDACE,0CACE,0CACE,qDAyCA,gGAGF,8BACF,8BACF,8BACF,+B,4CA7EU,yEAMW,yEAQX,0EAMW,0EAUC,yEAAkC,gB,gEE5BjD,IDHL,CACE1C,KAAM,iBACN2C,aAAc,IACZ,iCAAkEC,KAC/DC,GAAMA,EAAEC,qBAIf,CACE9C,KAAM,KACN+C,WAAY,iBACZC,UAAW,SAQR,Y,MAAMC,G,yDAAAA,I,+EAAAA,IAAyB,SAH3B,CAAC,IAAaC,SAASnD,IACtB,O,GAEL,GEJA,Q,MAAMoD,G,yDAAAA,I,+EAAAA,IAAkB,SAVpB,CACP,IACA,EACA,IACA,IACA,KACA,IACA,S,GAGG","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-6 col-sm-4\">\n        <h3>My Salaries</h3>\n      </div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-year\"\n          name=\"year\"\n          [selected]=\"year\"\n          fullWidth\n          placeholder=\"All Years\"\n          (selectedChange)=\"onSelectYear($event)\"\n        >\n          <nb-option value=\"\">All Years</nb-option>\n          <nb-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</nb-option>\n        </nb-select>\n      </div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-month\"\n          name=\"month\"\n          [selected]=\"month\"\n          fullWidth\n          placeholder=\"All Months\"\n          (selectedChange)=\"onSelectMonth($event)\"\n        >\n          <nb-option value=\"\">All Months</nb-option>\n          <nb-option *ngFor=\"let month of months\" [value]=\"month.monthNo\">{{\n            month.month\n          }}</nb-option>\n        </nb-select>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body class=\"body-container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ng-container *ngIf=\"!loading; else loadingData\">\n          <div class=\"table-responsive\" *ngIf=\"employeeSalaries.length > 0; else noBatches\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Date</th>\n                  <th>Month/Year</th>\n                  <th>Net Salary</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let employeeSalary of employeeSalaries; let i = index\">\n                  <td>{{ i + 1 }}</td>\n                  <td>{{ dateService.formatDate(employeeSalary.date) }}</td>\n                  <td>\n                    {{ dateService.getMonthByMonthNumber(employeeSalary.month) }}\n                    <span>&nbsp;</span>\n                    {{ employeeSalary.year }}\n                  </td>\n                  <td>{{ employeeSalary.netSalary }}</td>\n\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      status=\"primary\"\n                      (click)=\"viewEmployeeSalary(employeeSalary)\"\n                    >\n                      View\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ng-template #noBatches>\n            <p class=\"text-center pt-5 pb-5\">No Salaries Available</p>\n          </ng-template>\n        </ng-container>\n        <ng-template #loadingData>\n          <p class=\"text-center pt-5 pb-5\">Loading...</p>\n        </ng-template>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n","import { ManageSalaryComponent } from './manage-salary.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageSalaryComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageSalaryRoutingModule {}\n","import { BranchService } from './../../../../services/branch.service';\nimport { EmployeeSalaryModel } from './../../../../models/employee-salary.model';\nimport { DateService, Month } from './../../../../services/shared-services/date.service';\nimport { EmployeeSalaryService } from './../../../../services/employee-salary.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NbToastrService } from '@nebular/theme';\n\n@Component({\n  selector: 'ngx-manage-salary',\n  templateUrl: './manage-salary.component.html',\n  styleUrls: ['./manage-salary.component.scss'],\n})\nexport class ManageSalaryComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  branchId: string;\n\n  employeeSalaries: EmployeeSalaryModel[];\n\n  months: Month[];\n  month: string;\n\n  years: string[];\n  year: string;\n\n  constructor(\n    private toastrService: NbToastrService,\n    public dateService: DateService,\n    private employeeSalaryService: EmployeeSalaryService,\n    private branchService: BranchService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.months = this.dateService.getMonths();\n    this.years = this.dateService.getYears();\n\n    this.month = (this.dateService.getDate().getMonth() + 1).toString().padStart(2, '0');\n    this.year = this.years[this.years.length - 1];\n\n    this.getEmployeeSalary();\n  }\n\n  onSelectMonth(month: string) {\n    this.month = month;\n    this.getEmployeeSalary();\n  }\n\n  onSelectYear(year: string) {\n    this.year = year;\n    if (year === '') {\n      this.month = '';\n    }\n    this.getEmployeeSalary();\n  }\n\n  getEmployeeSalary() {\n    this.loading = true;\n\n    this.employeeSalaryService.getMyBranchSalaries(this.branchId, this.month, this.year).subscribe(\n      (employeeSalaries: EmployeeSalaryModel[]) => {\n        this.employeeSalaries = employeeSalaries;\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  viewEmployeeSalary(employeeSalary: EmployeeSalaryModel) {\n    this.employeeSalaryService.setEmployeeSalaryId(employeeSalary._id);\n    this.employeeSalaryService.setEmployeeSalaryData(employeeSalary);\n    this.router.navigate(['../view'], { relativeTo: this.route });\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  ngOnDestroy() {}\n}\n","import {\n  NbCardModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbIconModule,\n  NbTooltipModule,\n} from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageSalaryRoutingModule } from './manage-salary-routing.module';\nimport { ManageSalaryComponent } from './manage-salary.component';\n\n@NgModule({\n  declarations: [ManageSalaryComponent],\n  imports: [\n    CommonModule,\n    ManageSalaryRoutingModule,\n    NbCardModule,\n    NbButtonModule,\n    NbSelectModule,\n    NbIconModule,\n    NbTooltipModule,\n  ],\n})\nexport class ManageSalaryModule {}\n"]}