{"version":3,"sources":["webpack:///src/app/institute/branch/exam/online-test/manage-online-test/manage-online-test.component.html","webpack:///src/app/institute/branch/exam/online-test/manage-online-test/manage-online-test-routing.module.ts","webpack:///src/app/institute/branch/exam/online-test/manage-online-test/manage-online-test.component.ts","webpack:///src/app/institute/branch/exam/online-test/manage-online-test/manage-online-test.module.ts"],"names":["routes","path","component","ManageOnlineTestComponent","branchService","courseService","batchService","dateService","toastrService","onlineExamService","router","route","this","loading","branchId","getBranchId","onlineExams","getCategoryData","subscribe","category","months","getMonths","years","getYears","month","getDate","getMonth","toString","padStart","year","length","subjects","subject","getCourseData","course","getBatchData","batch","forEach","curSubject","mySubject","find","_id","push","searchOnlineExam","back","getOnlineExams","error","navigate","relativeTo","onlineExam","setOnlineExamId","setOnlineExamData","queryParams","mode","id","status","i","changeOnlineExamStatus","res","showToastr","deleteOnlineExam","splice","position","message","show","addOnlineExam","onSelectSubject","onSelectYear","onSelectMonth","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","ManageOnlineTestRoutingModule","forChild","ManageOnlineTestModule"],"mappings":"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","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>Online Exams</h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button nbButton size=\"small\" fullWidth status=\"primary\" (click)=\"addOnlineExam()\">\n          Add Online Exam <nb-icon icon=\"plus-circle-outline\"></nb-icon>\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n</nb-card>\n\n<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-3 col-sm-4\"></div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-subject\"\n          name=\"subject\"\n          [selected]=\"subject\"\n          fullWidth\n          placeholder=\"All Subjects\"\n          (selectedChange)=\"onSelectSubject($event)\"\n        >\n          <nb-option value=\"\">All Subjects</nb-option>\n          <nb-option *ngFor=\"let subject of subjects\" [value]=\"subject._id\">{{\n            subject.subject\n          }}</nb-option>\n        </nb-select>\n      </div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-year\"\n          name=\"year\"\n          [selected]=\"year\"\n          fullWidth\n          placeholder=\"All Years\"\n          (selectedChange)=\"onSelectYear($event)\"\n        >\n          <nb-option value=\"\">All Years</nb-option>\n          <nb-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</nb-option>\n        </nb-select>\n      </div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-month\"\n          name=\"month\"\n          [selected]=\"month\"\n          fullWidth\n          placeholder=\"All Months\"\n          (selectedChange)=\"onSelectMonth($event)\"\n        >\n          <nb-option value=\"\">All Months</nb-option>\n          <nb-option *ngFor=\"let month of months\" [value]=\"month.monthNo\">{{\n            month.month\n          }}</nb-option>\n        </nb-select>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body class=\"body-container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ng-container *ngIf=\"!loading; else loadingData\">\n          <div class=\"table-responsive\" *ngIf=\"onlineExams.length > 0; else noBatches\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Title</th>\n                  <th>Date</th>\n                  <th>Category</th>\n                  <th>Course</th>\n                  <th>Questions</th>\n                  <th colspan=\"3\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let exam of onlineExams; let i = index\">\n                  <td>{{ i + 1 }}</td>\n                  <td>{{ exam.title }}</td>\n                  <td>{{ dateService.formatDate(exam.date) }}</td>\n                  <td>{{ category.category }}</td>\n                  <td>{{ course.basicDetails.courseName }}</td>\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      status=\"primary\"\n                      (click)=\"onlineExamQuestions(exam)\"\n                    >\n                      Question\n                    </button>\n                  </td>\n                  <td>\n                    <button nbButton size=\"small\" status=\"basic\" (click)=\"editOnlineExam(exam)\">\n                      Edit\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      [status]=\"exam.status ? 'success' : 'danger'\"\n                      (click)=\"changeOnlineExamStatus(exam._id, !exam.status, i)\"\n                    >\n                      {{ exam.status ? 'Inactive' : 'Active' }}\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      status=\"danger\"\n                      (click)=\"deleteOnlineExam(exam._id, i)\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ng-template #noBatches>\n            <p class=\"text-center pt-5 pb-5\">No Online Exams Available</p>\n          </ng-template>\n        </ng-container>\n        <ng-template #loadingData>\n          <p class=\"text-center pt-5 pb-5\">Loading...</p>\n        </ng-template>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n","import { ManageOnlineTestComponent } from './manage-online-test.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: ManageOnlineTestComponent },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageOnlineTestRoutingModule {}\n","import { NbToastrService } from '@nebular/theme';\nimport { CourseService } from './../../../../../services/course.service';\nimport { BatchService } from './../../../../../services/batch.service';\nimport { CategoryModel } from './../../../../../models/branch.model';\nimport { BatchModel } from './../../../../../models/batch.model';\nimport { Month, DateService } from './../../../../../services/shared-services/date.service';\nimport { SubjectModel, CourseModel } from './../../../../../models/course.model';\nimport { Component, OnInit } from '@angular/core';\nimport { OnlineExamService } from './../../../../../services/online-exam.service';\nimport { OnlineExamModel } from './../../../../../models/online-exam.model';\nimport { BranchService } from './../../../../../services/branch.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'ngx-manage-online-test',\n  templateUrl: './manage-online-test.component.html',\n  styleUrls: ['./manage-online-test.component.scss'],\n})\nexport class ManageOnlineTestComponent implements OnInit {\n  loading: boolean;\n  branchId: string;\n\n  onlineExams: OnlineExamModel[];\n\n  category: CategoryModel;\n  course: CourseModel;\n  batch: BatchModel;\n\n  subjects: SubjectModel[];\n  subject: string;\n\n  months: Month[];\n  month: string;\n\n  years: string[];\n  year: string;\n\n  constructor(\n    private branchService: BranchService,\n    private courseService: CourseService,\n    private batchService: BatchService,\n    public dateService: DateService,\n    private toastrService: NbToastrService,\n    private onlineExamService: OnlineExamService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.onlineExams = [];\n\n    this.branchService.getCategoryData().subscribe((category: CategoryModel) => {\n      this.category = category;\n    });\n\n    this.months = this.dateService.getMonths();\n    this.years = this.dateService.getYears();\n\n    this.month = (this.dateService.getDate().getMonth() + 1).toString().padStart(2, '0');\n    this.year = this.years[this.years.length - 1];\n\n    this.subjects = [];\n    this.subject = '';\n\n    this.courseService.getCourseData().subscribe((course: CourseModel) => {\n      this.course = course;\n      this.batchService.getBatchData().subscribe((batch: BatchModel) => {\n        this.batch = batch;\n        if (course && batch) {\n          this.batch.subjects.forEach((curSubject: any) => {\n            const mySubject = this.course.subjects.find(\n              (subject: SubjectModel) => subject._id === curSubject.subject,\n            );\n            this.subjects.push(mySubject);\n          });\n          this.searchOnlineExam();\n        }\n      });\n    });\n  }\n\n  onSelectMonth(month: string) {\n    this.month = month;\n    this.searchOnlineExam();\n  }\n\n  onSelectYear(year: string) {\n    this.year = year;\n    if (year === '') {\n      this.month = '';\n    }\n    this.searchOnlineExam();\n  }\n\n  onSelectSubject(subject: string) {\n    this.subject = subject;\n    this.searchOnlineExam();\n  }\n\n  searchOnlineExam() {\n    this.loading = true;\n    this.onlineExamService\n      .getOnlineExams(\n        this.branchId,\n        this.category._id,\n        this.course._id,\n        this.batch._id,\n        this.subject,\n        this.month,\n        this.year,\n      )\n      .subscribe(\n        (onlineExams: OnlineExamModel[]) => {\n          this.onlineExams = onlineExams;\n          this.loading = false;\n        },\n        (error: any) => {\n          this.loading = false;\n        },\n      );\n  }\n\n  addOnlineExam() {\n    this.router.navigate(['../add'], { relativeTo: this.route });\n  }\n\n  editOnlineExam(onlineExam: OnlineExamModel) {\n    this.onlineExamService.setOnlineExamId(onlineExam._id);\n    this.onlineExamService.setOnlineExamData(onlineExam);\n    this.router.navigate(['../edit'], { relativeTo: this.route, queryParams: { mode: 'edit' } });\n  }\n\n  onlineExamQuestions(onlineExam: OnlineExamModel) {\n    this.onlineExamService.setOnlineExamId(onlineExam._id);\n    this.onlineExamService.setOnlineExamData(onlineExam);\n    this.router.navigate(['../question'], { relativeTo: this.route });\n  }\n\n  changeOnlineExamStatus(id: string, status: boolean, i: number) {\n    this.loading = true;\n    this.onlineExamService.changeOnlineExamStatus(id, status).subscribe(\n      (res: any) => {\n        this.onlineExams[i].status = status;\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  deleteOnlineExam(id: string, i: number) {\n    this.loading = true;\n    this.onlineExamService.deleteOnlineExam(id).subscribe(\n      (res: any) => {\n        this.onlineExams.splice(i, 1);\n        this.loading = false;\n      },\n      (error: any) => {\n        this.loading = false;\n      },\n    );\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n}\n","import { NbCardModule, NbSelectModule, NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { ManageOnlineTestComponent } from './manage-online-test.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageOnlineTestRoutingModule } from './manage-online-test-routing.module';\n\n@NgModule({\n  declarations: [ManageOnlineTestComponent],\n  imports: [\n    CommonModule,\n    ManageOnlineTestRoutingModule,\n    NbCardModule,\n    NbSelectModule,\n    NbButtonModule,\n    NbIconModule,\n  ],\n})\nexport class ManageOnlineTestModule {}\n"]}