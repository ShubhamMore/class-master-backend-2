{"version":3,"sources":["webpack:///src/app/admin/coupon/add-coupon/add-coupon.component.html","webpack:///src/app/admin/coupon/add-coupon/add-coupon.component.ts","webpack:///src/app/admin/coupon/coupon.component.html","webpack:///src/app/admin/coupon/coupon-routing.module.ts","webpack:///src/app/admin/coupon/coupon.component.ts","webpack:///src/app/admin/coupon/coupon.module.ts"],"names":["AddCouponComponent","dateService","couponService","toastrService","ref","this","loading","submit","discountTypes","getDiscountTypes","validCouponCode","getCouponData","subscribe","coupon","couponForm","code","validators","required","discountType","discountAmount","min","expiryDate","description","termsAndConditions","discountPercentageValidator","bind","group","value","invalidDiscountPercentage","checkCoupon","res","status","err","markAllAsTouched","invalid","showToastr","stepper","next","_id","editCoupon","close","type","error","addCoupon","resCoupon","position","message","show","deleteCouponData","onClose","submitCoupon","checkCouponCode","saveCoupon","CouponComponent","CouponModule","CouponRoutingModule","routes","path","component","router","route","dialogService","coupons","getCoupons","push","index","findIndex","curCoupon","open","context","updateCoupon","openCouponDialog","setCouponData","id","deleteCoupon","splice","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","forChild"],"mappings":"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","file":"x","sourcesContent":["<nb-card class=\"coupon-box\">\n  <nb-card-header>\n    <button class=\"float-right\" nbButton size=\"small\" status=\"basic\" (click)=\"onClose()\">\n      <nb-icon icon=\"close-outline\"></nb-icon>\n    </button>\n    <h3 class=\"\">\n      {{ !coupon ? 'Add New Coupon' : 'Edit Coupon ' + (coupon.code | uppercase) }}\n    </h3>\n  </nb-card-header>\n  <nb-card-body>\n    <nb-stepper #stepper [linear]=\"true\">\n      <nb-step [stepControl]=\"couponForm\" label=\"Coupon Details\">\n        <form class=\"\" (submit)=\"submitCoupon()\" [formGroup]=\"couponForm\">\n          <h6>Coupon:</h6>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"form-control-group\">\n                <label class=\"label\" for=\"input-code\">Code:</label>\n                <input\n                  type=\"text\"\n                  nbInput\n                  id=\"input-code\"\n                  name=\"code\"\n                  formControlName=\"code\"\n                  placeholder=\"Code\"\n                  maxlength=\"30\"\n                  fullWidth\n                  [status]=\"\n                    couponForm.get('code').touched\n                      ? couponForm.get('code').invalid || !validCouponCode\n                        ? 'danger'\n                        : 'success'\n                      : 'basic'\n                  \"\n                  (input)=\"checkCouponCode($event.target.value)\"\n                />\n                <ng-container *ngIf=\"couponForm.get('code').touched\">\n                  <p class=\"caption status-danger\" *ngIf=\"couponForm.get('code').errors?.required\">\n                    Code is required!\n                  </p>\n                  <p class=\"caption status-danger\" *ngIf=\"!validCouponCode\">\n                    This Coupon Code Already Exist!\n                  </p>\n                </ng-container>\n              </div>\n            </div>\n\n            <div class=\"col-md-6\">\n              <div class=\"form-control-group\">\n                <label class=\"label\" for=\"input-billing-discount-type\">Discount Type:</label>\n                <nb-select\n                  id=\"input-discount-type\"\n                  name=\"discountType\"\n                  formControlName=\"discountType\"\n                  placeholder=\"Select Discount Type\"\n                  fullWidth\n                  [status]=\"\n                    couponForm.get('discountType').touched\n                      ? couponForm.get('discountType').invalid\n                        ? 'danger'\n                        : 'success'\n                      : 'basic'\n                  \"\n                >\n                  <nb-option value=\"\">Select Discount Type</nb-option>\n                  <nb-option *ngFor=\"let discountType of discountTypes\" [value]=\"discountType\">{{\n                    discountType | uppercase\n                  }}</nb-option>\n                </nb-select>\n                <ng-container *ngIf=\"couponForm.get('discountType').touched\">\n                  <p\n                    class=\"caption status-danger\"\n                    *ngIf=\"couponForm.get('discountType').errors?.required\"\n                  >\n                    Discount Type is required!\n                  </p>\n                </ng-container>\n              </div>\n            </div>\n\n            <div class=\"col-md-6\">\n              <div class=\"form-control-group\">\n                <label class=\"label\" for=\"input-discount-amount\">Discount Amount:</label>\n                <input\n                  type=\"number\"\n                  nbInput\n                  id=\"input-discount-amount\"\n                  name=\"discountAmount\"\n                  min=\"0\"\n                  formControlName=\"discountAmount\"\n                  placeholder=\"Discount {{\n                    couponForm.value.discountType === 'percentage' ? 'Percentage (%)' : 'Amount'\n                  }} \"\n                  fullWidth\n                  [status]=\"\n                    couponForm.get('discountAmount').touched\n                      ? couponForm.get('discountAmount').invalid ||\n                        couponForm.hasError('invalidDiscountPercentage')\n                        ? 'danger'\n                        : 'success'\n                      : 'basic'\n                  \"\n                />\n                <ng-container *ngIf=\"couponForm.get('discountAmount').touched\">\n                  <p\n                    class=\"caption status-danger\"\n                    *ngIf=\"couponForm.get('discountAmount').errors?.required\"\n                  >\n                    Discount Amount is required!\n                  </p>\n                  <p\n                    class=\"caption status-danger\"\n                    *ngIf=\"couponForm.get('discountAmount').errors?.min\"\n                  >\n                    Discount Amount should be more than or equal to 0\n                  </p>\n                  <p\n                    class=\"caption status-danger\"\n                    *ngIf=\"couponForm.hasError('invalidDiscountPercentage')\"\n                  >\n                    Discount Percentage should be between 0% to 100%\n                  </p>\n                </ng-container>\n              </div>\n            </div>\n\n            <div class=\"col-md-6\">\n              <div class=\"form-control-group\">\n                <label class=\"label\" for=\"input-expiry-date\">Expiry Date:</label>\n                <input\n                  type=\"date\"\n                  nbInput\n                  id=\"input-expiry-date\"\n                  name=\"expiryDate\"\n                  [min]=\"dateService.getDateString()\"\n                  formControlName=\"expiryDate\"\n                  placeholder=\"Expiry Date \"\n                  fullWidth\n                />\n              </div>\n            </div>\n\n            <div class=\"col-md-12\">\n              <div class=\"form-control-group\">\n                <label class=\"label\" for=\"input-description\">Description:</label>\n                <textarea\n                  type=\"text\"\n                  nbInput\n                  id=\"input-description\"\n                  name=\"description\"\n                  formControlName=\"description\"\n                  placeholder=\"Description (Optional)\"\n                  fullWidth\n                ></textarea>\n              </div>\n            </div>\n\n            <div class=\"col-md-12\">\n              <div class=\"form-control-group\">\n                <label class=\"label\" for=\"input-terms-and-conditions\">Terms & Conditions:</label>\n                <textarea\n                  type=\"text\"\n                  nbInput\n                  id=\"input-terms-and-conditions\"\n                  name=\"termsAndConditions\"\n                  formControlName=\"termsAndConditions\"\n                  placeholder=\"Terms & Conditions (Optional)\"\n                  fullWidth\n                ></textarea>\n              </div>\n            </div>\n          </div>\n\n          <hr />\n\n          <div class=\"row\">\n            <div class=\"col-md-12 text-right\">\n              <button nbButton size=\"small\" type=\"submit\">\n                <span>Next</span>\n                <nb-icon icon=\"arrow-ios-forward-outline\"></nb-icon>\n              </button>\n            </div>\n          </div>\n        </form>\n      </nb-step>\n\n      <nb-step label=\"Submit\">\n        <div class=\"step-container\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-bordered\">\n              <tbody>\n                <tr>\n                  <th>Coupon Code</th>\n                  <td>{{ couponForm.value.code }}</td>\n                </tr>\n                <tr>\n                  <th>Discount Type</th>\n                  <td>{{ couponForm.value.discountType | uppercase }}</td>\n                </tr>\n                <tr>\n                  <th>Discount Amount</th>\n                  <td>\n                    {{ couponForm.value.discountAmount }}\n                    {{ couponForm.value.discountType === 'percentage' ? '%' : '' }}\n                  </td>\n                </tr>\n                <tr>\n                  <th>Expiry Date</th>\n                  <td>{{ dateService.formatDate(couponForm.value.expiryDate) }}</td>\n                </tr>\n                <tr>\n                  <th>Description</th>\n                  <td>{{ couponForm.value.description }}</td>\n                </tr>\n                <tr>\n                  <th>Terms & Conditions</th>\n                  <td>{{ couponForm.value.termsAndConditions }}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <hr />\n\n          <div class=\"row\">\n            <div class=\"col-6 text-left\">\n              <button class=\"\" nbButton size=\"small\" nbStepperPrevious [disabled]=\"submit\">\n                <nb-icon icon=\"arrow-ios-back-outline\"></nb-icon>\n                <span>prev</span>\n              </button>\n            </div>\n            <div class=\"col-6 text-right\">\n              <button\n                nbButton\n                size=\"small\"\n                (click)=\"saveCoupon()\"\n                [disabled]=\"submit\"\n                [nbSpinner]=\"submit\"\n                nbSpinnerStatus=\"primary\"\n                nbSpinnerSize=\"small\"\n              >\n                <span>Submit</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </nb-step>\n    </nb-stepper>\n  </nb-card-body>\n</nb-card>\n","import { DateService } from './../../../services/shared-services/date.service';\nimport { CouponService } from './../../../services/coupon.service';\nimport { CouponModel } from './../../../models/coupon.model';\nimport { NbDialogRef, NbToastrService, NbStepperComponent } from '@nebular/theme';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'ngx-add-coupon',\n  templateUrl: './add-coupon.component.html',\n  styleUrls: ['./add-coupon.component.scss'],\n})\nexport class AddCouponComponent implements OnInit, OnDestroy {\n  @ViewChild('stepper', { static: false }) stepper: NbStepperComponent;\n\n  loading: boolean;\n  submit: boolean;\n\n  private branchId: string;\n  private couponId: string;\n\n  coupon: CouponModel;\n  couponForm: FormGroup;\n\n  validCouponCode: boolean;\n\n  discountTypes: string[];\n  constructor(\n    public dateService: DateService,\n    private couponService: CouponService,\n    private toastrService: NbToastrService,\n\n    protected ref: NbDialogRef<AddCouponComponent>,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.submit = false;\n\n    this.discountTypes = this.couponService.getDiscountTypes();\n\n    this.validCouponCode = true;\n\n    this.couponService.getCouponData().subscribe((coupon: CouponModel) => {\n      this.coupon = coupon;\n\n      this.couponForm = new FormGroup(\n        {\n          code: new FormControl(coupon ? coupon.code : null, {\n            validators: [Validators.required],\n          }),\n          discountType: new FormControl(coupon ? coupon.discountType : this.discountTypes[0], {\n            validators: [Validators.required],\n          }),\n          discountAmount: new FormControl(coupon ? coupon.discountAmount : null, {\n            validators: [Validators.required, Validators.min(0)],\n          }),\n          expiryDate: new FormControl(coupon ? coupon.expiryDate : null, {\n            validators: [],\n          }),\n          description: new FormControl(coupon ? coupon.description : null, {\n            validators: [],\n          }),\n          termsAndConditions: new FormControl(coupon ? coupon.termsAndConditions : null, {\n            validators: [],\n          }),\n        },\n        {\n          validators: this.discountPercentageValidator.bind(this),\n        },\n      );\n\n      this.loading = false;\n    });\n  }\n\n  discountPercentageValidator(group: FormGroup): { [s: string]: boolean } {\n    const discountType = group.value.discountType;\n    const amount = +group.value.discountAmount;\n    if (discountType === 'percentage' && amount > 100) {\n      return { invalidDiscountPercentage: true };\n    }\n    return null;\n  }\n\n  checkCouponCode(code: any) {\n    if (this.coupon && this.coupon.code === code) {\n      this.validCouponCode = true;\n      return;\n    }\n    this.couponService.checkCoupon(code).subscribe(\n      (res: any) => {\n        this.validCouponCode = res.status;\n      },\n      (err: any) => {},\n    );\n  }\n\n  submitCoupon() {\n    this.couponForm.markAllAsTouched();\n    if (this.couponForm.invalid) {\n      this.showToastr('top-right', 'danger', 'Coupon Details are required');\n      return;\n    } else if (!this.validCouponCode) {\n      this.showToastr('top-right', 'danger', 'This Coupon Code Already Exist');\n      return;\n    }\n    this.stepper.next();\n  }\n\n  saveCoupon() {\n    this.couponForm.markAllAsTouched();\n\n    if (this.couponForm.invalid) {\n      this.showToastr('top-right', 'danger', 'Coupon Details are required');\n      return;\n    } else if (!this.validCouponCode) {\n      this.showToastr('top-right', 'danger', 'This Coupon Code Already Exist');\n      return;\n    }\n    this.submit = true;\n\n    const coupon: any = { ...this.couponForm.value };\n\n    if (!this.coupon) {\n      this.couponService.addCoupon(coupon).subscribe(\n        (resCoupon: CouponModel) => {\n          this.ref.close({ coupon: resCoupon, type: 'add' });\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.submit = false;\n        },\n      );\n    } else {\n      coupon._id = this.coupon._id;\n\n      this.couponService.editCoupon(coupon).subscribe(\n        (res: any) => {\n          this.ref.close({ coupon: coupon, type: 'edit' });\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.submit = false;\n        },\n      );\n    }\n  }\n\n  onClose() {\n    this.ref.close();\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  ngOnDestroy() {\n    this.couponService.deleteCouponData();\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>Coupons</h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button nbButton size=\"small\" status=\"primary\" fullWidth (click)=\"addCoupon()\">\n          Add Coupon <nb-icon icon=\"plus-circle-outline\"></nb-icon>\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"table-responsive\" *ngIf=\"coupons.length > 0; else noCoupons\">\n          <table class=\"table\">\n            <thead>\n              <th>#</th>\n              <th>Coupon Code</th>\n              <th>Discount</th>\n              <th>Expiry Date</th>\n              <th colspan=\"2\">Action</th>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let coupon of coupons; let i = index\">\n                <td>{{ i + 1 }}</td>\n                <td>{{ coupon.code }}</td>\n                <td>\n                  {{ coupon.discountAmount }}{{ coupon.discountType === 'percentage' ? '%' : '/-' }}\n                </td>\n                <td>{{ coupon.expiryDate ? dateService.formatDate(coupon.expiryDate) : '--' }}</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    status=\"basic\"\n                    (click)=\"editCoupon(coupon)\"\n                  >\n                    Edit\n                  </button>\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    status=\"danger\"\n                    (click)=\"deleteCoupon(coupon._id)\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #noCoupons>\n  <p class=\"pt-5 pb-5 text-center\">No Coupons</p>\n</ng-template>\n","import { CouponComponent } from './coupon.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CouponComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../shared/page-not-found/page-not-found.module').then((m) => m.PageNotFoundModule),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CouponRoutingModule {}\n","import { DateService } from './../../services/shared-services/date.service';\nimport { AddCouponComponent } from './add-coupon/add-coupon.component';\nimport { CouponModel } from './../../models/coupon.model';\nimport { NbToastrService, NbDialogService } from '@nebular/theme';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CouponService } from './../../services/coupon.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-coupon',\n  templateUrl: './coupon.component.html',\n  styleUrls: ['./coupon.component.scss'],\n})\nexport class CouponComponent implements OnInit {\n  loading: boolean;\n\n  coupons: CouponModel[];\n\n  constructor(\n    private couponService: CouponService,\n    public dateService: DateService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: NbToastrService,\n    private dialogService: NbDialogService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.coupons = [];\n\n    this.couponService.getCoupons().subscribe(\n      (coupons: CouponModel[]) => {\n        this.coupons = coupons;\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  updateCoupon(coupon: { coupon: CouponModel; type: string }) {\n    if (coupon.type === 'add') {\n      this.coupons.push(coupon.coupon);\n      this.showToastr('top-right', 'success', 'Coupon Added Successfully');\n    } else {\n      const index = this.coupons.findIndex(\n        (curCoupon: CouponModel) => curCoupon._id === coupon.coupon._id,\n      );\n\n      if (index >= 0) {\n        this.coupons[index] = coupon.coupon;\n        this.showToastr('top-right', 'success', 'Coupon Updated Successfully');\n      }\n    }\n  }\n\n  openCouponDialog() {\n    this.dialogService\n      .open(AddCouponComponent, {\n        context: {},\n      })\n      .onClose.subscribe(\n        (coupon: { coupon: CouponModel; type: string }) => coupon && this.updateCoupon(coupon),\n      );\n  }\n\n  addCoupon() {\n    this.openCouponDialog();\n  }\n\n  editCoupon(coupon: CouponModel) {\n    this.couponService.setCouponData(coupon);\n    this.openCouponDialog();\n  }\n\n  deleteCoupon(id: string) {\n    this.loading = true;\n    this.couponService.deleteCoupon(id).subscribe(\n      (res: any) => {\n        const index = this.coupons.findIndex((coupon: CouponModel) => coupon._id === id);\n        if (index >= 0) {\n          this.coupons.splice(index, 1);\n          this.showToastr('top-right', 'success', 'Coupon Deleted Successfully');\n        }\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import { ReactiveFormsModule } from '@angular/forms';\nimport {\n  NbCardModule,\n  NbInputModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbIconModule,\n  NbSpinnerModule,\n  NbStepperModule,\n} from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CouponRoutingModule } from './coupon-routing.module';\nimport { CouponComponent } from './coupon.component';\nimport { AddCouponComponent } from './add-coupon/add-coupon.component';\n\n@NgModule({\n  declarations: [CouponComponent, AddCouponComponent],\n  imports: [\n    CommonModule,\n    CouponRoutingModule,\n    NbCardModule,\n    NbInputModule,\n    NbButtonModule,\n    NbSelectModule,\n    NbIconModule,\n    ReactiveFormsModule,\n    NbSpinnerModule,\n    NbStepperModule,\n  ],\n})\nexport class CouponModule {}\n"]}