{"version":3,"sources":["webpack:///src/app/institute/home/home.component.html","webpack:///src/app/institute/home/home-routing.module.ts","webpack:///src/app/institute/home/home.component.ts","webpack:///src/app/institute/home/home.module.ts"],"names":["HomeComponent","HomeRoutingModule","HomeModule","routes","path","component","branchService","membershipService","menuService","router","route","this","loading","branches","hideMenu","setBranchId","getBranches","subscribe","setBranchesData","err","address","address1","address2","city","pinCode","state","id","navigate","relativeTo","setMembershipType","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","forChild"],"mappings":"6gBAAA,yCACE,yCACE,2CACE,gDACE,sCAAI,kCAAmD,8BACvD,sCAAI,8CAAkB,8BACtB,iCACA,4CACE,4CACF,8BACF,8BACF,8BACF,8BACF,+B,sBAkCA,2CACE,kDACE,yCACE,yCACE,4CAOE,0CAAe,yCAAa,8BAC5B,wCACF,8BACA,sCAAI,yCAAa,8BACnB,8BACF,8BACF,8BACF,+B,gEA2BQ,6CAME,2LAEA,oCACF,+B,gEAEA,6CAME,6LAEA,0CACF,+B,yBA5CN,0CACE,8CACE,qDACE,0CAKA,yCAKF,8BACA,gDACE,0CACE,sCAAI,yB,qCAAgD,8BACpD,sCACE,0BAAyB,kCACzB,0BACF,8BACF,8BACF,8BACA,sDACE,gDAWA,gDAUF,8BACF,8BACF,+B,uBA3CQ,2FAA8C,sCAO9C,wFAKI,wHAEF,qFACA,gGAMF,uEAWA,yE,yBArCV,yCACE,8CAgDF,+B,0CAhDwC,6EChExC,ICSaA,EDcAC,EEGAC,EF1BPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WCMSL,EAAN,WAKL,WACUM,EACAC,EACAC,EACAC,EACAC,aAJA,KAAAJ,gBACA,KAAAC,oBACA,KAAAC,cACA,KAAAC,SACA,KAAAC,Q,UAVL,O,EAAA,G,EAAA,uBAaL,WAAU,WACRC,KAAKC,WACLD,KAAKE,SAAW,GAChBF,KAAKH,YAAYM,WACjBH,KAAKL,cAAcS,YAAY,IAE/BJ,KAAKL,cAAcU,cAAcC,WAC9BJ,YACCF,EAAKE,SAAWA,EAChBF,EAAKL,cAAcY,gBAAgBL,GACnCF,EAAKC,cAENO,YACCR,EAAKC,gBA1BN,wBA+BL,SAAWQ,GAGT,OACEA,EAAQC,SACR,MAJeD,EAAQE,SAAWF,EAAQE,SAAW,KAAO,IAM5DF,EAAQG,KACR,MACAH,EAAQI,QACR,KACAJ,EAAQK,QA1CP,0BA8CL,SAAaC,GACXf,KAAKL,cAAcS,YAAYW,GAC/Bf,KAAKF,OAAOkB,SAAS,CAAC,uBAAwB,CAAEC,WAAYjB,KAAKD,UAhD9D,4BAmDL,SAAegB,GACbf,KAAKL,cAAcS,YAAYW,GAC/Bf,KAAKJ,kBAAkBsB,kBAAkB,SACzClB,KAAKF,OAAOkB,SAAS,CAAC,uBAAwB,CAAEC,WAAYjB,KAAKD,a,2BAtD9D,K,sCAAMV,GAAa,gM,mDAAbA,EAAa,u+BFb1B,4CA+CA,gDAoBA,4C,MAnEiB,wDA+CR,kFAoBQ,oF,4KCzDf,CACEI,KAAM,iBACN0B,aAAc,kBACZ,iCAA4DC,MAAMC,YAACA,OAAKA,EAAEC,wBAG9E,CACE7B,KAAM,KACN8B,WAAY,iBACZC,UAAW,SAQR,IAAMlC,EAAN,yB,gDAAMA,I,+EAAAA,IAAiB,SAHnB,CAAC,IAAamC,SAASjC,IACtB,O,eEKL,IAAMD,EAAN,yB,gDAAMA,I,+EAAAA,IAAU,SAZZ,CACP,IACA,EACA,IACA,IACA,IACA,IACA,KACA,KACA,Q","file":"x","sourcesContent":["<div class=\"row\" *ngIf=\"branches.length === 0\">\n  <div class=\"col-md-10 col-12 mx-auto text-center\">\n    <nb-card>\n      <nb-card-body>\n        <h1><i class=\"fa fa-university\" aria-hidden=\"true\"></i></h1>\n        <h2>No Institute Added</h2>\n        <br />\n        <button nbButton size=\"small\" status=\"primary\" routerLink=\"../membership-plans\">\n          Add Institute\n        </button>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n\n<!-- <ng-container *ngIf=\"branches.length > 0\">\n  <div class=\"row\">\n    <div class=\"col-md-3 col-sm-6\">\n      <nb-card status=\"success\">\n        <nb-card-header>\n          <h5 class=\"text-white\">Branches <small>0</small></h5>\n        </nb-card-header>\n      </nb-card>\n    </div>\n    <div class=\"col-md-3 col-sm-6\">\n      <nb-card status=\"info\">\n        <nb-card-header>\n          <h5 class=\"text-white\">Branches <small>0</small></h5>\n        </nb-card-header>\n      </nb-card>\n    </div>\n    <div class=\"col-md-3 col-sm-6\">\n      <nb-card status=\"warning\">\n        <nb-card-header>\n          <h5 class=\"text-white\">Branches <small>0</small></h5>\n        </nb-card-header>\n      </nb-card>\n    </div>\n    <div class=\"col-md-3 col-sm-6\">\n      <nb-card status=\"danger\">\n        <nb-card-header>\n          <h5 class=\"text-white\">Branches <small>0</small></h5>\n        </nb-card-header>\n      </nb-card>\n    </div>\n  </div> -->\n\n<nb-card *ngIf=\"branches.length > 0\">\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <button\n          class=\"float-right\"\n          nbButton\n          size=\"small\"\n          status=\"warning\"\n          routerLink=\"../membership-plans\"\n        >\n          <span class=\"\">New Institute</span>\n          <nb-icon icon=\"plus-circle-outline\"></nb-icon>\n        </button>\n        <h3>My Institutes</h3>\n      </div>\n    </div>\n  </nb-card-header>\n</nb-card>\n\n<div class=\"row\" *ngIf=\"branches.length > 0\">\n  <div class=\"col-md-3 col-sm-4 col-12\" *ngFor=\"let branch of branches\">\n    <nb-card class=\"shadow-sm\">\n      <nb-card-header style=\"position: relative\">\n        <nb-badge\n          [text]=\"branch.status ? 'Active' : 'Inactive'\"\n          [status]=\"branch.status ? 'success' : 'danger'\"\n          position=\"top right\"\n        ></nb-badge>\n        <nb-user\n          class=\"text-center\"\n          size=\"medium\"\n          [name]=\"branch.basicDetails.branchName\"\n        ></nb-user>\n      </nb-card-header>\n      <nb-card-body>\n        <div class=\"text-center\">\n          <h4>{{ branch.basicDetails.branchName | uppercase }}</h4>\n          <p>\n            {{ branch.address.city }}<br />\n            +91 {{ branch.basicDetails.phone }}\n          </p>\n        </div>\n      </nb-card-body>\n      <nb-card-footer class=\"text-right\">\n        <button\n          *ngIf=\"branch.status\"\n          class=\"\"\n          nbButton\n          size=\"small\"\n          status=\"warning\"\n          (click)=\"manageBranch(branch._id)\"\n        >\n          Manage\n        </button>\n\n        <button\n          *ngIf=\"!branch.status\"\n          class=\"\"\n          nbButton\n          size=\"small\"\n          status=\"danger\"\n          (click)=\"activateBranch(branch._id)\"\n        >\n          Activate Now\n        </button>\n      </nb-card-footer>\n    </nb-card>\n  </div>\n</div>\n","import { HomeComponent } from './home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../shared/page-not-found/page-not-found.module').then((m) => m.PageNotFoundModule),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n","import { MembershipService } from './../../services/membership.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from './../../authentication/auth/auth-service/auth.service';\nimport { BranchService } from './../../services/branch.service';\nimport { BranchModel, BranchAddressModel } from './../../models/branch.model';\nimport { MenuService } from './../menu.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  loading: boolean;\n\n  branches: BranchModel[];\n\n  constructor(\n    private branchService: BranchService,\n    private membershipService: MembershipService,\n    private menuService: MenuService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branches = [];\n    this.menuService.hideMenu();\n    this.branchService.setBranchId('');\n\n    this.branchService.getBranches().subscribe(\n      (branches: BranchModel[]) => {\n        this.branches = branches;\n        this.branchService.setBranchesData(branches);\n        this.loading = false;\n      },\n      (err: any) => {\n        this.loading = false;\n      },\n    );\n  }\n\n  getAddress(address: BranchAddressModel) {\n    const address2 = address.address2 ? address.address2 + ', ' : '';\n\n    return (\n      address.address1 +\n      ', ' +\n      address2 +\n      address.city +\n      ' - ' +\n      address.pinCode +\n      ', ' +\n      address.state\n    );\n  }\n\n  manageBranch(id: string) {\n    this.branchService.setBranchId(id);\n    this.router.navigate(['../branch/dashboard'], { relativeTo: this.route });\n  }\n\n  activateBranch(id: string) {\n    this.branchService.setBranchId(id);\n    this.membershipService.setMembershipType('renew');\n    this.router.navigate(['../membership-plans'], { relativeTo: this.route });\n  }\n}\n","import { HomeComponent } from './home.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\n\nimport { ThemeModule } from './../../@theme/theme.module';\nimport {\n  NbCardModule,\n  NbButtonModule,\n  NbIconModule,\n  NbTooltipModule,\n  NbUserModule,\n  NbBadgeModule,\n} from '@nebular/theme';\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    ThemeModule,\n    NbCardModule,\n    NbIconModule,\n    NbButtonModule,\n    NbTooltipModule,\n    NbUserModule,\n    NbBadgeModule,\n  ],\n})\nexport class HomeModule {}\n"]}