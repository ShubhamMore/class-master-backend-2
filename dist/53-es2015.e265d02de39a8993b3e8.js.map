{"version":3,"sources":["webpack:///src/app/student/branch/branch-header/branch-header.component.ts","webpack:///src/app/student/branch/branch.component.html","webpack:///src/app/student/branch/branch-routing.module.ts","webpack:///src/app/student/branch/branch.component.ts","webpack:///src/app/student/branch/branch.module.ts","webpack:///src/app/student/branch/student-branch.service.ts"],"names":["BranchHeaderComponent","branchService","router","route","this","loading","branchId","getBranchId","getBranch","subscribe","branch","setBranchData","err","navigate","relativeTo","routes","path","component","BranchComponent","toastrService","instituteKeysService","getBranchForStudent","error","showToastr","getInstitutePaymentAccessKey","paymentGateway","accessKey","setLocalInstitutePaymentAccessKey","position","status","message","show","deleteBranchId","deleteBranchData","children","loadChildren","then","m","DashboardModule","CourseModule","redirectTo","pathMatch","PageNotFoundModule","BranchRoutingModule","forChild","BranchModule","StudentBranchService","type"],"mappings":"8NAUO,Y,MAAMA,EAIX,YACUC,EACAC,EACAC,GAFA,KAAAF,gBACA,KAAAC,SACA,KAAAC,QAGV,WACEC,KAAKC,SAAU,EACfD,KAAKE,SAAWF,KAAKH,cAAcM,cAC9BH,KAAKE,SAKVF,KAAKH,cAAcO,UAAUJ,KAAKE,UAAUG,UACzCC,IACCN,KAAKM,OAASA,EACdN,KAAKH,cAAcU,cAAcD,GACjCN,KAAKC,SAAU,GAEhBO,OAVDR,KAAKF,OAAOW,SAAS,CAAC,qBAAsB,CAAEC,WAAYV,KAAKD,S,6CAdxDH,GAAqB,oH,mDAArBA,EAAqB,wF,GAA3B,G,qBCTP,4CCGA,MAAMe,EAAiB,CACrB,CACEC,KAAM,GACNC,UCKG,M,MAAMC,EAIX,YACUC,EACAlB,EACAmB,EACAlB,EACAC,GAJA,KAAAgB,gBACA,KAAAlB,gBACA,KAAAmB,uBACA,KAAAlB,SACA,KAAAC,QAGV,WACEC,KAAKC,SAAU,EAEfD,KAAKE,SAAWF,KAAKH,cAAcM,cAC9BH,KAAKE,UAKVF,KAAKH,cAAcoB,oBAAoBjB,KAAKE,UAAUG,UACnDC,IACCN,KAAKH,cAAcU,cAAcD,GACjCN,KAAKC,SAAU,GAEhBiB,IACClB,KAAKmB,WAAW,YAAa,SAAUD,GACvClB,KAAKF,OAAOW,SAAS,CAAC,OAAQ,CAAEC,WAAYV,KAAKD,UAIrDC,KAAKgB,qBAAqBI,6BAA6BpB,KAAKE,UAAUG,UACnEgB,IACKA,GAAkBA,EAAeC,WACnCtB,KAAKgB,qBAAqBO,kCAAkCF,EAAeC,YAG9EJ,QArBDlB,KAAKF,OAAOW,SAAS,CAAC,qBAAsB,CAAEC,WAAYV,KAAKD,QAyB3D,WAAWyB,EAAeC,EAAaC,GAC7C1B,KAAKe,cAAcY,KAAKF,EAAQC,EAAS,CACvCF,WACAC,WAIJ,cACEzB,KAAKH,cAAc+B,iBACnB5B,KAAKH,cAAcgC,mBACnB7B,KAAKgB,qBAAqBO,kCAAkC,O,6CApDnDT,GAAe,iM,mDAAfA,EAAe,2FFZ5B,gDACA,sD,MAAe,2E,wCEWR,GDJHgB,SAAU,CACR,CACElB,KAAM,YACNmB,aAAc,IAAM,yDAAuCC,KAAMC,GAAMA,EAAEC,kBAG3E,CACEtB,KAAM,SACNmB,aAAc,IAAM,mCAAiCC,KAAMC,GAAMA,EAAEE,eAGrE,CACEvB,KAAM,GACNwB,WAAY,YACZC,UAAW,QAGb,CACEzB,KAAM,iBACNmB,aAAc,IACZ,iCAA4DC,KACzDC,GAAMA,EAAEK,qBAIf,CACE1B,KAAM,KACNwB,WAAY,iBACZC,UAAW,WAUZ,Y,MAAME,G,yDAAAA,I,+EAAAA,IAAmB,SAHrB,CAAC,IAAaC,SAAS7B,IACtB,O,GAEL,G,gBEhCA,Y,MAAM8B,G,yDAAAA,I,+EAAAA,IAAY,UAFZ,CAAC,KAAqB,SADxB,CAAC,IAAc,EAAqB,IAAc,S,GAGtD,I,oFCXA,Y,MAAMC,EAWX,eARA,QAAQC,GACN3C,KAAK2C,KAAOA,EAGd,UACE,OAAO3C,KAAK2C,M,6CARHD,I,sDAAAA,EAAoB,QAApBA,EAAoB,Y,GAA1B","file":"x","sourcesContent":["import { ActivatedRoute, Router } from '@angular/router';\r\nimport { BranchModel } from './../../../models/branch.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { BranchService } from './../../../services/branch.service';\r\n\r\n@Component({\r\n  selector: 'ngx-branch-header',\r\n  templateUrl: './branch-header.component.html',\r\n  styleUrls: ['./branch-header.component.scss'],\r\n})\r\nexport class BranchHeaderComponent implements OnInit {\r\n  loading: boolean;\r\n  branchId: string;\r\n  branch: BranchModel;\r\n  constructor(\r\n    private branchService: BranchService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.branchId = this.branchService.getBranchId();\r\n    if (!this.branchId) {\r\n      this.router.navigate(['../page-not-found'], { relativeTo: this.route });\r\n      return;\r\n    }\r\n\r\n    this.branchService.getBranch(this.branchId).subscribe(\r\n      (branch: BranchModel) => {\r\n        this.branch = branch;\r\n        this.branchService.setBranchData(branch);\r\n        this.loading = false;\r\n      },\r\n      (err: any) => {\r\n        // this.router.navigate(['../page-not-found'], { relativeTo: this.route });\r\n      },\r\n    );\r\n  }\r\n}\r\n","<ngx-branch-header></ngx-branch-header>\n<router-outlet *ngIf=\"!loading\"></router-outlet>\n","import { BranchComponent } from './branch.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BranchComponent,\r\n    children: [\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./dashboard/dashboard.module').then((m) => m.DashboardModule),\r\n      },\r\n\r\n      {\r\n        path: 'course',\r\n        loadChildren: () => import('./course/course.module').then((m) => m.CourseModule),\r\n      },\r\n\r\n      {\r\n        path: '',\r\n        redirectTo: 'dashboard',\r\n        pathMatch: 'full',\r\n      },\r\n\r\n      {\r\n        path: 'page-not-found',\r\n        loadChildren: () =>\r\n          import('../../shared/page-not-found/page-not-found.module').then(\r\n            (m) => m.PageNotFoundModule,\r\n          ),\r\n      },\r\n\r\n      {\r\n        path: '**',\r\n        redirectTo: 'page-not-found',\r\n        pathMatch: 'full',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class BranchRoutingModule {}\r\n","import { BranchModel } from './../../models/branch.model';\r\nimport { InstituteKeysService } from './../../services/institute-keys.service';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BranchService } from './../../services/branch.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-branch',\r\n  templateUrl: './branch.component.html',\r\n  styleUrls: ['./branch.component.scss'],\r\n})\r\nexport class BranchComponent implements OnInit, OnDestroy {\r\n  loading: boolean;\r\n  branchId: string;\r\n\r\n  constructor(\r\n    private toastrService: NbToastrService,\r\n    private branchService: BranchService,\r\n    private instituteKeysService: InstituteKeysService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n\r\n    this.branchId = this.branchService.getBranchId();\r\n    if (!this.branchId) {\r\n      this.router.navigate(['../page-not-found'], { relativeTo: this.route });\r\n      return;\r\n    }\r\n\r\n    this.branchService.getBranchForStudent(this.branchId).subscribe(\r\n      (branch: BranchModel) => {\r\n        this.branchService.setBranchData(branch);\r\n        this.loading = false;\r\n      },\r\n      (error: any) => {\r\n        this.showToastr('top-right', 'danger', error);\r\n        this.router.navigate(['../'], { relativeTo: this.route });\r\n      },\r\n    );\r\n\r\n    this.instituteKeysService.getInstitutePaymentAccessKey(this.branchId).subscribe(\r\n      (paymentGateway: any) => {\r\n        if (paymentGateway && paymentGateway.accessKey) {\r\n          this.instituteKeysService.setLocalInstitutePaymentAccessKey(paymentGateway.accessKey);\r\n        }\r\n      },\r\n      (error: any) => {},\r\n    );\r\n  }\r\n\r\n  private showToastr(position: any, status: any, message: string) {\r\n    this.toastrService.show(status, message, {\r\n      position,\r\n      status,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.branchService.deleteBranchId();\r\n    this.branchService.deleteBranchData();\r\n    this.instituteKeysService.setLocalInstitutePaymentAccessKey(null);\r\n  }\r\n}\r\n","import { NbCardModule, NbUserModule } from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BranchRoutingModule } from './branch-routing.module';\nimport { BranchComponent } from './branch.component';\nimport { BranchHeaderComponent } from './branch-header/branch-header.component';\nimport { StudentBranchService } from './student-branch.service';\n\n@NgModule({\n  declarations: [BranchComponent, BranchHeaderComponent],\n  imports: [CommonModule, BranchRoutingModule, NbCardModule, NbUserModule],\n  providers: [StudentBranchService],\n})\nexport class BranchModule {}\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class StudentBranchService {\r\n  private type: string;\r\n\r\n  setType(type: string) {\r\n    this.type = type;\r\n  }\r\n\r\n  getType() {\r\n    return this.type;\r\n  }\r\n\r\n  constructor() {}\r\n}\r\n"]}