{"version":3,"sources":["webpack:///src/app/employee/branch/manage-branch/course/batch/manage-batch/manage-batch.component.html","webpack:///src/app/employee/branch/manage-branch/course/batch/manage-batch/manage-batch-routing.module.ts","webpack:///src/app/employee/branch/manage-branch/course/batch/manage-batch/manage-batch.component.ts","webpack:///src/app/employee/branch/manage-branch/course/batch/manage-batch/manage-batch.module.ts"],"names":["ManageBatchComponent","ManageBatchModule","ManageBatchRoutingModule","routes","path","component","branchService","courseService","batchService","dateService","toastrService","router","route","this","loading","branchId","getBranchId","batches","getCourseData","subscribe","course","getBatches","back","basicDetails","category","_id","err","navigate","relativeTo","id","setBatchId","queryParams","mode","status","i","changeBatchStatus","res","showToastr","position","message","show","addBatch","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","forChild"],"mappings":"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","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>\n          Batches <small *ngIf=\"course\">of {{ course.basicDetails.courseName }}</small>\n        </h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button nbButton size=\"small\" status=\"primary\" fullWidth (click)=\"addBatch()\">\n          Add Batch <nb-icon icon=\"plus-circle-outline\"></nb-icon>\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body class=\"body-container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ng-container *ngIf=\"!loading; else loadingData\">\n          <div class=\"table-responsive\" *ngIf=\"batches.length > 0; else noBatches\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Batch</th>\n                  <th>Start Date</th>\n                  <th colspan=\"2\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let batch of batches; let i = index\">\n                  <td>{{ i + 1 }}</td>\n                  <td>{{ batch.basicDetails.batchName }}</td>\n                  <td>{{ dateService.formatDate(batch.basicDetails.startDate) }}</td>\n                  <td>\n                    <button\n                      class=\"mr-3\"\n                      nbButton\n                      size=\"small\"\n                      status=\"basic\"\n                      (click)=\"editBatch(batch._id)\"\n                    >\n                      Edit\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      class=\"\"\n                      nbButton\n                      size=\"small\"\n                      [status]=\"!batch.status ? 'warning' : 'danger'\"\n                      (click)=\"changeBatchStatus(batch._id, !batch.status, i)\"\n                    >\n                      {{ !batch.status ? 'Activate' : 'Deactivate' }}\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ng-template #noBatches>\n            <p class=\"text-center pt-5 pb-5\">No Batches Available</p>\n          </ng-template>\n        </ng-container>\n        <ng-template #loadingData>\n          <p class=\"text-center pt-5 pb-5\">Loading...</p>\n        </ng-template>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n","import { ManageBatchComponent } from './manage-batch.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: ManageBatchComponent },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageBatchRoutingModule {}\n","import { DateService } from './../../../../../../services/shared-services/date.service';\nimport { CourseModel } from './../../../../../../models/course.model';\nimport { CourseService } from './../../../../../../services/course.service';\nimport { BatchService } from './../../../../../../services/batch.service';\nimport { BranchService } from './../../../../../../services/branch.service';\nimport { BatchModel } from './../../../../../../models/batch.model';\nimport { NbToastrService } from '@nebular/theme';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'ngx-manage-batch',\n  templateUrl: './manage-batch.component.html',\n  styleUrls: ['./manage-batch.component.scss'],\n})\nexport class ManageBatchComponent implements OnInit {\n  loading: boolean;\n  branchId: string;\n  course: CourseModel;\n  batches: BatchModel[];\n\n  constructor(\n    private branchService: BranchService,\n    private courseService: CourseService,\n    private batchService: BatchService,\n    public dateService: DateService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.batches = [];\n\n    this.courseService.getCourseData().subscribe((course: CourseModel) => {\n      this.course = course;\n      if (!this.course) {\n        this.back();\n        return;\n      }\n      this.getBatches();\n    });\n  }\n\n  getBatches() {\n    this.loading = true;\n\n    this.batchService\n      .getBatches(this.branchId, this.course.basicDetails.category, this.course._id)\n      .subscribe(\n        (batches: BatchModel[]) => {\n          this.batches = batches;\n          this.loading = false;\n        },\n        (err: any) => {\n          this.loading = false;\n        },\n      );\n  }\n\n  addBatch() {\n    this.router.navigate(['../add'], { relativeTo: this.route });\n  }\n\n  editBatch(id: string) {\n    this.batchService.setBatchId(id);\n    this.router.navigate(['../edit'], { relativeTo: this.route, queryParams: { mode: 'edit' } });\n  }\n\n  changeBatchStatus(id: string, status: boolean, i: number) {\n    this.loading = true;\n    this.batchService.changeBatchStatus(id, status).subscribe(\n      (res: any) => {\n        this.batches[i].status = status;\n        this.showToastr(\n          'top-right',\n          'success',\n          `Batch ${status ? 'Activated' : 'Deactivated'} Successfully!`,\n        );\n        this.loading = false;\n      },\n      (err: any) => {\n        this.showToastr('top-right', 'danger', err);\n        this.loading = false;\n      },\n    );\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import { ManageBatchComponent } from './manage-batch.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageBatchRoutingModule } from './manage-batch-routing.module';\n\nimport {\n  NbCardModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbIconModule,\n  NbInputModule,\n} from '@nebular/theme';\n@NgModule({\n  declarations: [ManageBatchComponent],\n  imports: [\n    CommonModule,\n    ManageBatchRoutingModule,\n\n    NbCardModule,\n    NbButtonModule,\n    NbSelectModule,\n    NbIconModule,\n    NbInputModule,\n  ],\n})\nexport class ManageBatchModule {}\n"]}