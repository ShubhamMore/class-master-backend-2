{"version":3,"sources":["webpack:///src/app/institute/branch/assignment/assignment-submission/assignment-submission.component.html","webpack:///src/app/institute/branch/assignment/assignment-submission/assignment-submission-routing.module.ts","webpack:///src/app/institute/branch/assignment/assignment-submission/assignment-submission.component.ts","webpack:///src/app/institute/branch/assignment/assignment-submission/assignment-submission.module.ts"],"names":["AssignmentSubmissionComponent","AssignmentSubmissionModule","AssignmentSubmissionRoutingModule","routes","path","component","branchService","assignmentSubmissionService","assignmentService","authService","dateService","router","route","toastrService","this","loading","branchId","getBranchId","user","getUserData","getAssignmentData","subscribe","assignment","showToastr","back","assignmentSubmissions","getAssignmentSubmissions","_id","error","submission","generatedBy","imsMasterId","setAssignmentSubmissionData","navigate","relativeTo","position","status","message","show","loadChildren","then","m","SubmissionGradingModule","PageNotFoundModule","redirectTo","forChild"],"mappings":"qjBAsBgB,sCAAwD,uCAAW,+B,gEAWnE,sCACE,6CAKE,oLAGA,kCACF,8BACF,8B,uDAJI,6E,yBAdN,sCACE,sCAAI,yBAAW,8BACf,sCAAI,yBAA4B,8BAChC,sCAAI,yBAAiD,8BACrD,sCACE,yBACF,8BACA,0CAYF,+B,mEAlBM,kEACA,4EACA,6FAEF,2HAEE,6G,yBAnBZ,yCACE,2CACE,yCACE,sCACE,sCAAI,6BAAC,8BACL,sCAAI,mCAAO,8BACX,sCAAI,6CAAiB,8BACrB,uCAAI,mCAAM,8BACV,2CACF,8BACF,8BACA,0CACE,4CAoBF,8BACF,8BACF,+B,0CA1BY,6GAIF,0F,sBA6BhB,wCAAiC,gDAAoB,+BCnDvD,ICYaA,ECEAC,EFeAC,EA7BPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WCSSL,EAAN,WAUL,WACUM,EACAC,EACAC,EACAC,EACDC,EACCC,EACAC,EACAC,aAPA,KAAAP,gBACA,KAAAC,8BACA,KAAAC,oBACA,KAAAC,cACD,KAAAC,cACC,KAAAC,SACA,KAAAC,QACA,KAAAC,gB,UAlBL,O,EAAA,G,EAAA,kCAqBK,WACRC,KAAKC,WAELD,KAAKE,SAAWF,KAAKR,cAAcW,cAC9BH,KAAKE,UAKVF,KAAKI,KAAOJ,KAAKL,YAAYU,cAE7BL,KAAKN,kBAAkBY,oBAAoBC,WAAWC,YAGpD,GAFAR,EAAKQ,WAAaA,GAEbA,EAGH,OAFAR,EAAKS,WAAW,YAAa,SAAU,6BACvCT,EAAKU,OAIPV,EAAKW,sBAAwB,GAE7BX,EAAKP,4BAA4BmB,yBAAyBJ,EAAWK,KAAKN,WACvEI,YACCX,EAAKW,sBAAwBA,EAC7BX,EAAKC,cAENa,YACCd,EAAKS,WAAW,YAAa,SAAUK,GACvCd,EAAKC,kBAxBTD,KAAKU,SA1BJ,gCAwDKK,GACJf,KAAKQ,WAAWQ,cAAgBhB,KAAKI,KAAKa,cAC5CjB,KAAKP,4BAA4ByB,4BAA4BH,GAC7Df,KAAKH,OAAOsB,SAAS,CAAC,WAAY,CAAEC,WAAYpB,KAAKF,WA3DpD,iCA+DcuB,EAAeC,EAAaC,GAC7CvB,KAAKD,cAAcyB,KAAKF,EAAQC,EAAS,CACvCF,WACAC,aAlEC,6BAuEHtB,KAAKH,OAAOsB,SAAS,CAAC,aAAc,CAAEC,WAAYpB,KAAKF,a,2BAvEpD,K,sCAAMZ,GAA6B,mT,mDAA7BA,EAA6B,mc,GAAA,MFhB1C,2CACE,kDACE,yCACE,yCACE,4CAAmE,qDAAS,EAAAwB,UAC1E,kCACF,8BACA,sCAAI,sCAAU,8BAChB,8BACF,8BACF,8BACA,gDACE,yCACE,0CACE,6CAmCF,8BACF,8BACF,8BACF,8BAEA,gG,0CAxCsC,gGAA4D,gB,uDCJhG,CACEpB,KAAM,QACNmC,aAAc,kBACZ,mCAAyDC,MACtDC,YAACA,OAAKA,EAAEC,6BAIf,CACEtC,KAAM,iBACNmC,aAAc,kBACZ,iCAAkEC,MAC/DC,YAACA,OAAKA,EAAEE,wBAIf,CAAEvC,KAAM,KAAMwC,WAAY,mBAOrB,IAAM1C,EAAN,yB,gDAAMA,I,+EAAAA,IAAiC,SAHnC,CAAC,IAAa2C,SAAS1C,IACtB,O,GEbL,IAAMF,EAAN,yB,gDAAMA,I,+EAAAA,IAA0B,SAT5B,CACP,IACA,EACA,IACA,IACA,IACA,S","file":"x","sourcesContent":["<nb-card>\r\n  <nb-card-header>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <button class=\"float-right\" nbButton size=\"small\" status=\"warning\" (click)=\"back()\">\r\n          Back\r\n        </button>\r\n        <h3>Submission</h3>\r\n      </div>\r\n    </div>\r\n  </nb-card-header>\r\n  <nb-card-body>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"table-responsive\" *ngIf=\"assignmentSubmissions.length > 0; else noSubmissions\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Student</th>\r\n                <th>Submission Status</th>\r\n                <th>Grades</th>\r\n                <th *ngIf=\"assignment.generatedBy === user.imsMasterId\">Mark Grades</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let submission of assignmentSubmissions; let i = index\">\r\n                <td>{{ i + 1 }}</td>\r\n                <td>{{ submission.studentName }}</td>\r\n                <td>{{ submission.status ? 'Submitted' : 'Pending' }}</td>\r\n                <td>\r\n                  {{ submission.grades ? submission.grades : '--' }}/{{ assignment.totalGrades }}\r\n                </td>\r\n                <td *ngIf=\"assignment.generatedBy === user.imsMasterId\">\r\n                  <button\r\n                    class=\"\"\r\n                    nbButton\r\n                    size=\"small\"\r\n                    status=\"primary\"\r\n                    (click)=\"markGrade(submission)\"\r\n                    [disabled]=\"!submission.status\"\r\n                  >\r\n                    Mark\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nb-card-body>\r\n</nb-card>\r\n\r\n<ng-template #noSubmissions>\r\n  <p class=\"pt-5 pb-5 text-center\">No Submissions Found</p>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AssignmentSubmissionComponent } from './assignment-submission.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AssignmentSubmissionComponent,\n  },\n\n  {\n    path: 'grade',\n    loadChildren: () =>\n      import('./submission-grading/submission-grading.module').then(\n        (m) => m.SubmissionGradingModule,\n      ),\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  { path: '**', redirectTo: 'page-not-found' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AssignmentSubmissionRoutingModule {}\n","import { AuthService } from './../../../../authentication/auth/auth-service/auth.service';\nimport { AssignmentSubmissionModel } from './../../../../models/assignment-submission.model';\nimport { AssignmentSubmissionService } from './../../../../services/assignment-submission.service';\nimport { NbToastrService } from '@nebular/theme';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DateService } from './../../../../services/shared-services/date.service';\nimport { AssignmentService } from './../../../../services/assignment.service';\nimport { BranchService } from './../../../../services/branch.service';\nimport { AssignmentModel } from './../../../../models/assignment.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-assignment-submission',\n  templateUrl: './assignment-submission.component.html',\n  styleUrls: ['./assignment-submission.component.scss'],\n})\nexport class AssignmentSubmissionComponent implements OnInit {\n  loading: boolean;\n\n  branchId: string;\n\n  user: any;\n\n  assignment: AssignmentModel;\n  assignmentSubmissions: AssignmentSubmissionModel[];\n\n  constructor(\n    private branchService: BranchService,\n    private assignmentSubmissionService: AssignmentSubmissionService,\n    private assignmentService: AssignmentService,\n    private authService: AuthService,\n    public dateService: DateService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private toastrService: NbToastrService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.user = this.authService.getUserData();\n\n    this.assignmentService.getAssignmentData().subscribe((assignment: AssignmentModel) => {\n      this.assignment = assignment;\n\n      if (!assignment) {\n        this.showToastr('top-right', 'danger', 'Assignment Not Found');\n        this.back();\n        return;\n      }\n\n      this.assignmentSubmissions = [];\n\n      this.assignmentSubmissionService.getAssignmentSubmissions(assignment._id).subscribe(\n        (assignmentSubmissions: AssignmentSubmissionModel[]) => {\n          this.assignmentSubmissions = assignmentSubmissions;\n          this.loading = false;\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.loading = false;\n        },\n      );\n    });\n  }\n\n  markGrade(submission: AssignmentSubmissionModel) {\n    if (this.assignment.generatedBy === this.user.imsMasterId) {\n      this.assignmentSubmissionService.setAssignmentSubmissionData(submission);\n      this.router.navigate(['./grade'], { relativeTo: this.route });\n    }\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  back() {\n    this.router.navigate(['../manage'], { relativeTo: this.route });\n  }\n}\n","import { NbCardModule, NbButtonModule, NbIconModule, NbTooltipModule } from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AssignmentSubmissionRoutingModule } from './assignment-submission-routing.module';\nimport { AssignmentSubmissionComponent } from './assignment-submission.component';\n\n@NgModule({\n  declarations: [AssignmentSubmissionComponent],\n  imports: [\n    CommonModule,\n    AssignmentSubmissionRoutingModule,\n    NbCardModule,\n    NbButtonModule,\n    NbIconModule,\n    NbTooltipModule,\n  ],\n})\nexport class AssignmentSubmissionModule {}\n"]}