{"version":3,"sources":["webpack:///src/app/institute/branch/manage-branch/receipt-info/receipt-info.component.html","webpack:///src/app/institute/branch/manage-branch/receipt-info/receipt-info-routing.module.ts","webpack:///src/app/institute/branch/manage-branch/receipt-info/receipt-info.component.ts","webpack:///src/app/institute/branch/manage-branch/receipt-info/receipt-info.module.ts"],"names":["routes","path","component","ReceiptInfoComponent","branchService","toastrService","billingService","router","route","this","loading","submit","branchId","getBranchId","billingForm","name","validators","required","minLength","address","gstNumber","termsAndConditions","getBillingDetails","back","subscribe","res","billingDetails","patchValue","error","markAllAsTouched","invalid","showToastr","value","branch","_id","saveBillingDetails","navigate","relativeTo","position","status","message","show","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","ReceiptInfoRoutingModule","forChild","ReceiptInfoModule"],"mappings":"oQAiCkB,wCACE,oDACF,+B,sBACA,wCAIE,8EACF,+B,yBAXF,0CAGE,0CAGA,0CAMF,wC,4CATmC,oJAK/B,sJ,sBAgDF,wCAIE,0DACF,+B,sBACA,wCAIE,qEACF,+B,yBAdF,0CAGE,0CAMA,0CAMF,wC,4CAVI,0JAMA,4JC1FpB,MAAMA,EAAiB,CACrB,CAAEC,KAAM,GAAIC,UCSP,M,MAAMC,EAQX,YACUC,EACAC,EACAC,EAEAC,EACAC,GALA,KAAAJ,gBACA,KAAAC,gBACA,KAAAC,iBAEA,KAAAC,SACA,KAAAC,QAGV,WACEC,KAAKC,SAAU,EACfD,KAAKE,QAAS,EAEdF,KAAKG,SAAWH,KAAKL,cAAcS,cAC9BJ,KAAKG,UAMVH,KAAKK,YAAc,IAAI,IAAU,CAC/BC,KAAM,IAAI,IAAY,KAAM,CAAEC,WAAY,CAAC,IAAWC,SAAU,IAAWC,UAAU,MACrFC,QAAS,IAAI,IAAY,KAAM,CAC7BH,WAAY,CAAC,IAAWC,SAAU,IAAWC,UAAU,OAEzDE,UAAW,IAAI,IAAY,KAAM,CAAEJ,WAAY,KAC/CK,mBAAoB,IAAI,IAAY,KAAM,CAAEL,WAAY,OAG1DP,KAAKa,qBAdHb,KAAKc,OAiBT,oBACEd,KAAKH,eAAegB,kBAAkBb,KAAKG,UAAUY,UAClDC,IACChB,KAAKiB,eAAiBD,EAClBhB,KAAKiB,gBACPjB,KAAKK,YAAYa,WAAW,CAC1BZ,KAAMN,KAAKiB,eAAeX,KAC1BI,QAASV,KAAKiB,eAAeP,QAC7BC,UAAWX,KAAKiB,eAAeN,UAC/BC,mBAAoBZ,KAAKiB,eAAeL,qBAG5CZ,KAAKC,SAAU,GAEhBkB,IACCnB,KAAKC,SAAU,IAKrB,qBAEE,GADAD,KAAKK,YAAYe,mBACbpB,KAAKK,YAAYgB,QAEnB,YADArB,KAAKsB,WAAW,YAAa,SAAU,kCAIzCtB,KAAKE,QAAS,EAEd,MAAMe,EAAsBjB,KAAKK,YAAYkB,MAC7CN,EAAeO,OAASxB,KAAKG,SACzBH,KAAKiB,iBACPA,EAAeQ,IAAMzB,KAAKiB,eAAeQ,KAE3CzB,KAAKH,eAAe6B,mBAAmBT,GAAgBF,UACpDC,IACChB,KAAKsB,WAAW,YAAa,UAAW,yCACxCtB,KAAKc,QAENK,IACCnB,KAAKsB,WAAW,YAAa,SAAUH,GACvCnB,KAAKE,QAAS,IAKpB,OACEF,KAAKF,OAAO6B,SAAS,CAAC,OAAQ,CAAEC,WAAY5B,KAAKD,QAGnD,WAAW8B,EAAeC,EAAaC,GACrC/B,KAAKJ,cAAcoC,KAAKF,EAAQC,EAAS,CACvCF,WACAC,Y,6CA7FOpC,GAAoB,iM,mDAApBA,EAAoB,+2CFdjC,2CACE,kDACE,wCAA6B,2CAAe,8BAC9C,8BACA,gDACE,yCACE,yCACE,0CAAM,wDAAY,EAAAgC,wBAChB,yCACE,yCACE,0CACE,4CAA8C,0CAAa,8BAC3D,uCAkBA,qDAaF,8BACF,8BAEA,0CACE,0CACE,4CAA4C,wCAAW,8BACvD,wCASF,8BACF,8BAEA,2CACE,0CACE,6CAAiD,6CAAgB,8BACjE,2CAmBA,qDAgBF,8BACF,8BAEA,2CACE,0CACE,6CAAkD,gDAAmB,8BACrE,2CAWF,8BACF,8BACF,8BAEA,kCAEA,0CACE,2CACE,8CAUE,mCACF,8BACF,8BACF,8BACF,8BACF,8BACF,8BACF,8BACF,+B,MAvIgD,iFAe9B,+JASA,mIA4CA,sKASA,yIA6CF,2EAAmB,wB,2FEnH5B,IDPL,CACElC,KAAM,iBACNyC,aAAc,IACZ,iCAAkEC,KAC/DC,GAAMA,EAAEC,qBAIf,CACE5C,KAAM,KACN6C,WAAY,iBACZC,UAAW,SAQR,Y,MAAMC,G,yDAAAA,I,+EAAAA,IAAwB,SAH1B,CAAC,IAAaC,SAASjD,IACtB,O,GAEL,GENA,Q,MAAMkD,G,yDAAAA,I,+EAAAA,IAAiB,SAVnB,CACP,IACA,EACA,IACA,IACA,KACA,IACA,Q,GAGG","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <h3 id=\"title\" class=\"title\">Receipt Details</h3>\n  </nb-card-header>\n  <nb-card-body>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <form (ngSubmit)=\"saveBillingDetails()\" [formGroup]=\"billingForm\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <div class=\"form-control-group\">\n                <label class=\"label\" for=\"input-billing-name\">Company Name:</label>\n                <input\n                  type=\"text\"\n                  nbInput\n                  id=\"input-billing-name\"\n                  name=\"name\"\n                  formControlName=\"name\"\n                  placeholder=\"Company Name\"\n                  minlength=\"5\"\n                  maxlength=\"30\"\n                  fullWidth\n                  [status]=\"\n                    billingForm.get('name').touched\n                      ? billingForm.get('name').invalid\n                        ? 'danger'\n                        : 'success'\n                      : 'basic'\n                  \"\n                />\n                <ng-container\n                  *ngIf=\"billingForm.get('name').invalid && billingForm.get('name').touched\"\n                >\n                  <p class=\"caption status-danger\" *ngIf=\"billingForm.get('name').errors?.required\">\n                    User Name is required!\n                  </p>\n                  <p\n                    class=\"caption status-danger\"\n                    *ngIf=\"billingForm.get('name').errors?.minlength\"\n                  >\n                    Company Name should contain minimum 5 characters\n                  </p>\n                </ng-container>\n              </div>\n            </div>\n\n            <div class=\"col-md-6\">\n              <div class=\"form-control-group\">\n                <label class=\"label\" for=\"input-gst-number\">GST Number:</label>\n                <input\n                  type=\"text\"\n                  nbInput\n                  id=\"input-gst-number\"\n                  name=\"gstNumber\"\n                  formControlName=\"gstNumber\"\n                  placeholder=\"GST Number (Optional)\"\n                  fullWidth\n                />\n              </div>\n            </div>\n\n            <div class=\"col-md-12\">\n              <div class=\"form-control-group\">\n                <label class=\"label\" for=\"input-billing-address\">Company Address:</label>\n                <textarea\n                  type=\"text\"\n                  nbInput\n                  id=\"input-billing-address\"\n                  name=\"address\"\n                  formControlName=\"address\"\n                  placeholder=\"Company Address\"\n                  rows=\"2\"\n                  minlength=\"10\"\n                  maxlength=\"150\"\n                  fullWidth\n                  [status]=\"\n                    billingForm.get('address').touched\n                      ? billingForm.get('address').invalid\n                        ? 'danger'\n                        : 'success'\n                      : 'basic'\n                  \"\n                ></textarea>\n                <ng-container\n                  *ngIf=\"billingForm.get('address').invalid && billingForm.get('address').touched\"\n                >\n                  <p\n                    class=\"caption status-danger\"\n                    *ngIf=\"billingForm.get('address').errors?.required\"\n                  >\n                    Company address is required!\n                  </p>\n                  <p\n                    class=\"caption status-danger\"\n                    *ngIf=\"billingForm.get('address').errors?.minlength\"\n                  >\n                    Company address should be 10 characters\n                  </p>\n                </ng-container>\n              </div>\n            </div>\n\n            <div class=\"col-md-12\">\n              <div class=\"form-control-group\">\n                <label class=\"label\" for=\"input-terms-conditions\">Terms & Conditions:</label>\n                <textarea\n                  type=\"text\"\n                  nbInput\n                  id=\"input-terms-conditions\"\n                  name=\"termsAndConditions\"\n                  formControlName=\"termsAndConditions\"\n                  placeholder=\"Terms & Conditions (Optional)\"\n                  rows=\"2\"\n                  minlength=\"25\"\n                  fullWidth\n                ></textarea>\n              </div>\n            </div>\n          </div>\n\n          <br />\n\n          <div class=\"row\">\n            <div class=\"col-12 text-right\">\n              <button\n                type=\"submit\"\n                nbButton\n                size=\"small\"\n                status=\"primary\"\n                [disabled]=\"submit\"\n                [nbSpinner]=\"submit\"\n                nbSpinnerStatus=\"primary\"\n                nbSpinnerSize=\"small\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n","import { ReceiptInfoComponent } from './receipt-info.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: ReceiptInfoComponent },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReceiptInfoRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { BranchService } from '../../../../services/branch.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { NbToastrService } from '@nebular/theme';\nimport { InstituteBillingService } from './../../../../services/billing.service';\nimport { InstituteBillingModel } from './../../../../models/institute-billing.model';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'ngx-receipt-info',\n  templateUrl: './receipt-info.component.html',\n  styleUrls: ['./receipt-info.component.scss'],\n})\nexport class ReceiptInfoComponent implements OnInit {\n  loading: boolean;\n  submit: boolean;\n\n  branchId: string;\n  billingForm: FormGroup;\n  billingDetails: InstituteBillingModel;\n\n  constructor(\n    private branchService: BranchService,\n    private toastrService: NbToastrService,\n    private billingService: InstituteBillingService,\n\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.submit = false;\n\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n\n      return;\n    }\n\n    this.billingForm = new FormGroup({\n      name: new FormControl(null, { validators: [Validators.required, Validators.minLength(5)] }),\n      address: new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(10)],\n      }),\n      gstNumber: new FormControl(null, { validators: [] }),\n      termsAndConditions: new FormControl(null, { validators: [] }),\n    });\n\n    this.getBillingDetails();\n  }\n\n  getBillingDetails() {\n    this.billingService.getBillingDetails(this.branchId).subscribe(\n      (res: any) => {\n        this.billingDetails = res;\n        if (this.billingDetails) {\n          this.billingForm.patchValue({\n            name: this.billingDetails.name,\n            address: this.billingDetails.address,\n            gstNumber: this.billingDetails.gstNumber,\n            termsAndConditions: this.billingDetails.termsAndConditions,\n          });\n        }\n        this.loading = false;\n      },\n      (error: any) => {\n        this.loading = false;\n      },\n    );\n  }\n\n  saveBillingDetails() {\n    this.billingForm.markAllAsTouched();\n    if (this.billingForm.invalid) {\n      this.showToastr('top-right', 'danger', 'Fill Billing Details Correctly');\n      return;\n    }\n\n    this.submit = true;\n\n    const billingDetails: any = this.billingForm.value;\n    billingDetails.branch = this.branchId;\n    if (this.billingDetails) {\n      billingDetails._id = this.billingDetails._id;\n    }\n    this.billingService.saveBillingDetails(billingDetails).subscribe(\n      (res: any) => {\n        this.showToastr('top-right', 'success', 'Billing Details Updated Successfully!');\n        this.back();\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.submit = false;\n      },\n    );\n  }\n\n  back() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n\n  showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import { ReactiveFormsModule } from '@angular/forms';\nimport { NbInputModule, NbButtonModule, NbSpinnerModule, NbCardModule } from '@nebular/theme';\nimport { ReceiptInfoComponent } from './receipt-info.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReceiptInfoRoutingModule } from './receipt-info-routing.module';\n\n@NgModule({\n  declarations: [ReceiptInfoComponent],\n  imports: [\n    CommonModule,\n    ReceiptInfoRoutingModule,\n    NbInputModule,\n    NbButtonModule,\n    NbSpinnerModule,\n    NbCardModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class ReceiptInfoModule {}\n"]}