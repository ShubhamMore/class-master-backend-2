{"version":3,"sources":["webpack:///src/app/institute/branch/employee/manage-employee-salary/manage-salary/manage-salary.component.html","webpack:///src/app/institute/branch/employee/manage-employee-salary/manage-salary/manage-salary-routing.module.ts","webpack:///src/app/institute/branch/employee/manage-employee-salary/manage-salary/manage-salary.component.ts","webpack:///src/app/institute/branch/employee/manage-employee-salary/manage-salary/manage-salary.module.ts"],"names":["ManageSalaryComponent","ManageSalaryModule","ManageSalaryRoutingModule","routes","path","component","toastrService","dateService","employeeService","employeeSalaryService","branchEmployeeService","branchService","router","route","this","loading","branchId","getBranchId","months","getMonths","years","getYears","month","getDate","getMonth","toString","padStart","year","length","getEmployeeData","subscribe","employee","showToastr","back","getEmployeeSalary","getBranchEmployeeSalaries","imsMasterId","employeeSalaries","error","navigate","relativeTo","employeeSalary","setEmployeeSalaryId","_id","setEmployeeSalaryData","i","deleteEmployeeSalary","res","splice","status","changeEmployeeSalaryStatus","position","message","show","type","getEmployeeType","queryParams","addEmployeeSalary","onSelectYear","onSelectMonth","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","forChild"],"mappings":"kjBA8BU,gDAAqD,yBAAU,+B,uBAAzB,qCAAe,iE,yBAcrD,gDAAgE,yBAE9D,+B,uBAFsC,6CAAwB,uE,gEAuB1D,sCACE,sCAAI,yBAAW,8BACf,sCAAI,yBAAiD,8BACrD,sCACE,yBACA,wCAAM,gCAAM,8BACZ,yBACF,8BACA,uCAAI,0BAA8B,8BAElC,uCACE,8CAIE,gKAEA,mCACF,8BACF,8BAEA,uCACE,8CAIE,kMAIA,0BACF,8BACF,8BAEA,uCACE,8CAIE,kLAEA,qCACF,8BACF,8BACF,8B,sEA3CM,kEACA,+FAEF,oHAEA,8EAEE,0EAiBA,4FAKA,qG,yBA1CZ,0CACE,4CACE,yCACE,sCACE,sCAAI,6BAAC,8BACL,sCAAI,gCAAI,8BACR,sCAAI,sCAAU,8BACd,uCAAI,uCAAU,8BACd,0CAAgB,mCAAM,8BACxB,8BACF,8BACA,0CACE,6CA6CF,8BACF,8BACF,+B,2CA/CU,sF,sBAiDR,wCAAiC,0DAA8B,+B,yBA9DnE,0CACE,6CA4DA,+FAGF,wC,0EA/DgC,0FAAmD,e,sBAiEjF,wCAAiC,sCAAU,+BCpHrD,ICYaA,ECSAC,EFIAC,EAzBPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WCSSL,EAAN,WAaL,WACUM,EACDC,EACCC,EACAC,EACAC,EACAC,EACAC,EACAC,aAPA,KAAAP,gBACD,KAAAC,cACC,KAAAC,kBACA,KAAAC,wBACA,KAAAC,wBACA,KAAAC,gBACA,KAAAC,SACA,KAAAC,Q,UArBL,O,EAAA,G,EAAA,kCAwBK,WAGR,GAFAC,KAAKC,WACLD,KAAKE,SAAWF,KAAKH,cAAcM,cAC9BH,KAAKE,SAAV,CAeA,GAVAF,KAAKI,OAASJ,KAAKP,YAAYY,YAC/BL,KAAKM,MAAQN,KAAKP,YAAYc,WAE9BP,KAAKQ,OAASR,KAAKP,YAAYgB,UAAUC,WAAa,GAAGC,WAAWC,SAAS,EAAG,KAChFZ,KAAKa,KAAOb,KAAKM,MAAMN,KAAKM,MAAMQ,OAAS,GAE3Cd,KAAKN,gBAAgBqB,kBAAkBC,WAAWC,YAChDjB,EAAKiB,SAAWA,MAGbjB,KAAKiB,SAGR,OAFAjB,KAAKkB,WAAW,YAAa,SAAU,2BACvClB,KAAKmB,OAIPnB,KAAKoB,yBApBHpB,KAAKmB,SA5BJ,oCAmDSX,GACZR,KAAKQ,MAAQA,EACbR,KAAKoB,sBArDF,mCAwDQP,GACXb,KAAKa,KAAOA,EACC,KAATA,IACFb,KAAKQ,MAAQ,IAEfR,KAAKoB,sBA7DF,0CAgEc,WACjBpB,KAAKC,WAELD,KAAKL,sBACF0B,0BAA0BrB,KAAKE,SAAUF,KAAKiB,SAASK,YAAatB,KAAKQ,MAAOR,KAAKa,MACrFG,WACEO,YACCvB,EAAKuB,iBAAmBA,EACxBvB,EAAKC,cAENuB,YACCxB,EAAKkB,WAAW,YAAa,SAAUM,GACvCxB,EAAKC,gBA5ER,0CAkFHD,KAAKF,OAAO2B,SAAS,CAAC,SAAU,CAAEC,WAAY1B,KAAKD,UAlFhD,yCAqFc4B,GACjB3B,KAAKL,sBAAsBiC,oBAAoBD,EAAeE,KAC9D7B,KAAKL,sBAAsBmC,sBAAsBH,GACjD3B,KAAKF,OAAO2B,SAAS,CAAC,UAAW,CAAEC,WAAY1B,KAAKD,UAxFjD,2CA2FgB4B,EAAwBI,cAC3C/B,KAAKC,WACLD,KAAKL,sBAAsBqC,qBAAqBL,GAAgBX,WAC7DiB,YACCjC,EAAKuB,iBAAiBW,OAAOH,EAAG,GAChC/B,EAAKC,cAENuB,YACCxB,EAAKkB,WAAW,YAAa,SAAUM,GACvCxB,EAAKC,gBApGN,iDAyGsB0B,EAAwBQ,EAAiBJ,cAClE/B,KAAKC,WACLD,KAAKL,sBAAsByC,2BAA2BT,EAAgBQ,GAAQnB,WAC3EiB,YACCjC,EAAKuB,iBAAiBQ,GAAGI,OAASA,EAClCnC,EAAKC,cAENuB,YACCxB,EAAKkB,WAAW,YAAa,SAAUM,GACvCxB,EAAKC,gBAlHN,iCAuHcoC,EAAeF,EAAaG,GAC7CtC,KAAKR,cAAc+C,KAAKJ,EAAQG,EAAS,CACvCD,WACAF,aA1HC,6BA+HH,IAAMK,EAAOxC,KAAKN,gBAAgB+C,kBAClCzC,KAAKF,OAAO2B,SAAS,CAAC,OAAQ,CAAEC,WAAY1B,KAAKD,MAAO2C,YAAa,CAAEF,YAhIpE,0C,2BAAA,K,sCAAMtD,GAAqB,mT,mDAArBA,EAAqB,s8B,GAAA,MFhBlC,2CACE,kDACE,yCACE,yCACE,sCAAI,6CAAiB,8BACvB,8BACA,yCACE,4CAAyD,qDAAS,EAAAyD,uBAChE,wCAAW,wCACb,8BACF,8BACF,8BACF,8BACF,8BAEA,4CACE,mDACE,0CACE,qCAEA,0CACE,gDAME,+DAAkB,EAAAC,aAAA,MAElB,gDAAoB,sCAAS,8BAC7B,kDACF,8BACF,8BAEA,0CACE,gDAME,+DAAkB,EAAAC,cAAA,MAElB,gDAAoB,uCAAU,8BAC9B,kDAGF,8BACF,8BACF,8BACF,8BACA,oDACE,0CACE,2CACE,sDAiEA,gGAGF,8BACF,8BACF,8BACF,+B,0CArGU,0EAMW,yEAQX,0EAMW,0EAUC,yEAAkC,gB,qEC5CtD,CACEvD,KAAM,iBACNwD,aAAc,kBACZ,iCAAqEC,MAClEC,YAACA,OAAKA,EAAEC,wBAIf,CACE3D,KAAM,KACN4D,WAAY,iBACZC,UAAW,SAQR,IAAM/D,EAAN,yB,gDAAMA,I,+EAAAA,IAAyB,SAH3B,CAAC,IAAagE,SAAS/D,IACtB,O,GEFL,IAAMF,EAAN,yB,gDAAMA,I,+EAAAA,IAAkB,SAVpB,CACP,IACA,EACA,IACA,IACA,KACA,IACA,S","file":"x","sourcesContent":["<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>Employee Salaries</h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button nbButton size=\"small\" fullWidth status=\"primary\" (click)=\"addEmployeeSalary()\">\n          Add Salary <nb-icon icon=\"plus-circle-outline\"></nb-icon>\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n</nb-card>\n\n<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-6 col-sm-4\"></div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-year\"\n          name=\"year\"\n          [selected]=\"year\"\n          fullWidth\n          placeholder=\"All Years\"\n          (selectedChange)=\"onSelectYear($event)\"\n        >\n          <nb-option value=\"\">All Years</nb-option>\n          <nb-option *ngFor=\"let year of years\" [value]=\"year\">{{ year }}</nb-option>\n        </nb-select>\n      </div>\n\n      <div class=\"col-md-3 col-sm-4\">\n        <nb-select\n          id=\"select-month\"\n          name=\"month\"\n          [selected]=\"month\"\n          fullWidth\n          placeholder=\"All Months\"\n          (selectedChange)=\"onSelectMonth($event)\"\n        >\n          <nb-option value=\"\">All Months</nb-option>\n          <nb-option *ngFor=\"let month of months\" [value]=\"month.monthNo\">{{\n            month.month\n          }}</nb-option>\n        </nb-select>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body class=\"body-container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <ng-container *ngIf=\"!loading; else loadingData\">\n          <div class=\"table-responsive\" *ngIf=\"employeeSalaries.length > 0; else noBatches\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Date</th>\n                  <th>Month/Year</th>\n                  <th>Net Salary</th>\n                  <th colspan=\"3\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let employeeSalary of employeeSalaries; let i = index\">\n                  <td>{{ i + 1 }}</td>\n                  <td>{{ dateService.formatDate(employeeSalary.date) }}</td>\n                  <td>\n                    {{ dateService.getMonthByMonthNumber(employeeSalary.month) }}\n                    <span>&nbsp;</span>\n                    {{ employeeSalary.year }}\n                  </td>\n                  <td>{{ employeeSalary.netSalary }}</td>\n\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      status=\"primary\"\n                      (click)=\"viewEmployeeSalary(employeeSalary)\"\n                    >\n                      View\n                    </button>\n                  </td>\n\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      [status]=\"employeeSalary.status ? 'success' : 'danger'\"\n                      (click)=\"\n                        changeEmployeeSalaryStatus(employeeSalary._id, !employeeSalary.status, i)\n                      \"\n                    >\n                      {{ employeeSalary.status ? 'Inactive' : 'Active' }}\n                    </button>\n                  </td>\n\n                  <td>\n                    <button\n                      nbButton\n                      size=\"small\"\n                      status=\"danger\"\n                      (click)=\"deleteEmployeeSalary(employeeSalary._id, i)\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <ng-template #noBatches>\n            <p class=\"text-center pt-5 pb-5\">No Employee Salaries Available</p>\n          </ng-template>\n        </ng-container>\n        <ng-template #loadingData>\n          <p class=\"text-center pt-5 pb-5\">Loading...</p>\n        </ng-template>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n","import { ManageSalaryComponent } from './manage-salary.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageSalaryComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageSalaryRoutingModule {}\n","import { EmployeeModel } from './../../../../../models/employee.model';\nimport { BranchService } from './../../../../../services/branch.service';\nimport { EmployeeSalaryModel } from './../../../../../models/employee-salary.model';\nimport { DateService, Month } from './../../../../../services/shared-services/date.service';\nimport { EmployeeService } from './../../../../../services/employee.service';\nimport { EmployeeSalaryService } from './../../../../../services/employee-salary.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { NbToastrService } from '@nebular/theme';\nimport { BranchEmployeeService } from '../../../../../services/branch-employee.service';\n\n@Component({\n  selector: 'ngx-manage-salary',\n  templateUrl: './manage-salary.component.html',\n  styleUrls: ['./manage-salary.component.scss'],\n})\nexport class ManageSalaryComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  branchId: string;\n\n  employee: EmployeeModel;\n  employeeSalaries: EmployeeSalaryModel[];\n\n  months: Month[];\n  month: string;\n\n  years: string[];\n  year: string;\n\n  constructor(\n    private toastrService: NbToastrService,\n    public dateService: DateService,\n    private employeeService: EmployeeService,\n    private employeeSalaryService: EmployeeSalaryService,\n    private branchEmployeeService: BranchEmployeeService,\n    private branchService: BranchService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.back();\n      return;\n    }\n\n    this.months = this.dateService.getMonths();\n    this.years = this.dateService.getYears();\n\n    this.month = (this.dateService.getDate().getMonth() + 1).toString().padStart(2, '0');\n    this.year = this.years[this.years.length - 1];\n\n    this.employeeService.getEmployeeData().subscribe((employee: EmployeeModel) => {\n      this.employee = employee;\n    });\n\n    if (!this.employee) {\n      this.showToastr('top-right', 'danger', 'Employee Not Found');\n      this.back();\n      return;\n    }\n\n    this.getEmployeeSalary();\n  }\n\n  onSelectMonth(month: string) {\n    this.month = month;\n    this.getEmployeeSalary();\n  }\n\n  onSelectYear(year: string) {\n    this.year = year;\n    if (year === '') {\n      this.month = '';\n    }\n    this.getEmployeeSalary();\n  }\n\n  getEmployeeSalary() {\n    this.loading = true;\n\n    this.employeeSalaryService\n      .getBranchEmployeeSalaries(this.branchId, this.employee.imsMasterId, this.month, this.year)\n      .subscribe(\n        (employeeSalaries: EmployeeSalaryModel[]) => {\n          this.employeeSalaries = employeeSalaries;\n          this.loading = false;\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.loading = false;\n        },\n      );\n  }\n\n  addEmployeeSalary() {\n    this.router.navigate(['./add'], { relativeTo: this.route });\n  }\n\n  viewEmployeeSalary(employeeSalary: EmployeeSalaryModel) {\n    this.employeeSalaryService.setEmployeeSalaryId(employeeSalary._id);\n    this.employeeSalaryService.setEmployeeSalaryData(employeeSalary);\n    this.router.navigate(['./view'], { relativeTo: this.route });\n  }\n\n  deleteEmployeeSalary(employeeSalary: string, i: number) {\n    this.loading = true;\n    this.employeeSalaryService.deleteEmployeeSalary(employeeSalary).subscribe(\n      (res: any) => {\n        this.employeeSalaries.splice(i, 1);\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  changeEmployeeSalaryStatus(employeeSalary: string, status: boolean, i: number) {\n    this.loading = true;\n    this.employeeSalaryService.changeEmployeeSalaryStatus(employeeSalary, status).subscribe(\n      (res: any) => {\n        this.employeeSalaries[i].status = status;\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  back() {\n    const type = this.employeeService.getEmployeeType();\n    this.router.navigate(['../'], { relativeTo: this.route, queryParams: { type } });\n  }\n\n  ngOnDestroy() {}\n}\n","import {\n  NbCardModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbIconModule,\n  NbTooltipModule,\n} from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageSalaryRoutingModule } from './manage-salary-routing.module';\nimport { ManageSalaryComponent } from './manage-salary.component';\n\n@NgModule({\n  declarations: [ManageSalaryComponent],\n  imports: [\n    CommonModule,\n    ManageSalaryRoutingModule,\n    NbCardModule,\n    NbButtonModule,\n    NbSelectModule,\n    NbIconModule,\n    NbTooltipModule,\n  ],\n})\nexport class ManageSalaryModule {}\n"]}