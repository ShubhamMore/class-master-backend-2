{"version":3,"sources":["webpack:///src/app/admin/membership-plans/save-membership-plan/save-membership-plan.component.html","webpack:///src/app/admin/membership-plans/save-membership-plan/save-membership-plan.component.ts","webpack:///src/app/admin/membership-plans/membership-plans.component.html","webpack:///src/app/admin/membership-plans/membership-plans.component.ts","webpack:///src/app/admin/membership-plans/membership-plans-routing.module.ts","webpack:///src/app/admin/membership-plans/membership-plans.module.ts"],"names":["SaveMembershipPlanComponent","membershipService","toastrService","ref","this","loading","submit","getMembershipPlan","subscribe","membership","membershipForm","name","validators","required","duration","price","min","onClose","markAllAsTouched","invalid","showToastr","value","_id","saveMembershipPlan","resMembership","close","error","position","status","message","show","setMembershipPlan","saveMembership","MembershipPlansComponent","dialogService","memberships","getMemberships","i","newMembership","find","curMembership","open","context","amount","parseFloat","toString","toFixed","membershipPlan","openMembershipDialog","routes","path","component","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","MembershipPlansRoutingModule","forChild","MembershipPlansModule"],"mappings":"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","file":"x","sourcesContent":["<nb-card class=\"membership-box\">\n  <nb-card-header>\n    <nb-icon class=\"float-right pointer\" icon=\"close-outline\" (click)=\"onClose()\"></nb-icon>\n    <h3 class=\"\">\n      {{ membership.name | uppercase }}\n    </h3>\n  </nb-card-header>\n  <nb-card-body>\n    <form class=\"\" (submit)=\"saveMembership()\" [formGroup]=\"membershipForm\">\n      <div class=\"table-responsive\">\n        <table class=\"table table-borderless\">\n          <tbody>\n            <tr>\n              <th>Plan Name</th>\n              <td>:</td>\n              <td>{{ membershipForm.value.name | uppercase }}</td>\n            </tr>\n            <tr>\n              <th>Duration</th>\n              <td>:</td>\n              <td>{{ membershipForm.value.duration }} Month/s</td>\n            </tr>\n            <tr>\n              <th>Price</th>\n              <td>:</td>\n              <td>\n                <div class=\"form-control-group\">\n                  <input\n                    type=\"number\"\n                    nbInput\n                    id=\"input-price\"\n                    name=\"price\"\n                    min=\"0\"\n                    formControlName=\"price\"\n                    placeholder=\"Price\"\n                    fullWidth\n                    [status]=\"\n                      membershipForm.get('price').touched\n                        ? membershipForm.get('price').invalid\n                          ? 'danger'\n                          : 'success'\n                        : 'basic'\n                    \"\n                  />\n                  <ng-container *ngIf=\"membershipForm.get('price').touched\">\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"membershipForm.get('price').errors?.required\"\n                    >\n                      Price Amount is required!\n                    </p>\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"membershipForm.get('price').errors?.min\"\n                    >\n                      Price Amount should be more than or equal to 0\n                    </p>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <hr />\n\n      <div class=\"row\">\n        <div class=\"col-md-12 text-right\">\n          <button\n            type=\"submit\"\n            nbButton\n            size=\"small\"\n            [disabled]=\"submit\"\n            [nbSpinner]=\"submit\"\n            nbSpinnerStatus=\"primary\"\n            nbSpinnerSize=\"small\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { MembershipService } from './../../../services/membership.service';\r\nimport { MembershipPlanModel as MembershipModel } from './../../../models/membership-plan.model';\r\nimport { NbDialogRef, NbToastrService } from '@nebular/theme';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-save-membership-plan',\r\n  templateUrl: './save-membership-plan.component.html',\r\n  styleUrls: ['./save-membership-plan.component.scss'],\r\n})\r\nexport class SaveMembershipPlanComponent implements OnInit, OnDestroy {\r\n  loading: boolean;\r\n  submit: boolean;\r\n\r\n  membership: MembershipModel;\r\n  membershipForm: FormGroup;\r\n\r\n  constructor(\r\n    private membershipService: MembershipService,\r\n    private toastrService: NbToastrService,\r\n    protected ref: NbDialogRef<SaveMembershipPlanComponent>,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.submit = false;\r\n\r\n    this.membershipService.getMembershipPlan().subscribe((membership: MembershipModel) => {\r\n      this.membership = membership;\r\n\r\n      if (!membership) {\r\n        this.onClose();\r\n        return;\r\n      }\r\n\r\n      this.membershipForm = new FormGroup({\r\n        name: new FormControl(membership.name, {\r\n          validators: [Validators.required],\r\n        }),\r\n        duration: new FormControl(membership.duration, {\r\n          validators: [Validators.required],\r\n        }),\r\n        price: new FormControl(membership.price, {\r\n          validators: [Validators.required, Validators.min(0)],\r\n        }),\r\n      });\r\n\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  saveMembership() {\r\n    this.membershipForm.markAllAsTouched();\r\n\r\n    if (this.membershipForm.invalid) {\r\n      this.showToastr('top-right', 'danger', 'Membership Details are required');\r\n      return;\r\n    }\r\n\r\n    this.submit = true;\r\n\r\n    const membership: any = { ...this.membershipForm.value };\r\n\r\n    if (this.membership._id) {\r\n      membership._id = this.membership._id;\r\n    }\r\n\r\n    this.membershipService.saveMembershipPlan(membership).subscribe(\r\n      (resMembership: MembershipModel) => {\r\n        this.ref.close(resMembership);\r\n      },\r\n      (error: any) => {\r\n        this.showToastr('top-right', 'danger', error);\r\n        this.submit = false;\r\n      },\r\n    );\r\n  }\r\n\r\n  onClose() {\r\n    this.ref.close();\r\n  }\r\n\r\n  private showToastr(position: any, status: any, message: string) {\r\n    this.toastrService.show(status, message, {\r\n      position,\r\n      status,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.membershipService.setMembershipPlan(null);\r\n  }\r\n}\r\n","<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>Membership Plans</h3>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body>\n    <div class=\"row\" *ngIf=\"!loading; else loadingData\">\n      <div class=\"col-12\">\n        <div class=\"table-responsive\" *ngIf=\"memberships.length > 0; else noMemberships\">\n          <table class=\"table\">\n            <thead>\n              <th>#</th>\n              <th>Membership Type</th>\n              <th>Duration</th>\n              <th>Price</th>\n              <th>Action</th>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let membership of memberships; let i = index\">\n                <td>{{ i + 1 }}</td>\n                <td>{{ membership.name | uppercase }}</td>\n                <td>{{ membership.duration }} Month/s</td>\n                <td>{{ getAmount(membership.price) }}/-</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    status=\"basic\"\n                    (click)=\"editMembership(membership)\"\n                  >\n                    Edit\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #loadingData>\n  <p class=\"pt-5 pb-5 text-center\">Loading...</p>\n</ng-template>\n\n<ng-template #noMemberships>\n  <p class=\"pt-5 pb-5 text-center\">No Membership Plans Available</p>\n</ng-template>\n","import { SaveMembershipPlanComponent } from './save-membership-plan/save-membership-plan.component';\r\nimport { MembershipPlanModel } from './../../models/membership-plan.model';\r\nimport { NbToastrService, NbDialogService } from '@nebular/theme';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { MembershipService } from './../../services/membership.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-membership-plans',\r\n  templateUrl: './membership-plans.component.html',\r\n  styleUrls: ['./membership-plans.component.scss'],\r\n})\r\nexport class MembershipPlansComponent implements OnInit {\r\n  loading: boolean;\r\n\r\n  memberships: MembershipPlanModel[];\r\n\r\n  constructor(\r\n    private membershipService: MembershipService,\r\n    private toastrService: NbToastrService,\r\n    private dialogService: NbDialogService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.memberships = [\r\n      new MembershipPlanModel(null, 'monthly', '1', '1999', true),\r\n      new MembershipPlanModel(null, 'quarterly', '3', '4999', true),\r\n      new MembershipPlanModel(null, 'half-yearly', '6', '7999', true),\r\n      new MembershipPlanModel(null, 'yearly', '12', '11999', true),\r\n    ];\r\n\r\n    this.getMemberships();\r\n  }\r\n\r\n  getMemberships() {\r\n    this.loading = true;\r\n    this.membershipService.getMemberships().subscribe(\r\n      (memberships: MembershipPlanModel[]) => {\r\n        for (let i = 0; i < 4; i++) {\r\n          const membership = this.memberships[i];\r\n\r\n          const newMembership = memberships.find(\r\n            (curMembership: MembershipPlanModel) => curMembership.name === membership.name,\r\n          );\r\n\r\n          if (newMembership) {\r\n            this.memberships[i] = newMembership;\r\n          }\r\n        }\r\n\r\n        this.loading = false;\r\n      },\r\n      (error: any) => {\r\n        this.showToastr('top-right', 'danger', error);\r\n        this.loading = false;\r\n      },\r\n    );\r\n  }\r\n\r\n  openMembershipDialog() {\r\n    this.dialogService\r\n      .open(SaveMembershipPlanComponent, {\r\n        context: {},\r\n      })\r\n      .onClose.subscribe((membership: any) => membership && this.getMemberships());\r\n  }\r\n\r\n  getAmount(amount: any) {\r\n    amount = parseFloat(amount.toString());\r\n    return amount.toFixed(2).toString();\r\n  }\r\n\r\n  editMembership(membershipPlan: MembershipPlanModel) {\r\n    this.membershipService.setMembershipPlan(membershipPlan);\r\n    this.openMembershipDialog();\r\n  }\r\n\r\n  showToastr(position: any, status: any, message: string) {\r\n    this.toastrService.show(status, message, {\r\n      position,\r\n      status,\r\n    });\r\n  }\r\n}\r\n","import { MembershipPlansComponent } from './membership-plans.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MembershipPlansComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../shared/page-not-found/page-not-found.module').then((m) => m.PageNotFoundModule),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MembershipPlansRoutingModule {}\n","import {\n  NbIconModule,\n  NbSelectModule,\n  NbButtonModule,\n  NbInputModule,\n  NbSpinnerModule,\n  NbCardModule,\n} from '@nebular/theme';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MembershipPlansRoutingModule } from './membership-plans-routing.module';\nimport { MembershipPlansComponent } from './membership-plans.component';\nimport { SaveMembershipPlanComponent } from './save-membership-plan/save-membership-plan.component';\n\n@NgModule({\n  declarations: [MembershipPlansComponent, SaveMembershipPlanComponent],\n  imports: [\n    CommonModule,\n    MembershipPlansRoutingModule,\n    NbCardModule,\n    NbInputModule,\n    NbButtonModule,\n    NbSelectModule,\n    NbSpinnerModule,\n    NbIconModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class MembershipPlansModule {}\n"]}