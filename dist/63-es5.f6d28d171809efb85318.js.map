{"version":3,"sources":["webpack:///src/app/admin/storage-packages/save-storage-package/save-storage-package.component.html","webpack:///src/app/admin/storage-packages/save-storage-package/save-storage-package.component.ts","webpack:///src/app/admin/storage-packages/storage-packages.component.html","webpack:///src/app/admin/storage-packages/storage-packages.component.ts","webpack:///src/app/admin/storage-packages/storage-packages.module.ts","webpack:///src/app/admin/storage-packages/storage-packages-routing.module.ts"],"names":["SaveStoragePackageComponent","storagePackageService","toastrService","ref","this","loading","submit","getStoragePackageData","subscribe","storagePackage","storagePackageForm","packageName","validators","required","storage","min","validity","price","patchValue","markAllAsTouched","invalid","showToastr","value","_id","editStoragePackage","resStoragePackage","close","error","saveStoragePackage","position","status","message","show","setStoragePackageData","onClose","StoragePackagesComponent","StoragePackagesModule","StoragePackagesRoutingModule","storageService","dialogService","storagePackages","getStoragePackages","open","context","storageInBytes","convertUnitToBytes","storageSizeWithUnit","convertByteToUnit","toFixed","unit","amount","parseFloat","toString","openStoragePackageDialog","i","changeStoragePackageStatus","res","deleteStoragePackage","splice","routes","path","component","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","forChild"],"mappings":"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","file":"x","sourcesContent":["<nb-card class=\"storagePackage-box\">\n  <nb-card-header>\n    <nb-icon class=\"float-right pointer\" icon=\"close-outline\" (click)=\"onClose()\"></nb-icon>\n    <h3 class=\"\">{{ storagePackage ? 'Update' : 'Add' }} Storage Package</h3>\n  </nb-card-header>\n  <nb-card-body>\n    <form class=\"\" (submit)=\"saveStoragePackage()\" [formGroup]=\"storagePackageForm\">\n      <div class=\"table-responsive\">\n        <table class=\"table table-borderless\">\n          <tbody>\n            <tr>\n              <th>Package Name</th>\n              <td>:</td>\n              <td>\n                <div class=\"form-control-group\">\n                  <input\n                    type=\"text\"\n                    nbInput\n                    id=\"input-package-name\"\n                    name=\"packageName\"\n                    formControlName=\"packageName\"\n                    placeholder=\"Package Name\"\n                    fullWidth\n                    [status]=\"\n                      storagePackageForm.get('packageName').touched\n                        ? storagePackageForm.get('packageName').invalid\n                          ? 'danger'\n                          : 'success'\n                        : 'basic'\n                    \"\n                  />\n                  <ng-container *ngIf=\"storagePackageForm.get('packageName').touched\">\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"storagePackageForm.get('packageName').errors?.required\"\n                    >\n                      Storage Package Name is required!\n                    </p>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <th>Storage (in MB)</th>\n              <td>:</td>\n              <td>\n                <div class=\"form-control-group\">\n                  <input\n                    type=\"number\"\n                    nbInput\n                    id=\"input-storage\"\n                    name=\"storage\"\n                    min=\"0\"\n                    formControlName=\"storage\"\n                    placeholder=\"Storage (in MB)\"\n                    fullWidth\n                    [status]=\"\n                      storagePackageForm.get('storage').touched\n                        ? storagePackageForm.get('storage').invalid\n                          ? 'danger'\n                          : 'success'\n                        : 'basic'\n                    \"\n                  />\n                  <ng-container *ngIf=\"storagePackageForm.get('storage').touched\">\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"storagePackageForm.get('storage').errors?.required\"\n                    >\n                      Storage is required!\n                    </p>\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"storagePackageForm.get('storage').errors?.min\"\n                    >\n                      Storage should be more than 0\n                    </p>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <th>Storage Validity (in Days)</th>\n              <td>:</td>\n              <td>\n                <div class=\"form-control-group\">\n                  <input\n                    type=\"number\"\n                    nbInput\n                    id=\"input-validity\"\n                    name=\"validity\"\n                    min=\"0\"\n                    formControlName=\"validity\"\n                    placeholder=\"Storage Validity (in Days)\"\n                    fullWidth\n                    [status]=\"\n                      storagePackageForm.get('validity').touched\n                        ? storagePackageForm.get('validity').invalid\n                          ? 'danger'\n                          : 'success'\n                        : 'basic'\n                    \"\n                  />\n                  <ng-container *ngIf=\"storagePackageForm.get('validity').touched\">\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"storagePackageForm.get('validity').errors?.required\"\n                    >\n                      Storage Validity is required!\n                    </p>\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"storagePackageForm.get('validity').errors?.min\"\n                    >\n                      Storage Validity should be more than 0\n                    </p>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <th>Price</th>\n              <td>:</td>\n              <td>\n                <div class=\"form-control-group\">\n                  <input\n                    type=\"number\"\n                    nbInput\n                    id=\"input-price\"\n                    name=\"price\"\n                    min=\"0\"\n                    formControlName=\"price\"\n                    placeholder=\"Price\"\n                    fullWidth\n                    [status]=\"\n                      storagePackageForm.get('price').touched\n                        ? storagePackageForm.get('price').invalid\n                          ? 'danger'\n                          : 'success'\n                        : 'basic'\n                    \"\n                  />\n                  <ng-container *ngIf=\"storagePackageForm.get('price').touched\">\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"storagePackageForm.get('price').errors?.required\"\n                    >\n                      Price Amount is required!\n                    </p>\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"storagePackageForm.get('price').errors?.min\"\n                    >\n                      Price Amount should be more than or equal to 0\n                    </p>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <hr />\n\n      <div class=\"row\">\n        <div class=\"col-md-12 text-right\">\n          <button\n            type=\"submit\"\n            nbButton\n            size=\"small\"\n            [disabled]=\"submit\"\n            [nbSpinner]=\"submit\"\n            nbSpinnerStatus=\"primary\"\n            nbSpinnerSize=\"small\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { DateService } from './../../../services/shared-services/date.service';\nimport { StoragePackageService } from './../../../services/storage-package.service';\nimport { StoragePackageModel } from './../../../models/storage-package.model';\nimport { NbDialogRef, NbToastrService } from '@nebular/theme';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'ngx-save-storage-package',\n  templateUrl: './save-storage-package.component.html',\n  styleUrls: ['./save-storage-package.component.scss'],\n})\nexport class SaveStoragePackageComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  submit: boolean;\n\n  storagePackage: StoragePackageModel;\n  storagePackageForm: FormGroup;\n\n  constructor(\n    private storagePackageService: StoragePackageService,\n    private toastrService: NbToastrService,\n    protected ref: NbDialogRef<SaveStoragePackageComponent>,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.submit = false;\n\n    this.storagePackageService\n      .getStoragePackageData()\n      .subscribe((storagePackage: StoragePackageModel) => {\n        this.storagePackageForm = new FormGroup({\n          packageName: new FormControl(null, {\n            validators: [Validators.required],\n          }),\n          storage: new FormControl(null, {\n            validators: [Validators.required, Validators.min(0)],\n          }),\n          validity: new FormControl(null, {\n            validators: [Validators.required, Validators.min(0)],\n          }),\n          price: new FormControl(null, {\n            validators: [Validators.required, Validators.min(0)],\n          }),\n        });\n\n        if (storagePackage) {\n          this.storagePackage = storagePackage;\n\n          this.storagePackageForm.patchValue({\n            packageName: storagePackage.packageName,\n            storage: storagePackage.storage,\n            validity: storagePackage.validity,\n            price: storagePackage.price,\n          });\n        }\n\n        this.loading = false;\n      });\n  }\n\n  saveStoragePackage() {\n    this.storagePackageForm.markAllAsTouched();\n\n    if (this.storagePackageForm.invalid) {\n      this.showToastr('top-right', 'danger', 'StoragePackage Details are required');\n      return;\n    }\n\n    this.submit = true;\n\n    const storagePackage: any = { ...this.storagePackageForm.value };\n\n    if (!this.storagePackage) {\n      this.storagePackageService.saveStoragePackage(storagePackage).subscribe(\n        (resStoragePackage: StoragePackageModel) => {\n          this.ref.close(resStoragePackage);\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.submit = false;\n        },\n      );\n    } else {\n      storagePackage._id = this.storagePackage._id;\n      this.storagePackageService.editStoragePackage(storagePackage).subscribe(\n        (resStoragePackage: StoragePackageModel) => {\n          this.ref.close(resStoragePackage);\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.submit = false;\n        },\n      );\n    }\n  }\n\n  onClose() {\n    this.ref.close();\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  ngOnDestroy() {\n    this.storagePackageService.setStoragePackageData(null);\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>Storage Packages</h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button\n          nbButton\n          status=\"primary\"\n          size=\"small\"\n          fullWidth\n          (click)=\"openStoragePackageDialog()\"\n        >\n          Add Storage Package\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body>\n    <div class=\"row\" *ngIf=\"!loading; else loadingData\">\n      <div class=\"col-12\">\n        <div class=\"table-responsive\" *ngIf=\"storagePackages.length > 0; else noStoragePackages\">\n          <table class=\"table\">\n            <thead>\n              <th>#</th>\n              <th>Package</th>\n              <th>Storage Size</th>\n              <th>Validity</th>\n              <th>Price</th>\n              <th colspan=\"3\">Action</th>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let storagePackage of storagePackages; let i = index\">\n                <td>{{ i + 1 }}</td>\n                <td>{{ storagePackage.packageName }}</td>\n                <td>{{ calculateStorage(storagePackage.storage) }}</td>\n                <td>{{ storagePackage.validity }} Days</td>\n                <td>{{ getAmount(storagePackage.price) }}/-</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    status=\"basic\"\n                    (click)=\"editStoragePackage(storagePackage)\"\n                  >\n                    Edit\n                  </button>\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    [status]=\"storagePackage.status ? 'warning' : 'success'\"\n                    (click)=\"\n                      changeStoragePackageStatus(storagePackage._id, !storagePackage.status, i)\n                    \"\n                  >\n                    {{ storagePackage.status ? 'Deactivate' : 'Activate' }}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    status=\"danger\"\n                    (click)=\"deleteStoragePackage(storagePackage._id, i)\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #loadingData>\n  <p class=\"pt-5 pb-5 text-center\">Loading...</p>\n</ng-template>\n\n<ng-template #noStoragePackages>\n  <p class=\"pt-5 pb-5 text-center\">No Storage Packages Available</p>\n</ng-template>\n","import { StorageService } from './../../services/shared-services/storage.service';\nimport { SaveStoragePackageComponent } from './save-storage-package/save-storage-package.component';\nimport { StoragePackageModel } from './../../models/storage-package.model';\nimport { NbToastrService, NbDialogService } from '@nebular/theme';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { StoragePackageService } from './../../services/storage-package.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-storage-packages',\n  templateUrl: './storage-packages.component.html',\n  styleUrls: ['./storage-packages.component.scss'],\n})\nexport class StoragePackagesComponent implements OnInit {\n  loading: boolean;\n\n  storagePackages: StoragePackageModel[];\n\n  constructor(\n    private storageService: StorageService,\n    private storagePackageService: StoragePackageService,\n    private toastrService: NbToastrService,\n    private dialogService: NbDialogService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.storagePackages = [];\n\n    this.getStoragePackages();\n  }\n\n  getStoragePackages() {\n    this.loading = true;\n    this.storagePackageService.getStoragePackages().subscribe(\n      (storagePackages: StoragePackageModel[]) => {\n        this.storagePackages = storagePackages;\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  openStoragePackageDialog() {\n    this.dialogService\n      .open(SaveStoragePackageComponent, {\n        context: {},\n      })\n      .onClose.subscribe((storagePackage: any) => storagePackage && this.getStoragePackages());\n  }\n\n  calculateStorage(storage: any) {\n    const storageInBytes = this.storageService.convertUnitToBytes(storage, 'MB');\n    const storageSizeWithUnit = this.storageService.convertByteToUnit(storageInBytes);\n    return storageSizeWithUnit.value.toFixed(1) + ' ' + storageSizeWithUnit.unit;\n  }\n\n  getAmount(amount: any) {\n    amount = parseFloat(amount.toString());\n    return amount.toFixed(2).toString();\n  }\n\n  editStoragePackage(storagePackage: StoragePackageModel) {\n    this.storagePackageService.setStoragePackageData(storagePackage);\n    this.openStoragePackageDialog();\n  }\n\n  changeStoragePackageStatus(storagePackage: string, status: boolean, i: number) {\n    this.loading = true;\n\n    this.storagePackageService.changeStoragePackageStatus(storagePackage, status).subscribe(\n      (res: any) => {\n        this.showToastr('top-right', 'success', 'Storage Package Status Updated Successfully');\n        this.storagePackages[i].status = status;\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  deleteStoragePackage(storagePackage: string, i: number) {\n    this.loading = true;\n\n    this.storagePackageService.deleteStoragePackage(storagePackage).subscribe(\n      (res: any) => {\n        this.showToastr('top-right', 'success', 'Storage Package Deleted Successfully');\n        this.storagePackages.splice(i, 1);\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import {\n  NbIconModule,\n  NbSpinnerModule,\n  NbSelectModule,\n  NbButtonModule,\n  NbCardModule,\n  NbInputModule,\n} from '@nebular/theme';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SaveStoragePackageComponent } from './save-storage-package/save-storage-package.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { StoragePackagesRoutingModule } from './storage-packages-routing.module';\nimport { StoragePackagesComponent } from './storage-packages.component';\n\n@NgModule({\n  declarations: [StoragePackagesComponent, SaveStoragePackageComponent],\n  imports: [\n    CommonModule,\n    StoragePackagesRoutingModule,\n    NbCardModule,\n    NbInputModule,\n    NbButtonModule,\n    NbSelectModule,\n    NbSpinnerModule,\n    NbIconModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class StoragePackagesModule {}\n","import { StoragePackagesComponent } from './storage-packages.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StoragePackagesComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../shared/page-not-found/page-not-found.module').then((m) => m.PageNotFoundModule),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StoragePackagesRoutingModule {}\n"]}