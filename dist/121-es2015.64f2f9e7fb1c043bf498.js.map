{"version":3,"sources":["webpack:///src/app/employee/branch/manage-branch/manage-branch-routing.module.ts","webpack:///src/app/employee/branch/manage-branch/manage-branch.component.ts","webpack:///src/app/employee/branch/manage-branch/manage-branch.component.html","webpack:///src/app/employee/branch/manage-branch/manage-branch.module.ts"],"names":["routes","path","component","ManageBranchComponent","branchService","router","route","this","loading","branchId","getBranchId","navigate","relativeTo","children","loadChildren","then","m","ReceiptInfoModule","CourseModule","DiscountAndOfferModule","redirectTo","pathMatch","PageNotFoundModule","ManageBranchRoutingModule","forChild","ManageBranchModule"],"mappings":"2MAIA,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCEG,M,MAAMC,EAIX,YACUC,EAEAC,EACAC,GAHA,KAAAF,gBAEA,KAAAC,SACA,KAAAC,QAGV,WACEC,KAAKC,SAAU,EACfD,KAAKE,SAAWF,KAAKH,cAAcM,cAC9BH,KAAKE,UACRF,KAAKF,OAAOM,SAAS,CAAC,OAAQ,CAAEC,WAAYL,KAAKD,S,6CAf1CH,GAAqB,oH,mDAArBA,EAAqB,6ECTlC,6C,kCDSO,GDDHU,SAAU,CACR,CACEZ,KAAM,UACNa,aAAc,IACZ,yDAA6CC,KAAMC,GAAMA,EAAEC,oBAG/D,CACEhB,KAAM,SACNa,aAAc,IAAM,mCAAiCC,KAAMC,GAAMA,EAAEE,eAGrE,CACEjB,KAAM,sBACNa,aAAc,IACZ,mCAAyDC,KACtDC,GAAMA,EAAEG,yBAIf,CACElB,KAAM,GACNmB,WAAY,SACZC,UAAW,QAGb,CACEpB,KAAM,iBACNa,aAAc,IACZ,iCAA+DC,KAC5DC,GAAMA,EAAEM,qBAIf,CACErB,KAAM,KACNmB,WAAY,iBACZC,UAAW,WAUZ,Y,MAAME,G,yDAAAA,I,+EAAAA,IAAyB,SAH3B,CAAC,IAAaC,SAASxB,IACtB,O,GAEL,GG7CA,Q,MAAMyB,G,yDAAAA,I,+EAAAA,IAAkB,SAFpB,CAAC,IAAc,M,GAEnB","file":"x","sourcesContent":["import { ManageBranchComponent } from './manage-branch.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ManageBranchComponent,\n    children: [\n      {\n        path: 'receipt',\n        loadChildren: () =>\n          import('./receipt-info/receipt-info.module').then((m) => m.ReceiptInfoModule),\n      },\n\n      {\n        path: 'course',\n        loadChildren: () => import('./course/course.module').then((m) => m.CourseModule),\n      },\n\n      {\n        path: 'discount-and-offers',\n        loadChildren: () =>\n          import('./discount-and-offer/discount-and-offer.module').then(\n            (m) => m.DiscountAndOfferModule,\n          ),\n      },\n\n      {\n        path: '',\n        redirectTo: 'course',\n        pathMatch: 'full',\n      },\n\n      {\n        path: 'page-not-found',\n        loadChildren: () =>\n          import('../../../shared/page-not-found/page-not-found.module').then(\n            (m) => m.PageNotFoundModule,\n          ),\n      },\n\n      {\n        path: '**',\n        redirectTo: 'page-not-found',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ManageBranchRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { BranchService } from './../../../services/branch.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'ngx-manage-branch',\n  templateUrl: './manage-branch.component.html',\n  styleUrls: ['./manage-branch.component.scss'],\n})\nexport class ManageBranchComponent implements OnInit {\n  loading: boolean;\n  branchId: string;\n\n  constructor(\n    private branchService: BranchService,\n\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.branchId = this.branchService.getBranchId();\n    if (!this.branchId) {\n      this.router.navigate(['../'], { relativeTo: this.route });\n\n      return;\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { ManageBranchComponent } from './manage-branch.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ManageBranchRoutingModule } from './manage-branch-routing.module';\n\n@NgModule({\n  declarations: [ManageBranchComponent],\n  imports: [CommonModule, ManageBranchRoutingModule],\n})\nexport class ManageBranchModule {}\n"]}