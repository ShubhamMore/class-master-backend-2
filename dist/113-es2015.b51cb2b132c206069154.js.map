{"version":3,"sources":["webpack:///src/app/employee/branch/manage-branch/course/course-material/add-course-material/add-course-material.component.html","webpack:///src/app/employee/branch/manage-branch/course/course-material/add-course-material/add-course-material-routing.module.ts","webpack:///src/app/employee/branch/manage-branch/course/course-material/add-course-material/add-course-material.component.ts","webpack:///src/app/employee/branch/manage-branch/course/course-material/add-course-material/add-course-material.module.ts"],"names":["routes","path","component","AddCourseMaterialComponent","branchService","courseService","courseMaterialService","toastrService","router","route","this","loading","submit","invalidFile","invalidSubject","branchId","getBranchId","courseId","getCourseId","showToastr","cancel","uploadCourseMaterials","subject","getCourseData","subscribe","course","event","files","target","fileExt","ext","n","length","i","name","substring","lastIndexOf","toLowerCase","indexOf","fileInput","nativeElement","value","push","courseMaterials","FormData","append","basicDetails","category","newCourseMaterials","res","totalFiles","overStorageFiles","error","index","splice","position","status","message","show","navigate","relativeTo","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","AddCourseMaterialRoutingModule","forChild","AddCourseMaterialModule"],"mappings":"sSA0CY,gDAAyE,yBAEvE,+B,yBAFiD,yCAAsB,yE,kEAZ3E,gDAOE,qJAIA,gDAAoB,0CAAc,8BAClC,kDAGF,8B,gDATE,gDAAoB,qEAMT,oF,sBAMX,wCAAwD,gDAAoB,+B,yBAD9E,0CACE,0CACF,wC,6CADmC,8E,sBAkCnC,0CACE,wCACE,+FACF,8BACF,wC,kEAqBI,yCACE,yCAAuB,yBAAW,8BAClC,yCACE,2CACE,yBACF,8BACF,8BACA,yCACE,6CAKE,sJAIA,yCACF,8BACF,8BACF,8B,sCAnByB,kEAGnB,8EAWA,oG,yBAzBZ,0CACE,4CACE,4CACE,yCACE,yCAA+B,8BAAE,8BACjC,yCAA+B,wCAAY,8BAC3C,yCAA2C,kCAAM,8BACnD,8BACF,8BACA,6CACE,4CAqBF,8BACF,8BACF,+B,6CAvB4B,2F,qBAwBL,8E,kEAnI/B,2CACE,kDACE,yCACE,yCACE,sCAAI,wCAAY,8BAClB,8BACA,yCACE,4CAUE,4IAEA,wCACA,wCACF,8BACF,8BACF,8BACF,8BACA,iDACE,0CACE,0CACE,0CACE,4CAAyC,6CAAgB,8BACzD,kDAiBA,qDAGF,8BACF,8BAEA,0CACE,0CACE,4CACG,sFAAyD,8BAE5D,gDAQE,yIARF,8BAYA,8CAOE,oHAAS,WAET,uDACF,8BAEA,qDAKF,8BACF,8BACF,8BAEA,kCAEA,0CAAwB,6CAAgB,8BAExC,0CACE,2CACE,8CAkCA,gGACF,8BACF,8BACF,8BACF,8B,gFA1HU,2EAAmB,sBA0BjB,uEAQY,+EAmCA,4EAec,+FAAsD,eC7F5F,MAAMA,EAAiB,CACrB,CAAEC,KAAM,GAAIC,UCQP,M,MAAMC,EAgBX,YACUC,EACAC,EACAC,EACAC,EACAC,EACAC,GALA,KAAAL,gBACA,KAAAC,gBACA,KAAAC,wBACA,KAAAC,gBACA,KAAAC,SACA,KAAAC,QAGV,WASE,GARAC,KAAKC,SAAU,EACfD,KAAKE,QAAS,EAEdF,KAAKG,aAAc,EACnBH,KAAKI,gBAAiB,EAEtBJ,KAAKK,SAAWL,KAAKN,cAAcY,cACnCN,KAAKO,SAAWP,KAAKL,cAAca,eAC9BR,KAAKK,WAAaL,KAAKO,SAG1B,OAFAP,KAAKS,WAAW,YAAa,SAAU,uBACvCT,KAAKU,SAIPV,KAAKW,sBAAwB,GAC7BX,KAAKY,QAAU,GACfZ,KAAKL,cAAckB,gBAAgBC,UAAWC,IACvCA,GAILf,KAAKe,OAASA,EACdf,KAAKC,SAAU,GAJbD,KAAKU,WAQX,aAAaM,GACXhB,KAAKG,aAAc,EACnB,MAAMc,EAASD,EAAME,OAA4BD,MAC3CE,EAAoB,CAAC,MAAO,MAAO,MAAO,OAAQ,OACxD,IAAIC,EAAc,KAClB,MAAMC,EAAYJ,EAAMK,OACxB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAGE,IAErB,GADAH,EAAMH,EAAMM,GAAGC,KAAKC,UAAUR,EAAMM,GAAGC,KAAKE,YAAY,KAAO,GAAGC,eAClC,IAA1BR,EAAQS,QAAQR,GAGpB,OAFApB,KAAKG,aAAc,OACnBH,KAAK6B,UAAUC,cAAcC,MAAQ,IAIzC/B,KAAKG,aAAc,EACnB,IAAK,IAAIoB,EAAI,EAAGA,EAAIF,EAAGE,IACrBvB,KAAKW,sBAAsBqB,KAAKf,EAAMM,IAExCvB,KAAK6B,UAAUC,cAAcC,MAAQ,GAGvC,gBAAgBnB,GACdZ,KAAKY,QAAUA,EAEbZ,KAAKI,eADS,KAAZQ,EAON,qBAKE,GAJKZ,KAAKY,SAA4B,KAAjBZ,KAAKY,UACxBZ,KAAKI,gBAAiB,GAGpBJ,KAAKW,sBAAsBW,OAAS,EAGtC,OAFAtB,KAAKS,WAAW,YAAa,SAAU,+CACvCT,KAAKG,aAAc,GAEd,GAAIH,KAAKI,eAEd,YADAJ,KAAKS,WAAW,YAAa,SAAU,yBAIzCT,KAAKE,QAAS,EACdF,KAAKG,aAAc,EAEnB,MAAM8B,EAAkB,IAAIC,SAC5BD,EAAgBE,OAAO,SAAUnC,KAAKK,UACtC4B,EAAgBE,OAAO,WAAYnC,KAAKe,OAAOqB,aAAaC,UAC5DJ,EAAgBE,OAAO,SAAUnC,KAAKO,UACtC0B,EAAgBE,OAAO,UAAWnC,KAAKY,SACvC,IAAK,IAAIW,EAAI,EAAGA,EAAIvB,KAAKW,sBAAsBW,OAAQC,IACrDU,EAAgBE,OACd,WACAnC,KAAKW,sBAAsBY,GAC3BvB,KAAKW,sBAAsBY,GAAGC,KAAKC,UACjC,EACAzB,KAAKW,sBAAsBY,GAAGC,KAAKE,YAAY,OAKrD1B,KAAKJ,sBAAsB0C,mBAAmBL,GAAiBnB,UAC5DyB,IACC,MAAMC,EAAaxC,KAAKW,sBAAsBW,OACxCmB,EAAmBF,EAAIE,iBACzBA,EAAmBD,GACrBxC,KAAKS,WACH,YACA,UACA,GAAG+B,EAAaC,SACdD,EAAaC,GAAqB,EAAI,MAAQ,kCAKhDA,EAAmB,GACrBzC,KAAKS,WACH,YACA,SACA,oBAAoBgC,SACG,IAArBA,EAAyB,MAAQ,wBAKvCzC,KAAKW,sBAAwB,GAC7BX,KAAKE,QAAS,EACdF,KAAKU,UAENgC,IACC1C,KAAKS,WAAW,YAAa,SAAUiC,GACvC1C,KAAKE,QAAS,IAKpB,WAAWyC,GACT3C,KAAKW,sBAAsBiC,OAAOD,EAAO,GAGnC,WAAWE,EAAeC,EAAaC,GAC7C/C,KAAKH,cAAcmD,KAAKF,EAAQC,EAAS,CACvCF,WACAC,WAIJ,SACE9C,KAAKF,OAAOmD,SAAS,CAAC,OAAQ,CAAEC,WAAYlD,KAAKD,S,6CAlKxCN,GAA0B,uO,mDAA1BA,EAA0B,gE,MAAA,K,qrDFbvC,gD,KAAS,8C,kFEaF,IDNL,CACEF,KAAM,iBACN4D,aAAc,IACZ,iCAAwEC,KACrEC,GAAMA,EAAEC,qBAIf,CACE/D,KAAM,KACNgE,WAAY,iBACZC,UAAW,SAQR,Y,MAAMC,G,yDAAAA,I,+EAAAA,IAA8B,SAHhC,CAAC,IAAaC,SAASpE,IACtB,O,GAEL,GEIA,Q,MAAMqE,G,yDAAAA,I,+EAAAA,IAAuB,SAZzB,CACP,IACA,EACA,IACA,IACA,IACA,KACA,KACA,IACA,S,GAGG","file":"x","sourcesContent":["<nb-card *ngIf=\"!loading\">\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>Add Material</h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button\n          nbButton\n          size=\"small\"\n          type=\"button\"\n          fullWidth\n          status=\"primary\"\n          [disabled]=\"submit\"\n          [nbSpinner]=\"submit\"\n          nbSpinnerStatus=\"primary\"\n          nbSpinnerSize=\"small\"\n          (click)=\"saveCourseMaterial()\"\n        >\n          Upload&nbsp;\n          <nb-icon icon=\"arrow-circle-up-outline\"></nb-icon>\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <div class=\"form-control-group\">\n          <label class=\"label\" for=\"input-subject\">Select Subject :</label>\n          <nb-select\n            type=\"text\"\n            id=\"input-subject\"\n            name=\"subject\"\n            placeholder=\"Select Subject\"\n            fullWidth\n            [selected]=\"subject\"\n            (selectedChange)=\"onSelectSubject($event)\"\n            [status]=\"invalidSubject ? (subject === '' ? 'danger' : 'success') : 'basic'\"\n            *ngIf=\"course\"\n          >\n            <nb-option value=\"\">Select Subject</nb-option>\n            <nb-option *ngFor=\"let subject of course.subjects\" [value]=\"subject._id\">{{\n              subject.subject\n            }}</nb-option>\n          </nb-select>\n\n          <ng-container *ngIf=\"invalidSubject\">\n            <p class=\"caption status-danger\" *ngIf=\"subject === ''\">Subject is required!</p>\n          </ng-container>\n        </div>\n      </div>\n\n      <div class=\"col-md-6\">\n        <div class=\"form-control-group\">\n          <label class=\"label\" for=\"input-subject\"\n            >Click on Following Button to Select Course Material Files</label\n          >\n          <input\n            type=\"file\"\n            nbInput\n            id=\"input-file\"\n            name=\"file\"\n            placeholder=\"Select File\"\n            fullWidth\n            #filePicker\n            (change)=\"onFilePicked($event)\"\n            multiple\n            hidden\n          />\n          <button\n            nbButton\n            size=\"small\"\n            type=\"button\"\n            fullWidth\n            status=\"warning\"\n            id=\"files\"\n            (click)=\"filePicker.click()\"\n          >\n            Click Here to Pick Files\n          </button>\n\n          <ng-container *ngIf=\"invalidFile\">\n            <p class=\"caption status-danger\">\n              *Please Select a Valid File (*.pdf, '*.jpg, *.png, *.jpeg, *.mp4)\n            </p>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n\n    <hr />\n\n    <h4 class=\"text-center\">File/s To Upload</h4>\n\n    <div class=\"row\">\n      <div class=\"col-md-10 mx-auto\">\n        <div class=\"table-responsive\" *ngIf=\"uploadCourseMaterials.length > 0; else noFiles\">\n          <table class=\"table table-sm table-hover\">\n            <thead class=\"table-heading\">\n              <tr class=\"table-row\">\n                <th class=\"table-heading-data\">ID</th>\n                <th class=\"table-heading-data\">Content File</th>\n                <th class=\"table-heading-data text-center\">Remove</th>\n              </tr>\n            </thead>\n            <tbody class=\"table-body\">\n              <tr class=\"table-row\" *ngFor=\"let file of uploadCourseMaterials; let i = index\">\n                <td class=\"table-data\">{{ i + 1 }}</td>\n                <td class=\"table-data\">\n                  <span class=\"mr-2\">\n                    {{ file.name }}\n                  </span>\n                </td>\n                <td class=\"table-data text-center\">\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"tiny\"\n                    shape=\"round\"\n                    (click)=\"removeFile(i)\"\n                    status=\"danger\"\n                    nbTooltip=\"Remove {{ file.name }}\"\n                  >\n                    <nb-icon icon=\"close-outline\"></nb-icon>\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <ng-template #noFiles> No Files Selected, Please Select Files to Upload </ng-template>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddCourseMaterialComponent } from './add-course-material.component';\n\nconst routes: Routes = [\n  { path: '', component: AddCourseMaterialComponent },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../../../../../shared/page-not-found/page-not-found.module').then(\n        (m) => m.PageNotFoundModule,\n      ),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AddCourseMaterialRoutingModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CourseMaterialService } from '../../../../../../services/course-material.service';\nimport { CourseModel } from '../../../../../../models/course.model';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { CourseService } from '../../../../../../services/course.service';\nimport { NbToastrService } from '@nebular/theme';\nimport { BranchService } from '../../../../../../services/branch.service';\n\n@Component({\n  selector: 'ngx-add-course-material',\n  templateUrl: './add-course-material.component.html',\n  styleUrls: ['./add-course-material.component.scss'],\n})\nexport class AddCourseMaterialComponent implements OnInit {\n  @ViewChild('filePicker') private fileInput: any;\n  uploadCourseMaterials: File[];\n\n  loading: boolean;\n  submit: boolean;\n\n  invalidFile: boolean;\n\n  private branchId: string;\n  private courseId: string;\n  course: CourseModel;\n\n  subject: string;\n  invalidSubject: boolean;\n\n  constructor(\n    private branchService: BranchService,\n    private courseService: CourseService,\n    private courseMaterialService: CourseMaterialService,\n    private toastrService: NbToastrService,\n    private router: Router,\n    private route: ActivatedRoute,\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n    this.submit = false;\n\n    this.invalidFile = false;\n    this.invalidSubject = false;\n\n    this.branchId = this.branchService.getBranchId();\n    this.courseId = this.courseService.getCourseId();\n    if (!this.branchId || !this.courseId) {\n      this.showToastr('top-right', 'danger', 'Invalid Course');\n      this.cancel();\n      return;\n    }\n\n    this.uploadCourseMaterials = [];\n    this.subject = '';\n    this.courseService.getCourseData().subscribe((course: CourseModel) => {\n      if (!course) {\n        this.cancel();\n        return;\n      }\n      this.course = course;\n      this.loading = false;\n    });\n  }\n\n  onFilePicked(event: Event) {\n    this.invalidFile = false;\n    const files = (event.target as HTMLInputElement).files;\n    const fileExt: string[] = ['pdf', 'jpg', 'png', 'jpeg', 'mp4'];\n    let ext: string = null;\n    const n: number = files.length;\n    for (let i = 0; i < n; i++) {\n      ext = files[i].name.substring(files[i].name.lastIndexOf('.') + 1).toLowerCase();\n      if (!(fileExt.indexOf(ext) !== -1)) {\n        this.invalidFile = true;\n        this.fileInput.nativeElement.value = '';\n        return;\n      }\n    }\n    this.invalidFile = false;\n    for (let i = 0; i < n; i++) {\n      this.uploadCourseMaterials.push(files[i]);\n    }\n    this.fileInput.nativeElement.value = '';\n  }\n\n  onSelectSubject(subject: string) {\n    this.subject = subject;\n    if (subject === '') {\n      this.invalidSubject = true;\n    } else {\n      this.invalidSubject = false;\n    }\n  }\n\n  saveCourseMaterial() {\n    if (!this.subject || this.subject === '') {\n      this.invalidSubject = true;\n    }\n\n    if (this.uploadCourseMaterials.length < 1) {\n      this.showToastr('top-right', 'danger', 'Select at least 1 Course material File');\n      this.invalidFile = true;\n      return;\n    } else if (this.invalidSubject) {\n      this.showToastr('top-right', 'danger', 'Please Select Subject');\n      return;\n    }\n\n    this.submit = true;\n    this.invalidFile = false;\n\n    const courseMaterials = new FormData();\n    courseMaterials.append('branch', this.branchId);\n    courseMaterials.append('category', this.course.basicDetails.category);\n    courseMaterials.append('course', this.courseId);\n    courseMaterials.append('subject', this.subject);\n    for (let i = 0; i < this.uploadCourseMaterials.length; i++) {\n      courseMaterials.append(\n        'material',\n        this.uploadCourseMaterials[i],\n        this.uploadCourseMaterials[i].name.substring(\n          0,\n          this.uploadCourseMaterials[i].name.lastIndexOf('.'),\n        ),\n      );\n    }\n\n    this.courseMaterialService.newCourseMaterials(courseMaterials).subscribe(\n      (res: any) => {\n        const totalFiles = this.uploadCourseMaterials.length;\n        const overStorageFiles = res.overStorageFiles;\n        if (overStorageFiles < totalFiles) {\n          this.showToastr(\n            'top-right',\n            'success',\n            `${totalFiles - overStorageFiles} file${\n              totalFiles - overStorageFiles === 1 ? ' is' : 's are'\n            } Uploaded Successfully!`,\n          );\n        }\n\n        if (overStorageFiles > 0) {\n          this.showToastr(\n            'top-right',\n            'danger',\n            `Storage is full, ${overStorageFiles} file${\n              overStorageFiles === 1 ? ' is' : 's are'\n            } not Uploaded`,\n          );\n        }\n\n        this.uploadCourseMaterials = [];\n        this.submit = false;\n        this.cancel();\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.submit = false;\n      },\n    );\n  }\n\n  removeFile(index: number) {\n    this.uploadCourseMaterials.splice(index, 1);\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  cancel() {\n    this.router.navigate(['../'], { relativeTo: this.route });\n  }\n}\n","import { ReactiveFormsModule } from '@angular/forms';\nimport {\n  NbCardModule,\n  NbInputModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbSpinnerModule,\n  NbIconModule,\n  NbTooltipModule,\n} from '@nebular/theme';\nimport { AddCourseMaterialComponent } from './add-course-material.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AddCourseMaterialRoutingModule } from './add-course-material-routing.module';\n\n@NgModule({\n  declarations: [AddCourseMaterialComponent],\n  imports: [\n    CommonModule,\n    AddCourseMaterialRoutingModule,\n    NbCardModule,\n    NbInputModule,\n    NbIconModule,\n    NbTooltipModule,\n    NbSpinnerModule,\n    NbButtonModule,\n    NbSelectModule,\n  ],\n})\nexport class AddCourseMaterialModule {}\n"]}