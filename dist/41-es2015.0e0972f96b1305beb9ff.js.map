{"version":3,"sources":["webpack:///src/app/admin/services/user.service.ts","webpack:///src/app/admin/services/institute.service.ts","webpack:///src/app/admin/admin-menu.ts","webpack:///src/app/admin/menu.service.ts","webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/services/admin-zoom.service.ts"],"names":["UserService","httpService","this","httpPost","api","data","pipe","response","err","user","status","InstituteService","institute","branch","next","instituteId","id","branchId","planType","amount","MENU_ITEMS","title","icon","link","home","hidden","MenuService","menuItems","push","routes","path","component","AdminComponent","menuService","menu","setMenuItemSequence","getMenuItems","children","loadChildren","then","m","HomeModule","canActivate","InstitutesModule","CouponModule","MembershipPlansModule","SmsPackagesModule","StoragePackagesModule","SettingsModule","UsersModule","redirectTo","pathMatch","PageNotFoundModule","AdminRoutingModule","forChild","AdminModule","AdminZoomService","keys","httpGet"],"mappings":"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","file":"x","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpService } from '../../services/shared-services/http.service';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  getUsers() {\r\n    const data = {\r\n      api: 'getUsers',\r\n      data: {},\r\n    };\r\n\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  changeUserStatus(user: string, status: boolean) {\r\n    const data = {\r\n      api: 'changeUserStatus',\r\n      data: { user, status },\r\n    };\r\n\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { BranchModel } from './../../models/branch.model';\r\nimport { InstituteModel } from './../../models/institute.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpService } from '../../services/shared-services/http.service';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class InstituteService {\r\n  private institute = new BehaviorSubject<InstituteModel>(null);\r\n  private instituteId: String;\r\n\r\n  private branch = new BehaviorSubject<BranchModel>(null);\r\n  private branchId: String;\r\n\r\n  getInstitute() {\r\n    return this.institute;\r\n  }\r\n\r\n  setInstitute(institute: InstituteModel) {\r\n    this.institute.next(institute);\r\n  }\r\n\r\n  deleteInstitute() {\r\n    this.institute.next(null);\r\n  }\r\n\r\n  getInstituteId() {\r\n    return this.instituteId;\r\n  }\r\n\r\n  setInstituteId(id: string) {\r\n    this.instituteId = id;\r\n  }\r\n\r\n  deleteInstituteId() {\r\n    this.instituteId = null;\r\n  }\r\n\r\n  getBranch() {\r\n    return this.branch;\r\n  }\r\n\r\n  setBranch(branch: BranchModel) {\r\n    this.branch.next(branch);\r\n  }\r\n\r\n  deleteBranch() {\r\n    this.branch.next(null);\r\n  }\r\n\r\n  getBranchId() {\r\n    return this.branchId;\r\n  }\r\n\r\n  setBranchId(id: string) {\r\n    this.branchId = id;\r\n  }\r\n\r\n  deleteBranchId() {\r\n    this.branchId = null;\r\n  }\r\n\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  getInstitutes() {\r\n    const data = {\r\n      api: 'getInstitutes',\r\n      data: {},\r\n    };\r\n\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  getInstituteBranches(institute: string) {\r\n    const data = {\r\n      api: 'getInstituteBranches',\r\n      data: { institute },\r\n    };\r\n\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  getInstituteBranch(branch: string) {\r\n    const data = {\r\n      api: 'getInstituteBranch',\r\n      data: { branch },\r\n    };\r\n\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  getInstituteBranchHistory(branch: string) {\r\n    const data = {\r\n      api: 'getInstituteBranchHistory',\r\n      data: { branch },\r\n    };\r\n\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  deactivateInstituteBranch(branch: string) {\r\n    const data = {\r\n      api: 'deactivateInstituteBranch',\r\n      data: { branch },\r\n    };\r\n\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  activateInstituteBranch(branch: string, planType: string, amount: any) {\r\n    const data = {\r\n      api: 'activateInstituteBranch',\r\n      data: { branch, planType, amount },\r\n    };\r\n\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { NbMenuItem } from '@nebular/theme';\n\nexport const MENU_ITEMS: NbMenuItem[] = [\n  // 1\n  {\n    title: 'Home',\n    icon: 'home',\n    link: '/admin/home',\n    home: true,\n    hidden: false,\n  },\n\n  // 2\n  {\n    title: 'Institutes',\n    icon: 'layers-outline',\n    link: '/admin/institutes',\n    hidden: false,\n  },\n\n  // 3\n  {\n    title: 'Membership Plans',\n    icon: 'pricetags-outline',\n    link: '/admin/membership-plans',\n    hidden: false,\n  },\n\n  // 4\n  {\n    title: 'SMS Packages',\n    icon: 'message-circle-outline',\n    link: '/admin/sms-packages',\n    hidden: false,\n  },\n\n  // 5\n  {\n    title: 'Storage Packages',\n    icon: 'hard-drive-outline',\n    link: '/admin/storage-packages',\n    hidden: false,\n  },\n\n  // 6\n  {\n    title: 'Coupon Codes',\n    icon: 'credit-card-outline',\n    link: '/admin/coupon',\n    hidden: false,\n  },\n\n  // 7\n  {\n    title: 'Users',\n    icon: 'people-outline',\n    link: '/admin/users',\n    hidden: false,\n  },\n\n  // 8\n  {\n    title: 'Setting',\n    icon: 'settings-2-outline',\n    link: '/admin/settings',\n    hidden: false,\n  },\n];\n","import { NbMenuItem } from '@nebular/theme';\nimport { Injectable } from '@angular/core';\nimport { MENU_ITEMS } from './admin-menu';\n\n@Injectable()\nexport class MenuService {\n  private menuItems: NbMenuItem[] = [];\n\n  getMenuItems() {\n    return this.menuItems;\n  }\n\n  constructor() {}\n\n  setMenuItemSequence() {\n    this.menuItems = [];\n    this.menuItems.push(MENU_ITEMS[0]);\n    this.menuItems.push(MENU_ITEMS[1]);\n    this.menuItems.push(MENU_ITEMS[2]);\n    this.menuItems.push(MENU_ITEMS[3]);\n    this.menuItems.push(MENU_ITEMS[4]);\n    this.menuItems.push(MENU_ITEMS[5]);\n    this.menuItems.push(MENU_ITEMS[6]);\n    this.menuItems.push(MENU_ITEMS[7]);\n  }\n}\n","import { AdminComponent } from './admin.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent,\n    children: [\n      {\n        path: 'home',\n        loadChildren: () => import('./home/home.module').then((m) => m.HomeModule),\n        canActivate: [],\n      },\n\n      {\n        path: 'institutes',\n        loadChildren: () =>\n          import('./institutes/institutes.module').then((m) => m.InstitutesModule),\n        canActivate: [],\n      },\n\n      {\n        path: 'coupon',\n        loadChildren: () => import('./coupon/coupon.module').then((m) => m.CouponModule),\n        canActivate: [],\n      },\n\n      {\n        path: 'membership-plans',\n        loadChildren: () =>\n          import('./membership-plans/membership-plans.module').then((m) => m.MembershipPlansModule),\n        canActivate: [],\n      },\n\n      {\n        path: 'sms-packages',\n        loadChildren: () =>\n          import('./sms-packages/sms-packages.module').then((m) => m.SmsPackagesModule),\n        canActivate: [],\n      },\n\n      {\n        path: 'storage-packages',\n        loadChildren: () =>\n          import('./storage-packages/storage-packages.module').then((m) => m.StoragePackagesModule),\n        canActivate: [],\n      },\n\n      {\n        path: 'settings',\n        loadChildren: () => import('./settings/settings.module').then((m) => m.SettingsModule),\n        canActivate: [],\n      },\n\n      {\n        path: 'users',\n        loadChildren: () => import('./users/users.module').then((m) => m.UsersModule),\n        canActivate: [],\n      },\n\n      {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full',\n      },\n\n      {\n        path: 'page-not-found',\n        loadChildren: () =>\n          import('../shared/page-not-found/page-not-found.module').then(\n            (m) => m.PageNotFoundModule,\n          ),\n      },\n\n      {\n        path: '**',\n        redirectTo: 'page-not-found',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminRoutingModule {}\n","import { NbMenuItem } from '@nebular/theme';\nimport { MenuService } from './menu.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-admin',\n  template: `\n    <ngx-one-column-layout>\n      <nb-menu [items]=\"menu\"></nb-menu>\n      <router-outlet></router-outlet>\n    </ngx-one-column-layout>\n  `,\n  styleUrls: ['./admin.component.scss'],\n})\nexport class AdminComponent implements OnInit {\n  menu: NbMenuItem[] = [];\n\n  constructor(private menuService: MenuService) {}\n\n  ngOnInit(): void {\n    this.menuService.setMenuItemSequence();\n    this.menu = this.menuService.getMenuItems();\n  }\n}\n","import { UserService } from './services/user.service';\nimport { InstituteService } from './services/institute.service';\nimport { AdminZoomService } from './services/admin-zoom.service';\nimport { MenuService } from './menu.service';\nimport { NbMenuModule } from '@nebular/theme';\nimport { ThemeModule } from './../@theme/theme.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './admin.component';\n\n@NgModule({\n  declarations: [AdminComponent],\n  imports: [CommonModule, ThemeModule, NbMenuModule, AdminRoutingModule],\n  providers: [MenuService, AdminZoomService, InstituteService, UserService],\n})\nexport class AdminModule {}\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '../../services/shared-services/http.service';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AdminZoomService {\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  saveAdminZoomKeys(keys: any) {\r\n    const data = {\r\n      api: 'saveAdminZoomKeys',\r\n      data: keys,\r\n    };\r\n\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  getAdminZoomKeys() {\r\n    const data = {\r\n      api: 'getAdminZoomKeys',\r\n    };\r\n\r\n    return this.httpService.httpGet(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  getAdminZoomAuthLink() {\r\n    const data = {\r\n      api: 'getAdminZoomAuthLink',\r\n      data: {},\r\n    };\r\n\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n}\r\n"]}