{"version":3,"sources":["webpack:///src/app/services/sms-package.service.ts","webpack:///src/app/admin/sms-packages/save-sms-package/save-sms-package.component.html","webpack:///src/app/admin/sms-packages/save-sms-package/save-sms-package.component.ts","webpack:///src/app/admin/sms-packages/sms-packages.component.html","webpack:///src/app/admin/sms-packages/sms-packages.component.ts","webpack:///src/app/admin/sms-packages/sms-packages-routing.module.ts","webpack:///src/app/admin/sms-packages/sms-packages.module.ts"],"names":["SMSPackageService","httpService","smsPackage","BehaviorSubject","SMSPackage","this","next","smsPackageId","httpPost","api","data","pipe","map","response","catchError","err","throwError","id","status","SaveSmsPackageComponent","smsPackageService","toastrService","ref","loading","submit","getSMSPackageData","subscribe","smsPackageForm","packageName","validators","required","smsCount","min","price","patchValue","markAllAsTouched","invalid","showToastr","value","_id","editSMSPackage","resSMSPackage","close","error","saveSMSPackage","position","message","show","setSMSPackageData","onClose","SmsPackagesComponent","dialogService","smsPackages","getSMSPackages","open","context","amount","parseFloat","toString","toFixed","openSMSPackageDialog","i","changeSMSPackageStatus","res","deleteSMSPackage","splice","routes","path","component","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","SmsPackagesRoutingModule","forChild","SmsPackagesModule"],"mappings":"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","file":"x","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { HttpService } from './shared-services/http.service';\r\nimport { throwError, BehaviorSubject } from 'rxjs';\r\nimport { SMSPackageModel } from '../models/sms-package.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SMSPackageService {\r\n  private smsPackage = new BehaviorSubject<SMSPackageModel>(null);\r\n  private smsPackageId: string;\r\n\r\n  setSMSPackageData(SMSPackage: SMSPackageModel) {\r\n    this.smsPackage.next(SMSPackage);\r\n  }\r\n\r\n  getSMSPackageData() {\r\n    return this.smsPackage;\r\n  }\r\n\r\n  deleteSMSPackageData() {\r\n    this.smsPackage.next(null);\r\n  }\r\n\r\n  setSMSPackageId(smsPackageId: string) {\r\n    this.smsPackageId = smsPackageId;\r\n  }\r\n\r\n  getSMSPackageId() {\r\n    return this.smsPackageId;\r\n  }\r\n\r\n  deleteSMSPackageId() {\r\n    this.smsPackageId = null;\r\n  }\r\n  constructor(private httpService: HttpService) {}\r\n\r\n  saveSMSPackage(smsPackage: any) {\r\n    const data = { api: 'newSMSPackage', data: smsPackage };\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  changeSMSPackageStatus(id: string, status: boolean) {\r\n    const data = { api: 'changeSMSPackageStatus', data: { id, status } };\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  getSMSPackages() {\r\n    const data = {\r\n      api: 'getSMSPackages',\r\n      data: {},\r\n    };\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  getSMSPackage(id: string) {\r\n    const data = { api: 'getSMSPackage', data: { id } };\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  editSMSPackage(smsPackage: SMSPackageModel) {\r\n    const data = { api: 'updateSMSPackage', data: smsPackage };\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n\r\n  deleteSMSPackage(id: string) {\r\n    const data = { api: 'deleteSMSPackage', data: { id } };\r\n    return this.httpService.httpPost(data).pipe(\r\n      map((response: any) => {\r\n        return response;\r\n      }),\r\n      catchError((err: any) => {\r\n        return throwError(err);\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<nb-card class=\"smsPackage-box\">\n  <nb-card-header>\n    <nb-icon class=\"float-right pointer\" icon=\"close-outline\" (click)=\"onClose()\"></nb-icon>\n    <h3 class=\"\">{{ smsPackage ? 'Update' : 'Add' }} SMS Package</h3>\n  </nb-card-header>\n  <nb-card-body>\n    <form class=\"\" (submit)=\"saveSMSPackage()\" [formGroup]=\"smsPackageForm\">\n      <div class=\"table-responsive\">\n        <table class=\"table table-borderless\">\n          <tbody>\n            <tr>\n              <th>Package Name</th>\n              <td>:</td>\n              <td>\n                <div class=\"form-control-group\">\n                  <input\n                    type=\"text\"\n                    nbInput\n                    id=\"input-package-name\"\n                    name=\"packageName\"\n                    formControlName=\"packageName\"\n                    placeholder=\"Package Name\"\n                    fullWidth\n                    [status]=\"\n                      smsPackageForm.get('packageName').touched\n                        ? smsPackageForm.get('packageName').invalid\n                          ? 'danger'\n                          : 'success'\n                        : 'basic'\n                    \"\n                  />\n                  <ng-container *ngIf=\"smsPackageForm.get('packageName').touched\">\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"smsPackageForm.get('packageName').errors?.required\"\n                    >\n                      SMS Package Name is required!\n                    </p>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <th>SMS Count</th>\n              <td>:</td>\n              <td>\n                <div class=\"form-control-group\">\n                  <input\n                    type=\"number\"\n                    nbInput\n                    id=\"input-sms-count\"\n                    name=\"smsCount\"\n                    min=\"0\"\n                    formControlName=\"smsCount\"\n                    placeholder=\"SMS Count\"\n                    fullWidth\n                    [status]=\"\n                      smsPackageForm.get('smsCount').touched\n                        ? smsPackageForm.get('smsCount').invalid\n                          ? 'danger'\n                          : 'success'\n                        : 'basic'\n                    \"\n                  />\n                  <ng-container *ngIf=\"smsPackageForm.get('smsCount').touched\">\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"smsPackageForm.get('smsCount').errors?.required\"\n                    >\n                      SMS Count is required!\n                    </p>\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"smsPackageForm.get('smsCount').errors?.min\"\n                    >\n                      SMS Count should be more than or equal to 0\n                    </p>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <th>Price</th>\n              <td>:</td>\n              <td>\n                <div class=\"form-control-group\">\n                  <input\n                    type=\"number\"\n                    nbInput\n                    id=\"input-price\"\n                    name=\"price\"\n                    min=\"0\"\n                    formControlName=\"price\"\n                    placeholder=\"Price\"\n                    fullWidth\n                    [status]=\"\n                      smsPackageForm.get('price').touched\n                        ? smsPackageForm.get('price').invalid\n                          ? 'danger'\n                          : 'success'\n                        : 'basic'\n                    \"\n                  />\n                  <ng-container *ngIf=\"smsPackageForm.get('price').touched\">\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"smsPackageForm.get('price').errors?.required\"\n                    >\n                      Price Amount is required!\n                    </p>\n                    <p\n                      class=\"caption status-danger\"\n                      *ngIf=\"smsPackageForm.get('price').errors?.min\"\n                    >\n                      Price Amount should be more than or equal to 0\n                    </p>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <hr />\n\n      <div class=\"row\">\n        <div class=\"col-md-12 text-right\">\n          <button\n            type=\"submit\"\n            nbButton\n            size=\"small\"\n            [disabled]=\"submit\"\n            [nbSpinner]=\"submit\"\n            nbSpinnerStatus=\"primary\"\n            nbSpinnerSize=\"small\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { SMSPackageService } from './../../../services/sms-package.service';\nimport { SMSPackageModel } from './../../../models/sms-package.model';\nimport { NbDialogRef, NbToastrService } from '@nebular/theme';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'ngx-save-sms-package',\n  templateUrl: './save-sms-package.component.html',\n  styleUrls: ['./save-sms-package.component.scss'],\n})\nexport class SaveSmsPackageComponent implements OnInit, OnDestroy {\n  loading: boolean;\n  submit: boolean;\n\n  smsPackage: SMSPackageModel;\n  smsPackageForm: FormGroup;\n\n  constructor(\n    private smsPackageService: SMSPackageService,\n    private toastrService: NbToastrService,\n    protected ref: NbDialogRef<SaveSmsPackageComponent>,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.submit = false;\n\n    this.smsPackageService.getSMSPackageData().subscribe((smsPackage: SMSPackageModel) => {\n      this.smsPackageForm = new FormGroup({\n        packageName: new FormControl(null, {\n          validators: [Validators.required],\n        }),\n        smsCount: new FormControl(null, {\n          validators: [Validators.required, Validators.min(0)],\n        }),\n        price: new FormControl(null, {\n          validators: [Validators.required, Validators.min(0)],\n        }),\n      });\n\n      if (smsPackage) {\n        this.smsPackage = smsPackage;\n\n        this.smsPackageForm.patchValue({\n          packageName: smsPackage.packageName,\n          smsCount: smsPackage.smsCount,\n          price: smsPackage.price,\n        });\n      }\n\n      this.loading = false;\n    });\n  }\n\n  saveSMSPackage() {\n    this.smsPackageForm.markAllAsTouched();\n\n    if (this.smsPackageForm.invalid) {\n      this.showToastr('top-right', 'danger', 'SMSPackage Details are required');\n      return;\n    }\n\n    this.submit = true;\n\n    const smsPackage: any = { ...this.smsPackageForm.value };\n\n    if (!this.smsPackage) {\n      this.smsPackageService.saveSMSPackage(smsPackage).subscribe(\n        (resSMSPackage: SMSPackageModel) => {\n          this.ref.close(resSMSPackage);\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.submit = false;\n        },\n      );\n    } else {\n      smsPackage._id = this.smsPackage._id;\n      this.smsPackageService.editSMSPackage(smsPackage).subscribe(\n        (resSMSPackage: SMSPackageModel) => {\n          this.ref.close(resSMSPackage);\n        },\n        (error: any) => {\n          this.showToastr('top-right', 'danger', error);\n          this.submit = false;\n        },\n      );\n    }\n  }\n\n  onClose() {\n    this.ref.close();\n  }\n\n  private showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n\n  ngOnDestroy() {\n    this.smsPackageService.setSMSPackageData(null);\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"row\">\n      <div class=\"col-md-9 col-sm-8\">\n        <h3>SMS Packages</h3>\n      </div>\n      <div class=\"col-md-3 col-sm-4\">\n        <button nbButton status=\"primary\" size=\"small\" fullWidth (click)=\"openSMSPackageDialog()\">\n          Add SMS Package\n        </button>\n      </div>\n    </div>\n  </nb-card-header>\n  <nb-card-body>\n    <div class=\"row\" *ngIf=\"!loading; else loadingData\">\n      <div class=\"col-12\">\n        <div class=\"table-responsive\" *ngIf=\"smsPackages.length > 0; else noSMSPackages\">\n          <table class=\"table\">\n            <thead>\n              <th>#</th>\n              <th>SMS Package</th>\n              <th>SMS Count</th>\n              <th>Price</th>\n              <th colspan=\"3\">Action</th>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let smsPackage of smsPackages; let i = index\">\n                <td>{{ i + 1 }}</td>\n                <td>{{ smsPackage.packageName }}</td>\n                <td>{{ smsPackage.smsCount }}</td>\n                <td>{{ getAmount(smsPackage.price) }}/-</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    status=\"basic\"\n                    (click)=\"editSMSPackage(smsPackage)\"\n                  >\n                    Edit\n                  </button>\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    [status]=\"smsPackage.status ? 'warning' : 'success'\"\n                    (click)=\"changeSMSPackageStatus(smsPackage._id, !smsPackage.status, i)\"\n                  >\n                    {{ smsPackage.status ? 'Deactivate' : 'Activate' }}\n                  </button>\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    nbButton\n                    size=\"small\"\n                    status=\"danger\"\n                    (click)=\"deleteSMSPackage(smsPackage._id, i)\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </nb-card-body>\n</nb-card>\n\n<ng-template #loadingData>\n  <p class=\"pt-5 pb-5 text-center\">Loading...</p>\n</ng-template>\n\n<ng-template #noSMSPackages>\n  <p class=\"pt-5 pb-5 text-center\">No SMS Packages Available</p>\n</ng-template>\n","import { SaveSmsPackageComponent } from './save-sms-package/save-sms-package.component';\nimport { SMSPackageModel } from './../../models/sms-package.model';\nimport { NbToastrService, NbDialogService } from '@nebular/theme';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SMSPackageService } from './../../services/sms-package.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ngx-sms-packages',\n  templateUrl: './sms-packages.component.html',\n  styleUrls: ['./sms-packages.component.scss'],\n})\nexport class SmsPackagesComponent implements OnInit {\n  loading: boolean;\n\n  smsPackages: SMSPackageModel[];\n\n  constructor(\n    private smsPackageService: SMSPackageService,\n    private toastrService: NbToastrService,\n    private dialogService: NbDialogService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.smsPackages = [];\n\n    this.getSMSPackages();\n  }\n\n  getSMSPackages() {\n    this.loading = true;\n    this.smsPackageService.getSMSPackages().subscribe(\n      (smsPackages: SMSPackageModel[]) => {\n        this.smsPackages = smsPackages;\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  openSMSPackageDialog() {\n    this.dialogService\n      .open(SaveSmsPackageComponent, {\n        context: {},\n      })\n      .onClose.subscribe((smsPackage: any) => smsPackage && this.getSMSPackages());\n  }\n\n  getAmount(amount: any) {\n    amount = parseFloat(amount.toString());\n    return amount.toFixed(2).toString();\n  }\n\n  editSMSPackage(smsPackage: SMSPackageModel) {\n    this.smsPackageService.setSMSPackageData(smsPackage);\n    this.openSMSPackageDialog();\n  }\n\n  changeSMSPackageStatus(smsPackage: string, status: boolean, i: number) {\n    this.loading = true;\n\n    this.smsPackageService.changeSMSPackageStatus(smsPackage, status).subscribe(\n      (res: any) => {\n        this.showToastr('top-right', 'success', 'SMS Package Status Updated Successfully');\n        this.smsPackages[i].status = status;\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  deleteSMSPackage(smsPackage: string, i: number) {\n    this.loading = true;\n\n    this.smsPackageService.deleteSMSPackage(smsPackage).subscribe(\n      (res: any) => {\n        this.showToastr('top-right', 'success', 'SMS Package Deleted Successfully');\n        this.smsPackages.splice(i, 1);\n        this.loading = false;\n      },\n      (error: any) => {\n        this.showToastr('top-right', 'danger', error);\n        this.loading = false;\n      },\n    );\n  }\n\n  showToastr(position: any, status: any, message: string) {\n    this.toastrService.show(status, message, {\n      position,\n      status,\n    });\n  }\n}\n","import { SmsPackagesComponent } from './sms-packages.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SmsPackagesComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../shared/page-not-found/page-not-found.module').then((m) => m.PageNotFoundModule),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SmsPackagesRoutingModule {}\n","import { ReactiveFormsModule } from '@angular/forms';\nimport {\n  NbCardModule,\n  NbInputModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbSpinnerModule,\n  NbIconModule,\n} from '@nebular/theme';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SmsPackagesRoutingModule } from './sms-packages-routing.module';\n\nimport { SmsPackagesComponent } from './sms-packages.component';\nimport { SaveSmsPackageComponent } from './save-sms-package/save-sms-package.component';\n\n@NgModule({\n  declarations: [SmsPackagesComponent, SaveSmsPackageComponent],\n  imports: [\n    CommonModule,\n    SmsPackagesRoutingModule,\n    NbCardModule,\n    NbInputModule,\n    NbButtonModule,\n    NbSelectModule,\n    NbSpinnerModule,\n    NbIconModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class SmsPackagesModule {}\n"]}