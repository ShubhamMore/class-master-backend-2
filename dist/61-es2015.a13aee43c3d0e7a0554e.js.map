{"version":3,"sources":["webpack:///src/app/admin/settings/settings.component.html","webpack:///src/app/admin/settings/settings-routing.module.ts","webpack:///src/app/admin/settings/settings.component.ts","webpack:///src/app/admin/settings/settings.module.ts"],"names":["routes","path","component","SettingsComponent","router","route","toastrService","adminZoomService","this","loading","zoomShowSecret","zoomKeysForm","accessToken","validators","required","secretToken","getAdminZoomKeys","subscribe","zoomKeys","patchValue","accessKey","secretKey","error","showToastr","markAllAsTouched","invalid","saveAdminZoomKeys","value","res","getAdminZoomAuthLink","responce","window","open","authLink","position","status","message","show","navigate","relativeTo","back","saveZoomKeys","toggleShowZoomSecret","loadChildren","then","m","PageNotFoundModule","redirectTo","pathMatch","SettingsRoutingModule","forChild","SettingsModule"],"mappings":"gQAqCkB,wCAIE,4DACF,+B,yBAXF,0CAME,0CAMF,wC,4CAJI,qK,sBAkDF,wCAIE,4DACF,+B,yBAXF,0CAME,0CAMF,wC,4CAJI,qKCvFpB,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCKG,M,MAAMC,EAOX,YACUC,EACAC,EACAC,EACAC,GAHA,KAAAH,SACA,KAAAC,QACA,KAAAC,gBACA,KAAAC,mBAGV,WACEC,KAAKC,SAAU,EAEfD,KAAKE,gBAAiB,EACtBF,KAAKG,aAAe,IAAI,IAAU,CAChCC,YAAa,IAAI,IAAY,KAAM,CAAEC,WAAY,CAAC,IAAWC,YAC7DC,YAAa,IAAI,IAAY,KAAM,CAAEF,WAAY,CAAC,IAAWC,cAG/DN,KAAKD,iBAAiBS,mBAAmBC,UACtCC,IACKA,GACFV,KAAKG,aAAaQ,WAAW,CAC3BP,YAAaM,EAASE,UACtBL,YAAaG,EAASG,YAG1Bb,KAAKC,SAAU,GAEhBa,IACCd,KAAKe,WAAW,YAAa,SAAUD,GACvCd,KAAKC,SAAU,IAKrB,eACED,KAAKG,aAAaa,mBAEdhB,KAAKG,aAAac,QACpBjB,KAAKe,WAAW,YAAa,SAAU,gCASzCf,KAAKD,iBAAiBmB,kBALJ,CAChBN,UAAWZ,KAAKG,aAAagB,MAAMf,YACnCS,UAAWb,KAAKG,aAAagB,MAAMZ,cAGSE,UAC3CW,IACCpB,KAAKD,iBAAiBsB,uBAAuBZ,UAAWa,IACxCC,OAAOC,KACnBF,EAASG,SACT,SACA,wEAOJzB,KAAKe,WAAW,YAAa,UAAW,4CAEzCD,IACCd,KAAKe,WAAW,YAAa,SAAUD,GACvCd,KAAKC,SAAU,IAKrB,uBACED,KAAKE,gBAAkBF,KAAKE,eAGtB,WAAWwB,EAAeC,EAAaC,GAC7C5B,KAAKF,cAAc+B,KAAKF,EAAQC,EAAS,CACvCF,WACAC,WAIJ,OACE3B,KAAKJ,OAAOkC,SAAS,CAAC,OAAQ,CAAEC,WAAY/B,KAAKH,S,6CAvFxCF,GAAiB,2J,mDAAjBA,EAAiB,49BFZ9B,2CACE,kDACE,4CAAmE,qDAAS,EAAAqC,UAC1E,kCACF,8BACA,sCAAI,oCAAQ,8BACd,8BACA,gDACE,yCACE,yCACE,0CAAiC,sDAAU,EAAAC,kBACzC,0CACE,0CACE,0CACE,4CAA8C,+CAAkB,8BAChE,uCAgBA,qDAaF,8BACF,8BAEA,0CACE,0CACE,4CAA8C,+CAAkB,8BAChE,kDACE,wCAgBA,8CAME,qDAAS,EAAAC,0BAET,0CAMF,8BACF,8BACA,qDAaF,8BACF,8BAEA,2CACE,8CACE,mCACF,8BACF,8BACF,8BACF,8BACF,8BACF,8BACF,8BACF,+B,MAnGc,kFAaI,+KASA,mJAoBE,iGAA6C,yHAwB3C,iHAEA,sFAMJ,qJ,2FExEX,IDFL,CACEzC,KAAM,iBACN0C,aAAc,IACZ,iCAA4DC,KAAMC,GAAMA,EAAEC,qBAG9E,CACE7C,KAAM,KACN8C,WAAY,iBACZC,UAAW,SAQR,Y,MAAMC,G,yDAAAA,I,+EAAAA,IAAqB,SAHvB,CAAC,IAAaC,SAASlD,IACtB,O,GAEL,GESA,Q,MAAMmD,G,yDAAAA,I,+EAAAA,IAAc,SAdhB,CACP,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,KACA,IACA,M,GAGG","file":"x","sourcesContent":["<nb-card>\r\n  <nb-card-header>\r\n    <button class=\"float-right\" nbButton size=\"small\" status=\"warning\" (click)=\"back()\">\r\n      Back\r\n    </button>\r\n    <h3>Settings</h3>\r\n  </nb-card-header>\r\n  <nb-card-body>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8 col-sm-10 col-12 mx-auto\">\r\n        <form [formGroup]=\"zoomKeysForm\" (submit)=\"saveZoomKeys()\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 col-12\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-access-token\">Zoom Access Token:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  nbInput\r\n                  id=\"input-access-token\"\r\n                  name=\"accessToken\"\r\n                  formControlName=\"accessToken\"\r\n                  placeholder=\"Zoom Access Token\"\r\n                  fullWidth\r\n                  [status]=\"\r\n                    zoomKeysForm.get('accessToken').touched\r\n                      ? zoomKeysForm.get('accessToken').invalid\r\n                        ? 'danger'\r\n                        : 'success'\r\n                      : 'basic'\r\n                  \"\r\n                />\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    zoomKeysForm.get('accessToken').invalid &&\r\n                    zoomKeysForm.get('accessToken').touched\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"zoomKeysForm.get('accessToken').errors?.required\"\r\n                  >\r\n                    Zoom Access Token is required!\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-md-6 col-12\">\r\n              <div class=\"form-control-group\">\r\n                <label class=\"label\" for=\"input-secret-token\">Zoom Secret Token:</label>\r\n                <nb-form-field>\r\n                  <input\r\n                    [type]=\"zoomShowSecret ? 'text' : 'password'\"\r\n                    nbInput\r\n                    id=\"input-secret-token\"\r\n                    name=\"secretToken\"\r\n                    formControlName=\"secretToken\"\r\n                    placeholder=\"Zoom Secret Token\"\r\n                    fullWidth\r\n                    [status]=\"\r\n                      zoomKeysForm.get('secretToken').touched\r\n                        ? zoomKeysForm.get('secretToken').invalid\r\n                          ? 'danger'\r\n                          : 'success'\r\n                        : 'basic'\r\n                    \"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    nbSuffix\r\n                    nbButton\r\n                    size=\"small\"\r\n                    ghost\r\n                    (click)=\"toggleShowZoomSecret()\"\r\n                  >\r\n                    <nb-icon\r\n                      [icon]=\"zoomShowSecret ? 'eye-outline' : 'eye-off-2-outline'\"\r\n                      pack=\"eva\"\r\n                      [attr.aria-label]=\"zoomShowSecret ? 'show secret' : 'hide secret'\"\r\n                    >\r\n                    </nb-icon>\r\n                  </button>\r\n                </nb-form-field>\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    zoomKeysForm.get('secretToken').invalid &&\r\n                    zoomKeysForm.get('secretToken').touched\r\n                  \"\r\n                >\r\n                  <p\r\n                    class=\"caption status-danger\"\r\n                    *ngIf=\"zoomKeysForm.get('secretToken').errors?.required\"\r\n                  >\r\n                    Zoom Secret Token is required!\r\n                  </p>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-12 mt-3\">\r\n              <button type=\"submit\" class=\"float-right\" nbButton size=\"small\" status=\"primary\">\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { SettingsComponent } from './settings.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsComponent,\n  },\n\n  {\n    path: 'page-not-found',\n    loadChildren: () =>\n      import('../../shared/page-not-found/page-not-found.module').then((m) => m.PageNotFoundModule),\n  },\n\n  {\n    path: '**',\n    redirectTo: 'page-not-found',\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsRoutingModule {}\n","import { NbToastrService } from '@nebular/theme';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { InstituteKeysModel } from './../../models/institute-keys.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AdminZoomService } from '../services/admin-zoom.service';\r\n\r\n@Component({\r\n  selector: 'ngx-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  loading: boolean;\r\n  instituteKeys: InstituteKeysModel;\r\n\r\n  zoomKeysForm: FormGroup;\r\n  zoomShowSecret: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastrService: NbToastrService,\r\n    private adminZoomService: AdminZoomService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n\r\n    this.zoomShowSecret = false;\r\n    this.zoomKeysForm = new FormGroup({\r\n      accessToken: new FormControl(null, { validators: [Validators.required] }),\r\n      secretToken: new FormControl(null, { validators: [Validators.required] }),\r\n    });\r\n\r\n    this.adminZoomService.getAdminZoomKeys().subscribe(\r\n      (zoomKeys: any) => {\r\n        if (zoomKeys) {\r\n          this.zoomKeysForm.patchValue({\r\n            accessToken: zoomKeys.accessKey,\r\n            secretToken: zoomKeys.secretKey,\r\n          });\r\n        }\r\n        this.loading = false;\r\n      },\r\n      (error: any) => {\r\n        this.showToastr('top-right', 'danger', error);\r\n        this.loading = false;\r\n      },\r\n    );\r\n  }\r\n\r\n  saveZoomKeys() {\r\n    this.zoomKeysForm.markAllAsTouched();\r\n\r\n    if (this.zoomKeysForm.invalid) {\r\n      this.showToastr('top-right', 'danger', 'Please Enter valid Zoom Keys');\r\n      return;\r\n    }\r\n\r\n    const keys: any = {\r\n      accessKey: this.zoomKeysForm.value.accessToken,\r\n      secretKey: this.zoomKeysForm.value.secretToken,\r\n    };\r\n\r\n    this.adminZoomService.saveAdminZoomKeys(keys).subscribe(\r\n      (res: any) => {\r\n        this.adminZoomService.getAdminZoomAuthLink().subscribe((responce: any) => {\r\n          const popup = window.open(\r\n            responce.authLink,\r\n            '_blank',\r\n            'toolbar,scrollbars,resizable,top=200,left=500,width=400,height=400',\r\n          );\r\n          // setTimeout(() => {\r\n          //   popup.close();\r\n          // }, 3000);\r\n        });\r\n\r\n        this.showToastr('top-right', 'success', 'Institute Zoom Keys Saved Successfully!');\r\n      },\r\n      (error: any) => {\r\n        this.showToastr('top-right', 'danger', error);\r\n        this.loading = false;\r\n      },\r\n    );\r\n  }\r\n\r\n  toggleShowZoomSecret() {\r\n    this.zoomShowSecret = !this.zoomShowSecret;\r\n  }\r\n\r\n  private showToastr(position: any, status: any, message: string) {\r\n    this.toastrService.show(status, message, {\r\n      position,\r\n      status,\r\n    });\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['../'], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThemeModule } from './../../@theme/theme.module';\nimport {\n  NbCardModule,\n  NbUserModule,\n  NbButtonModule,\n  NbIconModule,\n  NbInputModule,\n  NbTooltipModule,\n  NbFormFieldModule,\n} from '@nebular/theme';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsComponent } from './settings.component';\n\n@NgModule({\n  declarations: [SettingsComponent],\n\n  imports: [\n    CommonModule,\n    ThemeModule,\n    ReactiveFormsModule,\n    NbCardModule,\n    NbUserModule,\n    NbIconModule,\n    NbInputModule,\n    NbButtonModule,\n    NbTooltipModule,\n    NbFormFieldModule,\n    SettingsRoutingModule,\n  ],\n})\nexport class SettingsModule {}\n"]}